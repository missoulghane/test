<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Ocrus</name>
    </assembly>
    <members>
        <member name="T:Ocrus.Common.EnumHelper">
            <summary>
            pick from syobusiness
            </summary>
        </member>
        <member name="M:Ocrus.Common.EnumHelper.GetDescription(System.Enum)">
            <summary>
            Retourne la valeur de l'attribut Description
            </summary>
            <param name="value">Valeur de l'enum associée</param>
            <returns>Valeur de l'attribut Description</returns>
        </member>
        <member name="M:Ocrus.Common.EnumHelper.GetAttribute``1(System.Enum)">
            <summary>
            Retourne l'attribut demandé positionné sur la valeur d'enum indiquée
            </summary>
            <typeparam name="TAttributeType">Type de l'attribut récupérer</typeparam>
            <param name="enumValue">Valeur de l'énumération</param>
            <returns>Attribut demandé</returns>
        </member>
        <member name="M:Ocrus.Common.EnumHelper.GetValueFromDescription``1(System.String)">
            <summary>
            Retourne la valeur de l'enum <typeparamref name="T"/> en fonction de <paramref name="description"/>
            </summary>
            <typeparam name="T">Type de l'enum</typeparam>
            <param name="description">Valeur de l'attribut description</param>
            <returns>Valeur de l'enum associée</returns>
        </member>
        <member name="T:Ocrus.Common.ListHelper">
            <summary>
            Classe utilitaire de manipulation de listes
            </summary>
        </member>
        <member name="M:Ocrus.Common.ListHelper.SplitBy``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})">
            <summary>
            Sépare la liste en sous listes en coupant aux éléments qui répondent au predicat. L'élément répondant au prédicat est conservé <br />
            La première liste contient les éléments en tête de liste avant le premier élément répondant au prédicat. <br />
            Si le premier élément de <paramref name="collection"/> répond au prédicat, la première liste est vide
            </summary>
            <typeparam name="T">Type des éléments</typeparam>
            <param name="collection">la collection à diviser</param>
            <param name="predicate">Fonction qui retourne true si l'élément est un séparateur, false sinon</param>
            <returns>Liste de liste, découpée selon predicate</returns>
        </member>
        <member name="M:Ocrus.Common.ListHelper.ZipThree``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Collections.Generic.IEnumerable{``2},System.Func{``0,``1,``2,``3})">
            <summary>
            Zip sur 3 listes. <Br/>
            S'arrête à la taille de la liste la plus petite.
            </summary>
            <typeparam name="T1">Première liste</typeparam>
            <typeparam name="T2">Deuxième liste</typeparam>
            <typeparam name="T3">Troisième liste</typeparam>
            <typeparam name="TResult">Liste de TResult</typeparam>
            <param name="source">Type des éléments de la liste 1</param>
            <param name="second">Type des éléments de la liste 2</param>
            <param name="third">Type des éléments de la liste 3</param>
            <param name="func">Fonction qui "pack" les 3 éléments T1, T2, T3 en un TResult</param>
            <returns>Enumerable de TResult</returns>
        </member>
        <member name="T:Ocrus.Common.OneOf.OOHelper">
            <summary>
            Fonctions utiliraires autour des OneOf
            </summary>
        </member>
        <member name="M:Ocrus.Common.OneOf.OOHelper.FilterTA``2(System.Collections.Generic.IEnumerable{Ocrus.OneOfTypes.OneOf{``0,``1}})">
            <summary>
            Ne garde que les éléments de type <typeparamref name="TA"/>
            </summary>
            <typeparam name="TA">Premier type</typeparam>
            <typeparam name="TB">Deuxième type</typeparam>
            <param name="oos">Enumération de OneOf à filtrer</param>
            <returns>Enumération de OneOf filtrée selon <typeparamref name="TA"/></returns>
        </member>
        <member name="M:Ocrus.Common.OneOf.OOHelper.FilterTA``2(Ocrus.OneOfTypes.OneOf{``0,``1}[])">
            <summary>
            Ne garde que les éléments de type <typeparamref name="TA"/>
            </summary>
            <typeparam name="TA">Premier type</typeparam>
            <typeparam name="TB">Deuxième type</typeparam>
            <param name="oos">Enumération de OneOf à filtrer</param>
            <returns>Enumération de OneOf filtrée selon <typeparamref name="TA"/></returns>
        </member>
        <member name="M:Ocrus.Common.OneOf.OOHelper.FilterTB``2(System.Collections.Generic.IEnumerable{Ocrus.OneOfTypes.OneOf{``0,``1}})">
            <summary>
            Ne garde que les éléments de type <typeparamref name="TB"/>
            </summary>
            <typeparam name="TA">Premier type</typeparam>
            <typeparam name="TB">Deuxième type</typeparam>
            <param name="oos">Enumération de OneOf à filtrer</param>
            <returns>Enumération de OneOf filtrée selon <typeparamref name="TB"/></returns>
        </member>
        <member name="M:Ocrus.Common.OneOf.OOHelper.FilterTB``2(Ocrus.OneOfTypes.OneOf{``0,``1}[])">
            <summary>
            Ne garde que les éléments de type <typeparamref name="TB"/>
            </summary>
            <typeparam name="TA">Premier type</typeparam>
            <typeparam name="TB">Deuxième type</typeparam>
            <param name="oos">Enumération de OneOf à filtrer</param>
            <returns>Enumération de OneOf filtrée selon <typeparamref name="TB"/></returns>
        </member>
        <member name="T:Ocrus.Common.ParametersCheck">
            <summary>
            Fonctions utilitaire de vérification de validité de paramètres
            </summary>
        </member>
        <member name="M:Ocrus.Common.ParametersCheck.NotNullNorEmpty(System.String,System.String)">
            <summary>
            Vérifie si la chaine donnée en paramètre n'est ni null ni vide
            </summary>
            <param name="name">Nom du paramètre</param>
            <param name="value">Valeur à vérifier</param>
            <exception cref="T:System.ArgumentException">Déclenche une exception si la valeur est null ou vide</exception>
        </member>
        <member name="T:Ocrus.Common.InvalidReason">
            <summary>
            Raison pour laquelle une feuille va être mise en corbeille.
            </summary>
        </member>
        <member name="F:Ocrus.Common.InvalidReason.Rejected">
            <summary>
            Feuille rejetée
            </summary>
        </member>
        <member name="F:Ocrus.Common.InvalidReason.Orphan">
            <summary>
            Feuille orpheline (Feuille qui appartient à aucun pli.) 
            </summary>
        </member>
        <member name="T:Ocrus.Common.Extensions.ToReadOnlyDictionary">
            <summary>
            Méthodes d'extensions sur <see cref="T:System.Collections.Generic.IDictionary`2"/>
            </summary>
        </member>
        <member name="M:Ocrus.Common.Extensions.ToReadOnlyDictionary.ToRO``2(System.Collections.Generic.IDictionary{``0,``1})">
            <summary>
            Transforme un dictionnaire mutable en dictionnaire readonly
            </summary>
            <typeparam name="K">Type des clefs</typeparam>
            <typeparam name="V">Type des valeurs</typeparam>
            <param name="dico">Dictionnaire mutable</param>
            <returns>Dictionnaire immutable</returns>
        </member>
        <member name="T:Ocrus.OneOfTypes.Nothing">
            <summary>
            Classe marquant l'absence de quelquechose. <Br />
            Utile avec l'utilisation de <see cref="N:Ocrus.OneOfTypes"/>
            </summary>
        </member>
        <member name="F:Ocrus.OneOfTypes.Nothing.Instance">
            <summary>
            Instance unique de Nothing
            </summary>
        </member>
        <member name="T:Ocrus.OneOfTypes.OneOf`2">
            <summary>
            Type somme sur deux types. <Br/>
            Represente le fait que l'on ait soit <typeparamref name="T0"/> soit <typeparamref name="T1"/>.
            </summary>
            <typeparam name="T0">Premier type</typeparam>
            <typeparam name="T1">Deuxième type</typeparam>    
        </member>
        <member name="M:Ocrus.OneOfTypes.OneOf`2.op_Implicit(`0)~Ocrus.OneOfTypes.OneOf{`0,`1}">
            <summary>
            Converstion implicite en OneOf depuis <typeparamref name="T0"/>
            </summary>
            <param name="t0">Type d'origine</param>
        </member>
        <member name="M:Ocrus.OneOfTypes.OneOf`2.op_Implicit(`1)~Ocrus.OneOfTypes.OneOf{`0,`1}">
            <summary>
            Converstion implicite en OneOf depuis <typeparamref name="T1"/>
            </summary>
            <param name="t1">Type d'origine</param>
        </member>
        <member name="M:Ocrus.OneOfTypes.OneOf`2.#ctor(`0)">
            <summary>
            Instancie un OneOf depuis un <typeparamref name="T0"/>
            </summary>
            <param name="value0">Valeur à wrapper dans le OneOf</param>
        </member>
        <member name="M:Ocrus.OneOfTypes.OneOf`2.#ctor(`1)">
            <summary>
            Instancie un OneOf depuis un <typeparamref name="T1"/>
            </summary>
            <param name="value1">Valeur à wrapper dans le OneOf</param>
        </member>
        <member name="M:Ocrus.OneOfTypes.OneOf`2.Match``1(System.Func{`0,``0},System.Func{`1,``0})">
            <summary>
            Switch case avec valeur de retour sur les types que peut contenir le OneOf. <Br />
            Oblige à traiter les 2 cas possibles.
            </summary>
            <typeparam name="TResult">Type de retour</typeparam>
            <param name="f0">Traitement à effectuer dans le cas où OneOf contient un type <typeparamref name="T0"/></param>
            <param name="f1">Traitement à effectuer dans le cas où OneOf contient un type <typeparamref name="T1"/></param>
            <returns>Valeur résultante du traitement</returns>
        </member>
        <member name="M:Ocrus.OneOfTypes.OneOf`2.With(System.Action{`0},System.Action{`1})">
            <summary>
            Switch case sans valeur de retour sur les types que peut contenir le OneOf. <Br />
            Oblige à traiter les 2 cas possibles. 
            </summary>
            <param name="f0">Traitement à effectuer dans le cas où OneOf contient un type <typeparamref name="T0"/></param>
            <param name="f1">Traitement à effectuer dans le cas où OneOf contient un type <typeparamref name="T1"/></param>
        </member>
        <member name="M:Ocrus.OneOfTypes.OneOf`2.Is``1">
            <summary>
            Teste le type de la valeur contenue dans le OneOf
            </summary>
            <typeparam name="T">Type à tester</typeparam>
            <returns>True si le type de la valeur contenue dans OneOf est <typeparamref name="T"/> false sinon</returns>
        </member>
        <member name="M:Ocrus.OneOfTypes.OneOf`2.IsSameType(Ocrus.OneOfTypes.OneOf{`0,`1})">
            <summary>
            Teste si les deux OneOf contiennent une valeur de même type
            </summary>
            <param name="other">OneOf avec lequel tester</param>
            <returns>True si les deux OneOf contiennent une valeur de même type, False sinon</returns>
        </member>
        <member name="T:Ocrus.OneOfTypes.OneOf`3">
            <summary>
            Type somme sur deux types. <Br/>
            Represente le fait que l'on ait soit <typeparamref name="T0"/> soit <typeparamref name="T1"/> soit <typeparamref name="T2"/>.
            </summary>
            <typeparam name="T0">Premier type</typeparam>
            <typeparam name="T1">Deuxième type</typeparam>
            <typeparam name="T2">Troisème type</typeparam>
        </member>
        <member name="M:Ocrus.OneOfTypes.OneOf`3.op_Implicit(`0)~Ocrus.OneOfTypes.OneOf{`0,`1,`2}">
            <summary>
            Converstion implicite en OneOf depuis <typeparamref name="T0"/>
            </summary>
            <param name="t0">Type d'origine</param>
        </member>
        <member name="M:Ocrus.OneOfTypes.OneOf`3.op_Implicit(`1)~Ocrus.OneOfTypes.OneOf{`0,`1,`2}">
            <summary>
            Converstion implicite en OneOf depuis <typeparamref name="T1"/>
            </summary>
            <param name="t1">Type d'origine</param>
        </member>
        <member name="M:Ocrus.OneOfTypes.OneOf`3.op_Implicit(`2)~Ocrus.OneOfTypes.OneOf{`0,`1,`2}">
            <summary>
            Converstion implicite en OneOf depuis <typeparamref name="T2"/>
            </summary>
            <param name="t2">Type d'origine</param>
        </member>
        <member name="M:Ocrus.OneOfTypes.OneOf`3.#ctor(`0)">
            <summary>
            Instancie un OneOf depuis un <typeparamref name="T0"/>
            </summary>
            <param name="value0">Valeur à wrapper dans le OneOf</param>
        </member>
        <member name="M:Ocrus.OneOfTypes.OneOf`3.#ctor(`1)">
            <summary>
            Instancie un OneOf depuis un <typeparamref name="T1"/>
            </summary>
            <param name="value1">Valeur à wrapper dans le OneOf</param>
        </member>
        <member name="M:Ocrus.OneOfTypes.OneOf`3.#ctor(`2)">
            <summary>
            Instancie un OneOf depuis un <typeparamref name="T2"/>
            </summary>
            <param name="value2">Valeur à wrapper dans le OneOf</param>
        </member>
        <member name="M:Ocrus.OneOfTypes.OneOf`3.Match``1(System.Func{`0,``0},System.Func{`1,``0},System.Func{`2,``0})">
            <summary>
            Switch case avec valeur de retour sur les types que peut contenir le OneOf. <Br />
            Oblige à traiter les 3 cas possibles.
            </summary>
            <typeparam name="TResult">Type de retour</typeparam>
            <param name="f0">Traitement à effectuer dans le cas où OneOf contient un type <typeparamref name="T0"/></param>
            <param name="f1">Traitement à effectuer dans le cas où OneOf contient un type <typeparamref name="T1"/></param>
            <param name="f2">Traitement à effectuer dans le cas où OneOf contient un type <typeparamref name="T2"/></param>
            <returns>Valeur résultante du traitement</returns>
        </member>
        <member name="M:Ocrus.OneOfTypes.OneOf`3.With(System.Action{`0},System.Action{`1},System.Action{`2})">
            <summary>
            Switch case sans valeur de retour sur les types que peut contenir le OneOf. <Br />
            Oblige à traiter les 3 cas possibles. 
            </summary>
            <param name="f0">Traitement à effectuer dans le cas où OneOf contient un type <typeparamref name="T0"/></param>
            <param name="f1">Traitement à effectuer dans le cas où OneOf contient un type <typeparamref name="T1"/></param>
            <param name="f2">Traitement à effectuer dans le cas où OneOf contient un type <typeparamref name="T2"/></param>
        </member>
        <member name="M:Ocrus.OneOfTypes.OneOf`3.Is``1">
            <summary>
            Teste le type de la valeur contenue dans le OneOf
            </summary>
            <typeparam name="T">Type à tester</typeparam>
            <returns>True si le type de la valeur contenue dans OneOf est <typeparamref name="T"/> false sinon</returns>
        </member>
        <member name="M:Ocrus.OneOfTypes.OneOf`3.SameType(Ocrus.OneOfTypes.OneOf{`0,`1,`2})">
            <summary>
            Teste si les deux OneOf contiennent une valeur de même type
            </summary>
            <param name="other">OneOf avec lequel tester</param>
            <returns>True si les deux OneOf contiennent une valeur de même type, False sinon</returns>
        </member>
        <member name="T:Ocrus.OneOfTypes.OneOf`4">
            <summary>
            Type somme sur deux types. <Br/>
            Represente le fait que l'on ait soit <typeparamref name="T0"/> soit <typeparamref name="T1"/>
            soit <typeparamref name="T2"/> soit <typeparamref name="T3"/>.
            </summary>
            <typeparam name="T0">Premier type</typeparam>
            <typeparam name="T1">Deuxième type</typeparam>
            <typeparam name="T2">Troisème type</typeparam>
            <typeparam name="T3">Troisème type</typeparam>
        </member>
        <member name="M:Ocrus.OneOfTypes.OneOf`4.op_Implicit(`0)~Ocrus.OneOfTypes.OneOf{`0,`1,`2,`3}">
            <summary>
            Converstion implicite en OneOf depuis <typeparamref name="T0"/>
            </summary>
            <param name="t0">Type d'origine</param>
        </member>
        <member name="M:Ocrus.OneOfTypes.OneOf`4.op_Implicit(`1)~Ocrus.OneOfTypes.OneOf{`0,`1,`2,`3}">
            <summary>
            Converstion implicite en OneOf depuis <typeparamref name="T1"/>
            </summary>
            <param name="t1">Type d'origine</param>
        </member>
        <member name="M:Ocrus.OneOfTypes.OneOf`4.op_Implicit(`2)~Ocrus.OneOfTypes.OneOf{`0,`1,`2,`3}">
            <summary>
            Converstion implicite en OneOf depuis <typeparamref name="T2"/>
            </summary>
            <param name="t2">Type d'origine</param>
        </member>
        <member name="M:Ocrus.OneOfTypes.OneOf`4.op_Implicit(`3)~Ocrus.OneOfTypes.OneOf{`0,`1,`2,`3}">
            <summary>
            Converstion implicite en OneOf depuis <typeparamref name="T3"/>
            </summary>
            <param name="t3">Type d'origine</param>
        </member>
        <member name="M:Ocrus.OneOfTypes.OneOf`4.#ctor(`0)">
            <summary>
            Instancie un OneOf depuis un <typeparamref name="T0"/>
            </summary>
            <param name="value0">Valeur à wrapper dans le OneOf</param>
        </member>
        <member name="M:Ocrus.OneOfTypes.OneOf`4.#ctor(`1)">
            <summary>
            Instancie un OneOf depuis un <typeparamref name="T1"/>
            </summary>
            <param name="value1">Valeur à wrapper dans le OneOf</param>
        </member>
        <member name="M:Ocrus.OneOfTypes.OneOf`4.#ctor(`2)">
            <summary>
            Instancie un OneOf depuis un <typeparamref name="T2"/>
            </summary>
            <param name="value2">Valeur à wrapper dans le OneOf</param>
        </member>
        <member name="M:Ocrus.OneOfTypes.OneOf`4.#ctor(`3)">
            <summary>
            Instancie un OneOf depuis un <typeparamref name="T3"/>
            </summary>
            <param name="value3">Valeur à wrapper dans le OneOf</param>
        </member>
        <member name="M:Ocrus.OneOfTypes.OneOf`4.Match``1(System.Func{`0,``0},System.Func{`1,``0},System.Func{`2,``0},System.Func{`3,``0})">
            <summary>
            Switch case avec valeur de retour sur les types que peut contenir le OneOf. <Br />
            Oblige à traiter les 4 cas possibles.
            </summary>
            <typeparam name="TResult">Type de retour</typeparam>
            <param name="f0">Traitement à effectuer dans le cas où OneOf contient un type <typeparamref name="T0"/></param>
            <param name="f1">Traitement à effectuer dans le cas où OneOf contient un type <typeparamref name="T1"/></param>
            <param name="f2">Traitement à effectuer dans le cas où OneOf contient un type <typeparamref name="T2"/></param>
            <param name="f3">Traitement à effectuer dans le cas où OneOf contient un type <typeparamref name="T3"/></param>
            <returns>Valeur résultante du traitement</returns>
        </member>
        <member name="M:Ocrus.OneOfTypes.OneOf`4.With(System.Action{`0},System.Action{`1},System.Action{`2},System.Action{`3})">
            <summary>
            Switch case sans valeur de retour sur les types que peut contenir le OneOf. <Br />
            Oblige à traiter les 4 cas possibles. 
            </summary>
            <param name="f0">Traitement à effectuer dans le cas où OneOf contient un type <typeparamref name="T0"/></param>
            <param name="f1">Traitement à effectuer dans le cas où OneOf contient un type <typeparamref name="T1"/></param>
            <param name="f2">Traitement à effectuer dans le cas où OneOf contient un type <typeparamref name="T2"/></param>
            <param name="f3">Traitement à effectuer dans le cas où OneOf contient un type <typeparamref name="T3"/></param>
        </member>
        <member name="M:Ocrus.OneOfTypes.OneOf`4.Is``1">
            <summary>
            Teste le type de la valeur contenue dans le OneOf
            </summary>
            <typeparam name="T">Type à tester</typeparam>
            <returns>True si le type de la valeur contenue dans OneOf est <typeparamref name="T"/> false sinon</returns>
        </member>
        <member name="M:Ocrus.OneOfTypes.OneOf`4.SameType(Ocrus.OneOfTypes.OneOf{`0,`1,`2,`3})">
            <summary>
            Teste si les deux OneOf contiennent une valeur de même type
            </summary>
            <param name="other">OneOf avec lequel tester</param>
            <returns>True si les deux OneOf contiennent une valeur de même type, False sinon</returns>
        </member>
        <member name="T:Ocrus.OCREngines.ISYOReaderFactory">
            <summary>
            Factory qui permet de contruire des moteurs d'extractions, de classification ou duals basés sur des projets SYOReader
            </summary>
        </member>
        <member name="M:Ocrus.OCREngines.ISYOReaderFactory.CreateClassifyEngine(System.String,System.String,Ocrus.OCREngines.ImageType)">
            <summary>
            Créer un moteur de Classification.
            </summary>
            <param name="syoProject">Projet Syo à invoquer</param>
            <param name="directoryToProcess">Répertoire où sont les images</param>
            <param name="imgType">Type des images à prendre en compte</param>
            <returns>Moteur basé sur SYOReader</returns>
        </member>
        <member name="M:Ocrus.OCREngines.ISYOReaderFactory.CreateClassifyAndExtractEngine(System.String,System.String,Ocrus.OCREngines.ImageType)">
            <summary>
            Créer un moteur de Classification et d'Extraction.
            </summary>
            <param name="syoProject">Projet Syo à invoquer</param>
            <param name="directoryToProcess">Répertoire où sont les images</param>
            <param name="imgType">Type des images à prendre en compte</param>
            <returns>Moteur basé sur SYOReader</returns>
        </member>
        <member name="M:Ocrus.OCREngines.ISYOReaderFactory.CreateExtractEngine(System.String,System.String,Ocrus.OCREngines.ImageType)">
            <summary>
            Créer un moteur d'Extraction.
            </summary>
            <param name="syoProject">Projet Syo à invoquer</param>
            <param name="directoryToProcess">Répertoire où sont les images</param>
            <param name="imgType">Type des images à prendre en compte</param>
            <returns>Moteur basé sur SYOReader</returns>
        </member>
        <member name="T:Ocrus.OCREngines.ImageUID">
            <summary>
            Représente un identifiant unique d'image
            </summary>
        </member>
        <member name="P:Ocrus.OCREngines.ImageUID.UID">
            <summary>
            Identifiant unique d'image
            </summary>
        </member>
        <member name="M:Ocrus.OCREngines.ImageUID.#ctor(System.String)">
            <summary>
            Instancie un identifiant unique d'image
            </summary>
            <param name="uid">UID de l'image</param>
        </member>
        <member name="T:Ocrus.OCREngines.AbsoluteCropZone">
            <summary>
            Rectangle représentant la surface dans un espace en 2D comprennant une zone extraite par un moteur d'OCR à partir d'une image.
            Exprimé en pixels
            Exemple de format : "10;20;30;40"
            </summary>
        </member>
        <member name="F:Ocrus.OCREngines.AbsoluteCropZone.None">
            <summary>
            CropZone vide
            </summary>
        </member>
        <member name="F:Ocrus.OCREngines.AbsoluteCropZone.x1">
            <summary>
            Gauche
            </summary>
        </member>
        <member name="F:Ocrus.OCREngines.AbsoluteCropZone.y1">
            <summary>
            Haut
            </summary>
        </member>
        <member name="F:Ocrus.OCREngines.AbsoluteCropZone.x2">
            <summary>
            Droite
            </summary>
        </member>
        <member name="F:Ocrus.OCREngines.AbsoluteCropZone.y2">
            <summary>
            Bas
            </summary>
        </member>
        <member name="M:Ocrus.OCREngines.AbsoluteCropZone.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Instancie un ectangle représentant la surface dans un espace en 2D comprennant une zone extraite par un moteur d'OCR à partir d'une image. Exprimé en pixels.
            </summary>
            <param name="x1">Gauche</param>
            <param name="y1">Haut</param>
            <param name="x2">Droite</param>
            <param name="y2">Bas</param>
        </member>
        <member name="P:Ocrus.OCREngines.AbsoluteCropZone.IsNone">
            <summary>
            Retourne true si la CropZone est inconnue
            </summary>
        </member>
        <member name="M:Ocrus.OCREngines.AbsoluteCropZone.ToString">
            <summary>
            Valeur sérialisée de la CropZone
            </summary>
            <returns>Valeur sérialisée de la CropZone</returns>
        </member>
        <member name="M:Ocrus.OCREngines.AbsoluteCropZone.Parse(System.String)">
            <summary>
            Parse une cropzone.
            </summary>
            <param name="cropZoneValue">valeur sérialisée de la cropzone</param>
            <returns>L'objet CropZone correspondant. Retourne CropZone.None si la chaine est null or empty.</returns>
        </member>
        <member name="T:Ocrus.OCREngines.EngineSources">
            <summary>
            Liste des sources d'OCR les plus courantes
            </summary>
        </member>
        <member name="F:Ocrus.OCREngines.EngineSources.CW">
            <summary>
            Classification ou extraction venant du code du Customer Workflow
            </summary>
        </member>
        <member name="F:Ocrus.OCREngines.EngineSources.Scanner">
            <summary>
            Classification ou extraction venant du scanner
            </summary>
        </member>
        <member name="F:Ocrus.OCREngines.EngineSources.SyoReader">
            <summary>
            Classification ou extraction venant de SyoReader
            </summary>
        </member>
        <member name="T:Ocrus.OCREngines.MetaDataClassifyOCREngine">
            <summary>
            Classe une image en fonction de la présense d'une meta donnée
            Si la meta donnée est présente, la classe retournée sera la valeur de cette meta donnée avec une confience de 100
            </summary>
        </member>
        <member name="P:Ocrus.OCREngines.MetaDataClassifyOCREngine.Name">
            <inheritdoc />
        </member>
        <member name="M:Ocrus.OCREngines.MetaDataClassifyOCREngine.#ctor(System.String)">
            <summary>
            Instancie un moteur de classification qui classe une image en fonction de la présense d'une meta donnée
            </summary>
            <param name="metaDataName">Nom de la méta donnée à partir de laquelle classer les pages</param>
        </member>
        <member name="M:Ocrus.OCREngines.MetaDataClassifyOCREngine.Classify(System.Collections.Generic.IEnumerable{Ocrus.OCREngines.PageOCR})">
            <inheritdoc />
        </member>
        <member name="M:Ocrus.OCREngines.MetaDataClassifyOCREngine.Dispose">
            <summary>
            Ne fait rien
            </summary>
        </member>
        <member name="T:Ocrus.OCREngines.MetaDataExtractOCREngine">
            <summary>
            Extrait des champs en fonction de la présente de meta données. <br />
            La liste des valeurs à extraire des meta données est indiquée par une liste de <see cref="T:Ocrus.Integration.FromToValue"/> <br />
            Utiliser des <see cref="T:Ocrus.Integration.FromToReWriter"/> pour modifier la valeur extraite au passage <br />
            La confiance associée sera de 100
            </summary>
        </member>
        <member name="P:Ocrus.OCREngines.MetaDataExtractOCREngine.Name">
            <inheritdoc />
        </member>
        <member name="F:Ocrus.OCREngines.MetaDataExtractOCREngine._keysToExtract">
            <summary>
            Représente les champs à extraire des meta données
            </summary>
        </member>
        <member name="M:Ocrus.OCREngines.MetaDataExtractOCREngine.#ctor(System.Collections.Generic.IReadOnlyList{Ocrus.Integration.FromToValue})">
            <summary>
            Instancie un moteur d'extraction qui extrait des champs en fonction de la présente de meta données.
            </summary>
            <param name="keysToExtract">Liste des valeurs à extraire des meta données</param>
        </member>
        <member name="M:Ocrus.OCREngines.MetaDataExtractOCREngine.Extract(System.Collections.Generic.IReadOnlyList{Ocrus.OCREngines.PageOCR})">
            <inheritdoc />
        </member>
        <member name="M:Ocrus.OCREngines.MetaDataExtractOCREngine.Dispose">
            <summary>
            Ne fait rien
            </summary>
        </member>
        <member name="T:Ocrus.OCREngines.ComposedClassifyAndExtractEngine">
            <summary>
            Moteur de classification et d'extraction qui est la composition d'un moteur de classification et, pour chaque classe extraite, un moteur d'extraction associé.
            </summary>
        </member>
        <member name="P:Ocrus.OCREngines.ComposedClassifyAndExtractEngine.Name">
            <inheritdoc/>
        </member>
        <member name="M:Ocrus.OCREngines.ComposedClassifyAndExtractEngine.#ctor(Ocrus.OCREngines.IClassifyEngine,System.Collections.Generic.IReadOnlyDictionary{System.String,Ocrus.OCREngines.IExtractEngine})">
            <summary>
            Instancie un moteur de classification et d'extraction qui est la composition d'un moteur de classification et, pour chaque classe extraite, un moteur d'extraction associé.
            </summary>
            <param name="classifier">Moteur de classification</param>
            <param name="extractors">Dictionnaire associant à chaque valeur possible de classification, un moteur d'extraction</param>
        </member>
        <member name="M:Ocrus.OCREngines.ComposedClassifyAndExtractEngine.ClassifyAndExtract(System.Collections.Generic.IEnumerable{Ocrus.OCREngines.PageOCR})">
            <inheritdoc />
        </member>
        <member name="M:Ocrus.OCREngines.ComposedClassifyAndExtractEngine.Dispose">
            <inheritdoc/>
        </member>
        <member name="T:Ocrus.OCREngines.PageInfoClassifyOCREngine">
            <summary>
            Classe une image en fonction uniquement de la valeur d'une de ses propriétés d'infos
            La classe sera celle de la valeur stockée, avec une précision de 100%
            Par défaut, la propriété utilisée est PageType 
            </summary>
        </member>
        <member name="P:Ocrus.OCREngines.PageInfoClassifyOCREngine.Name">
            <inheritdoc />
        </member>
        <member name="M:Ocrus.OCREngines.PageInfoClassifyOCREngine.#ctor">
            <summary>
            Instancie un moteur d'ocr se basant sur les propriété des PageInfos pour faire la classification
            Le champ par défaut sur lequel ce moteur se base pour classer est PageType
            </summary>
        </member>
        <member name="M:Ocrus.OCREngines.PageInfoClassifyOCREngine.#ctor(System.Func{Ocrus.PageInfos,System.String})">
            <summary>
            Instancie un moteur d'ocr se basant sur les propriété des PageInfos pour faire la classification
            </summary>
            <param name="propertySelector">Retourne la valeur d'une propriété de PageInfo</param>
        </member>
        <member name="M:Ocrus.OCREngines.PageInfoClassifyOCREngine.Classify(System.Collections.Generic.IEnumerable{Ocrus.OCREngines.PageOCR})">
            <inheritdoc />
        </member>
        <member name="M:Ocrus.OCREngines.PageInfoClassifyOCREngine.Dispose">
            <summary>
            Ne fait rien
            </summary>
        </member>
        <member name="T:Ocrus.OCREngines.PageOCR">
            <summary>
            Représente une page à destination d'un moteur d'OCR
            </summary>
        </member>
        <member name="P:Ocrus.OCREngines.PageOCR.Infos">
            <summary>
            Informations sur la page
            </summary>
        </member>
        <member name="P:Ocrus.OCREngines.PageOCR.MetaData">
            <summary>
            Meta données de la page
            </summary>
        </member>
        <member name="M:Ocrus.OCREngines.PageOCR.#ctor(Ocrus.PageInfos,System.Collections.Generic.IReadOnlyDictionary{System.String,System.String})">
            <summary>
            Instancie une page à destination d'un moteur d'OCR
            </summary>
            <param name="infos">Informations sur la page</param>
            <param name="metaData">Meta données de la page</param>
        </member>
        <member name="M:Ocrus.OCREngines.PageOCR.GetImageName(Ocrus.OCREngines.ImageType)">
            <summary>
            Extrait le nom de l'image  du <see cref="T:Ocrus.PageInfos"/> de la <see cref="T:Ocrus.OCREngines.PageOCR"/>
            </summary>
            <param name="imageTypeToUse">Type du format de l'image souhaité</param>
            <returns>Nom de l'image</returns>
        </member>
        <member name="T:Ocrus.OCREngines.ImageType">
            <summary>
            Type du format de l'image
            </summary>
        </member>
        <member name="F:Ocrus.OCREngines.ImageType.JPEG">
            <summary>
            Format JPEG
            </summary>
        </member>
        <member name="F:Ocrus.OCREngines.ImageType.TIFF">
            <summary>
            Format TIFF
            </summary>
        </member>
        <member name="T:Ocrus.OCREngines.UnknownClassification">
            <summary>
            Utilisé pour indiquer qu'un moteur de classification n'a pas reconnu de classe
            </summary>
        </member>
        <member name="F:Ocrus.OCREngines.UnknownClassification.Name">
            <summary>
            Nom donné pour une classification inconnue
            </summary>
        </member>
        <member name="F:Ocrus.OCREngines.UnknownClassification.Instance">
            <summary>
            Instance unique de UnknownClassification
            </summary>
        </member>
        <member name="T:Ocrus.OCREngines.ClassifyAndExtractResult">
            <summary>
            Résultat d'un moteur de classification qui extrait également des champs
            Une classification ou aucune classification, dans le cas d'une classification, contient également les champs extraits
            </summary>
        </member>
        <member name="P:Ocrus.OCREngines.ClassifyAndExtractResult.ClassificationResult">
            <summary>
            Une classification ou aucune classification
            </summary>
        </member>
        <member name="P:Ocrus.OCREngines.ClassifyAndExtractResult.ExtractionResults">
            <summary>
            Liste des champs éventuellement extraits
            </summary>
        </member>
        <member name="M:Ocrus.OCREngines.ClassifyAndExtractResult.#ctor">
            <summary>
            Instancie avec une classification Unknown
            </summary>
        </member>
        <member name="M:Ocrus.OCREngines.ClassifyAndExtractResult.#ctor(Ocrus.OCREngines.Classification)">
            <summary>
            Instancie avec une classification Unknown
            </summary>
        </member>
        <member name="M:Ocrus.OCREngines.ClassifyAndExtractResult.#ctor(Ocrus.OneOfTypes.OneOf{Ocrus.OCREngines.Classification,Ocrus.OCREngines.UnknownClassification},System.Collections.Generic.IReadOnlyList{Ocrus.OCREngines.Extraction})">
            <summary>
            Instancie avec une classification connue ou inconnue, ainsi que d'eventuels extractions.
            </summary>
        </member>
        <member name="T:Ocrus.OCREngines.Extraction">
            <summary>
            Résultat de l'extraction d'un champ par un moteur d'extraction
            </summary>
        </member>
        <member name="T:Ocrus.OCREngines.Extraction.NameEqualityComparer">
            <summary>
            EqualityComparer basé sur la propriété Name de Extraction
            </summary>
        </member>
        <member name="P:Ocrus.OCREngines.Extraction.Name">
            <summary>
            Nom du champ extrait
            </summary>
        </member>
        <member name="P:Ocrus.OCREngines.Extraction.Score">
            <summary>
            Confiance d'extraction (aussi appelé confidence, score, qualité, etc.)
            Valeur comprise entre 0 (aucune confiance) et 100 (confiance totale)
            </summary>
        </member>
        <member name="P:Ocrus.OCREngines.Extraction.Value">
            <summary>
            Valeur extraite. Can't be null.
            </summary>
        </member>
        <member name="P:Ocrus.OCREngines.Extraction.Source">
            <summary>
            Nom du moteur source qui a extrait la valeur. Ne peut pas être null.
            </summary>
        </member>
        <member name="P:Ocrus.OCREngines.Extraction.ImageUID">
            <summary>
            Identifiant unique de l'image d'où vient l'extraction. Ne peut pas être null.
            </summary>
        </member>
        <member name="P:Ocrus.OCREngines.Extraction.Zone">
            <summary>
            Cropzone correspondant à la valeur extraite. AbsoluteCropZone.None si pas de crop zone extraite
            </summary>
        </member>
        <member name="M:Ocrus.OCREngines.Extraction.#ctor(System.String,System.Int32,System.String,System.String,Ocrus.OCREngines.ImageUID,Ocrus.OCREngines.AbsoluteCropZone)">
            <summary>
            Instancie une extraction
            </summary>
            <param name="name">Nom, ne peut pas être null ni vide</param>
            <param name="score">Score de confiance, entre 0 et 100 inclus</param>
            <param name="value">Valeur extraite. Ne peut être null.</param>
            <param name="source">Source de l'extraction, ne peut être null ni vide</param>
            <param name="imageUID">Identifiant unique de l'image d'où vient l'extraction. Ne peut pas être null. Ignoré en intégration: l'UID sera celui de l'image associée à la page</param>
            <param name="zone">CropZone de la valeur extraite, peut être null</param>
        </member>
        <member name="M:Ocrus.OCREngines.Extraction.#ctor(System.String,System.Int32,System.String,System.String,Ocrus.OCREngines.ImageUID)">
            <summary>
            Instancie une extraction sans CropZone
            </summary>
            <param name="name">Nom, ne peut pas être null ni vide</param>
            <param name="score">Score de confiance, entre 0 et 100 inclus</param>
            <param name="value">Valeur extraite. Ne peut être null.</param>
            <param name="source">Source de l'extraction, ne peut être null ni vide</param>
            <param name="imageUID">Identifiant unique de l'image d'où vient l'extraction. Ne peut pas être null.</param>
        </member>
        <member name="T:Ocrus.OCREngines.Classification">
            <summary>
            Représente une classification reconnue
            </summary>
        </member>
        <member name="P:Ocrus.OCREngines.Classification.Name">
            <summary>
            Nom de cla classification. <Br/> 
            Ne peut être null ni vide.
            </summary>
        </member>
        <member name="P:Ocrus.OCREngines.Classification.Score">
            <summary>
            Confiance de classification (aussi appelé confidence, score, qualité, etc.)
            Valeur comprise entre 0 (aucune confiance) et 100 (confiance totale)
            </summary>
        </member>
        <member name="P:Ocrus.OCREngines.Classification.Source">
            <summary>
            Moteur d'origine qui a retourné cette classification. <Br/>
            Ne peut être null ni vide.
            </summary>
        </member>
        <member name="P:Ocrus.OCREngines.Classification.ImageUID">
            <summary>
            Identifiant unique de l'image d'où vient la classification. <Br/> 
            Peut être null uniquement si la source est différente de EngineSources.Scanner ou EngineSources.SyoReader.
            </summary>
        </member>
        <member name="M:Ocrus.OCREngines.Classification.#ctor(System.String)">
            <summary>
            Instancie une classification avec pour source EngineSource.CW, un score de 100% et aucune image UID associée
            </summary>
            <param name="name">Nom de la classe</param>
        </member>
        <member name="M:Ocrus.OCREngines.Classification.#ctor(System.String,System.Int32,System.String,Ocrus.OCREngines.ImageUID)">
            <summary>
            Instancie une classification
            </summary>
            <param name="name">Nom de la classe</param>
            <param name="score">Score de confiance de la classification</param>
            <param name="source">Moteur à l'origine de la classification (utiliser EngineSource)</param>
            <param name="imageUID">UID de l'image à partir de laquelle la classification a été déterminée</param>
        </member>
        <member name="T:Ocrus.OCREngines.IClassifyAndExtractEngine">
            <summary>
            Moteur de classification qui extrait également des champs
            </summary>
        </member>
        <member name="P:Ocrus.OCREngines.IClassifyAndExtractEngine.Name">
            <summary>
            Nom du moteur
            </summary>
        </member>
        <member name="M:Ocrus.OCREngines.IClassifyAndExtractEngine.ClassifyAndExtract(System.Collections.Generic.IEnumerable{Ocrus.OCREngines.PageOCR})">
            <summary>
            Classe et extrait des champs d'une page en fonction de ses propriétés ou de ses meta données
            </summary>
            <param name="pages">Pages dont on veut trouver la classe et extraire des champs en même temps</param>
            <returns>Une classification ou aucune classification, dans le cas d'une classification, contient également les champs extraits</returns>
        </member>
        <member name="T:Ocrus.OCREngines.IExtractEngine">
            <summary>
            Moteur d'extraction multipages
            </summary>
        </member>
        <member name="P:Ocrus.OCREngines.IExtractEngine.Name">
            <summary>
            Nom du moteur d'extraction
            </summary>
        </member>
        <member name="M:Ocrus.OCREngines.IExtractEngine.Extract(System.Collections.Generic.IReadOnlyList{Ocrus.OCREngines.PageOCR})">
            <summary>
            Extrait des champs de plusieurs pages en fonction de leurs propriétés ou de leurs meta données
            </summary>
            <param name="pages">Pages dont on veut extraire des champs</param>
            <returns>Une liste de listes de champs extraits. Chaque liste en sortie doit correspondre à la page de même indice en entrée</returns>
        </member>
        <member name="T:Ocrus.OCREngines.IClassifyEngine">
            <summary>
            Moteur de classification.
            </summary>
        </member>
        <member name="P:Ocrus.OCREngines.IClassifyEngine.Name">
            <summary>
            Nom du moteur de classification
            </summary>
        </member>
        <member name="M:Ocrus.OCREngines.IClassifyEngine.Classify(System.Collections.Generic.IEnumerable{Ocrus.OCREngines.PageOCR})">
            <summary>
            Classe une page en fonction de ses propriétés ou de ses meta données
            </summary>
            <param name="pages">Pages dont on veut trouver la classe</param>
            <returns>Une classification ou aucune classification</returns>
        </member>
        <member name="T:Ocrus.OCREngines.ISYOReaderEngineFactory">
            <summary>
            Factory qui permet de contruire un moteur d'extraction et de classification basé sur des projets SYOReader
            </summary>
        </member>
        <member name="M:Ocrus.OCREngines.ISYOReaderEngineFactory.Create(System.String,System.String,Ocrus.OCREngines.ImageType)">
            <summary>
            Créer le moteur.
            </summary>
            <param name="syoProject">Projet Syo à invoquer</param>
            <param name="directoryToProcess">Répertoire où sont les images</param>
            <param name="imgType">Type des images à prendre en compte</param>
            <returns>Moteur basé sur SYOReader</returns>
        </member>
        <member name="T:Ocrus.Exceptions.DynamicBusiness.DynamicBusinessException">
            <summary>
            Exception métier. <br/>
            A déclencher lorsque lorsqu'une donnée métier dite "dynamique" (en entrée du CW) est invalide.
            Interrompt le traitement du lot courant
            </summary>
        </member>
        <member name="M:Ocrus.Exceptions.DynamicBusiness.DynamicBusinessException.#ctor(System.String)">
            <summary>
            Exception métier. <br/>
            A déclencher lorsque lorsqu'une donnée métier dite "dynamique" (en entrée du CW) est invalide.
            Interrompt le traitement du lot courant
            </summary>
            <param name="message">Message de l'exception</param>
        </member>
        <member name="M:Ocrus.Exceptions.DynamicBusiness.DynamicBusinessException.#ctor(System.String,System.Exception)">
            <summary>
            Exception métier. <br/>
            A déclencher lorsque lorsqu'une donnée métier dite "dynamique" (en entrée du CW) est invalide.
            Interrompt le traitement du lot courant
            </summary>
            <param name="message">Message de l'exception</param>
            <param name="innerException">Exception qui a causé l'exception courante</param>
        </member>
        <member name="T:Ocrus.Exceptions.InitializationException">
            <summary>
            Exception déclenchée lorsqu'il y a un problème à l'initialisation d'un CW. <br />
            Par exemple lorsque la bibliothèque des fields et documents est construite.
            </summary>
        </member>
        <member name="M:Ocrus.Exceptions.InitializationException.#ctor(System.String)">
            <summary>
            Instancie une exception déclenchée lorsqu'il y a un problème à l'initialisation d'un CW.
            </summary>
            <param name="message">Message de l'exception</param>
        </member>
        <member name="M:Ocrus.Exceptions.InitializationException.#ctor(System.String,System.Exception)">
            <summary>
            Instancie une exception déclenchée lorsqu'il y a un problème à l'initialisation d'un CW.
            </summary>
            <param name="message">Message de l'exception</param>
            <param name="innerException">Exception qui a causé l'exception courante</param>
        </member>
        <member name="T:Ocrus.Exceptions.InvalidDescriptionException">
            <summary>
            Exception indiquant que la description d'un UX ou d'un Use est invalide. <Br />
            L'erreur peut être dans la description d'un document, d'un champ, du pli en lui même. <Br />
            Il peut s'agir d'une erreur de cohérence entre les données, etc.
            </summary>
        </member>
        <member name="M:Ocrus.Exceptions.InvalidDescriptionException.#ctor(System.String)">
            <summary>
            Exception indiquant que la description d'un UX ou d'un Use est invalide. <br />
            L'erreur peut être dans la description d'un document, d'un champ, du pli en lui même. <br />
            Il peut s'agir d'une erreur de cohérence entre les données, etc.
            </summary>
            <param name="message">Message de l'exception</param>        
        </member>
        <member name="M:Ocrus.Exceptions.InvalidDescriptionException.#ctor(System.String,System.Exception)">
            <summary>
            Exception indiquant que la description d'un UX ou d'un Use est invalide. <br />
            L'erreur peut être dans la description d'un document, d'un champ, du pli en lui même. <br />
            Il peut s'agir d'une erreur de cohérence entre les données, etc.
            </summary>
            <param name="message">Message de l'exception</param>
            <param name="innerException">Exception qui a causé l'exception courante</param>
        </member>
        <member name="M:Ocrus.Exceptions.InvalidDescriptionException.#ctor(System.Collections.Generic.List{System.String})">
            <summary>
            Exception indiquant que la description d'un UX ou d'un Use est invalide. <br />
            L'erreur peut être dans la description d'un document, d'un champ, du pli en lui même. <br />
            Il peut s'agir d'une erreur de cohérence entre les données, etc.<br />
            Renvoie un message d'exception formaté de sorte à lister tout les messages d'exception récoltés.
            </summary>
            <param name="messages">Liste de messages d'exception.</param>
        </member>
        <member name="M:Ocrus.Exceptions.InvalidDescriptionException.Format(System.String,System.Collections.Generic.List{System.String})">
            <summary>
            Formate une liste de messages en un seul et même message d'exception contenant l'ensemble des messages séparés par des retours chariots.
            </summary>
            <param name="exceptionPrefix">Prefixe associé au type d'exception.</param>
            <param name="messages">Liste de messages d'exception.</param>
            <returns>Message de l'exception</returns>
        </member>
        <member name="T:Ocrus.Exceptions.OcrusException">
            <summary>
            A déclencher lorsqu'on est sur une Exception dans le domaine du Framework Ocrus et que l'on appartient à aucune des sous familles que propose le Framework.
            </summary>
        </member>
        <member name="M:Ocrus.Exceptions.OcrusException.#ctor(System.String)">
            <summary>
            A déclencher lorsqu'on est sur une Exception dans le domaine du Framework Ocrus et que l'on appartient à aucune des sous familles que propose le Framework.
            </summary>
            <param name="message">Message de l'exception</param>
        </member>
        <member name="M:Ocrus.Exceptions.OcrusException.#ctor(System.String,System.Exception)">
            <summary>
            A déclencher lorsqu'on est sur une Exception dans le domaine du Framework Ocrus et que l'on appartient à aucune des sous familles que propose le Framework.
            </summary>
            <param name="message">Message de l'exception</param>
            <param name="innerException">Exception qui a causé l'exception courante</param>
        </member>
        <member name="T:Ocrus.Exceptions.StaticBusiness.StaticBusinessException">
            <summary>
            Exception métier. <br/>
            A déclencher lorsqu'une donnée métier dite "statique" (configuration, ...) est invalide.
            Interrompt le traitement du lot courant
            </summary>
        </member>
        <member name="M:Ocrus.Exceptions.StaticBusiness.StaticBusinessException.#ctor(System.String)">
            <summary>
            Exception métier. <br/>
            A déclencher lorsqu'une donnée métier dite "statique" (configuration, ...) est invalide.
            Interrompt le traitement du lot courant
            </summary>
            <param name="message">Message de l'exception</param>
        </member>
        <member name="M:Ocrus.Exceptions.StaticBusiness.StaticBusinessException.#ctor(System.String,System.Exception)">
            <summary>
            Exception métier. <br/>
            A déclencher lorsqu'une donnée métier dite "statique" (configuration, ...) est invalide.
            Interrompt le traitement du lot courant
            </summary>
            <param name="message">Message de l'exception</param>
            <param name="innerException">Exception qui a causé l'exception courante</param>
        </member>
        <member name="T:Ocrus.Exceptions.TechnicalException">
            <summary>
            Exception technique. <br/>
            A déclencher lorsque le problème ne vient pas du métier du Customer Workflow mais des briques techniques. <br/>
            Exemple :  <br/>
             - Timeout d'un service : TechnicalException <br/>
             - Verso manquant dans une page d'un lot : BusinessException
            Interrompt le traitement du lot courant
            </summary>
        </member>
        <member name="M:Ocrus.Exceptions.TechnicalException.#ctor(System.String)">
            <summary>
            Exception technique. <br/>
            A déclencher lorsque le problème ne vient pas du métier du Customer Workflow mais des briques techniques.<br/>
            Exemple : <br/>
             - Timeout d'un service : TechnicalException<br/>
             - Verso manquant dans une page d'un lot : BusinessException
            Interrompt le traitement du lot courant
            </summary>
            <param name="message">Message de l'exception</param>
        </member>
        <member name="M:Ocrus.Exceptions.TechnicalException.#ctor(System.String,System.Exception)">
            <summary>
            Exception technique.<br/>
            A déclencher lorsque le problème ne vient pas du métier du Customer Workflow mais des briques techniques.<br/>
            Exemple : <br/>
             - Timeout d'un service : TechnicalException <br/>
             - Verso manquant dans une page d'un lot : BusinessException
            Interrompt le traitement du lot courant
            </summary>
            <param name="message">Message de l'exception</param>
            <param name="innerException">Exception qui a causé l'exception courante</param>
        </member>
        <member name="T:Ocrus.FieldActions.FlagInError">
            <summary>
            Indique s'il faut mettre en avant un champ en erreur dans l'outil de vidéo codage
            </summary>
        </member>
        <member name="F:Ocrus.FieldActions.FlagInError.Yes">
            <summary>
            Met le champ en avant
            </summary>
        </member>
        <member name="F:Ocrus.FieldActions.FlagInError.No">
            <summary>
            Ne met pas les champ en avant
            </summary>
        </member>
        <member name="T:Ocrus.FieldActions.SetErrorAction">
            <summary>
            Action à effectuer sur un champ d'un cluster
            </summary>
        </member>
        <member name="P:Ocrus.FieldActions.SetErrorAction.ErrorMessage">
            <summary>
            Message d'erreur à valoriser.
            </summary>
        </member>
        <member name="M:Ocrus.FieldActions.SetErrorAction.#ctor(Ocrus.Instances.FieldClusterID,System.String)">
            <summary>
            Action à effectuer sur un champ d'un cluster
            </summary>
            <param name="id">Identifie le field dans le cluster</param>
            <param name="errorMessage">Message d'erreur</param>
        </member>
        <member name="M:Ocrus.FieldActions.SetErrorAction.Apply(Ocrus.FieldActions.IInputProxy)">
            <inheritdoc/>
        </member>
        <member name="T:Ocrus.FieldActions.ForcedValueAction">
            <summary>
            Action de forçage a effectuer sur un champ du cluster.
            </summary>
        </member>
        <member name="P:Ocrus.FieldActions.ForcedValueAction.ForcedValue">
            <summary>
            Valeur de forçage.
            </summary>
        </member>
        <member name="M:Ocrus.FieldActions.ForcedValueAction.#ctor(Ocrus.Instances.FieldClusterID,System.String)">
            <summary>
            Forçage a effectuer sur un champ d'un cluster.
            </summary>
            <param name="id">Identifie le champ dans le cluster</param>
            <param name="forcedValue">Valeur de forçage;</param>
        </member>
        <member name="M:Ocrus.FieldActions.ForcedValueAction.Apply(Ocrus.FieldActions.IInputProxy)">
            <inheritdoc/>
        </member>
        <member name="T:Ocrus.FieldActions.SetReadOnlyAction">
            <summary>
            Valorise la propriété ReadOnly d'un champ du cluster
            </summary>
        </member>
        <member name="P:Ocrus.FieldActions.SetReadOnlyAction.IsReadOnly">
            <summary>
            Valeur de la propriété ReadOnly
            </summary>
        </member>
        <member name="M:Ocrus.FieldActions.SetReadOnlyAction.#ctor(Ocrus.Instances.FieldClusterID,System.Boolean)">
            <summary>
            Valorise la propriété d'un champ du cluster
            </summary>
            <param name="id">Identifie le champ dans le cluster</param>
            <param name="isReadOnly">Le champ est en lecture seule</param>
        </member>
        <member name="M:Ocrus.FieldActions.SetReadOnlyAction.Apply(Ocrus.FieldActions.IInputProxy)">
            <inheritdoc/>
        </member>
        <member name="T:Ocrus.FieldActions.IFieldClusterAction">
            <summary>
            Action à effectuer sur un champ d'un cluster (le mettre en erreur, modifier sa valeur, etc.)
            </summary>
        </member>
        <member name="P:Ocrus.FieldActions.IFieldClusterAction.Id">
            <summary>
            Identifie le field dans le cluster
            </summary>
        </member>
        <member name="M:Ocrus.FieldActions.IFieldClusterAction.Apply(Ocrus.FieldActions.IInputProxy)">
            <summary>
            Applique l'action sur l'input associé
            </summary>
            <param name="inputProxy">Input sur lequel appliquer l'action</param>
            <returns>True s'il faut marquer le champ en erreur dans le vidéo codage, false sinon</returns>
        </member>
        <member name="T:Ocrus.FieldActions.SetStateAction">
            <summary>
            Valoriser le state d'un champ du cluster
            </summary>
        </member>
        <member name="P:Ocrus.FieldActions.SetStateAction.NewState">
            <summary>
            Etat du champ à valoriser
            </summary>
        </member>
        <member name="M:Ocrus.FieldActions.SetStateAction.#ctor(Ocrus.Instances.FieldClusterID,Ocrus.Instances.FieldState)">
            <summary>
            Action à effectuer sur un champ d'un cluster
            </summary>
            <param name="id">Identifie le champ dans le cluster</param>
            <param name="newState">Etat à valoriser</param>
        </member>
        <member name="M:Ocrus.FieldActions.SetStateAction.Apply(Ocrus.FieldActions.IInputProxy)">
            <inheritdoc/>
        </member>
        <member name="T:Ocrus.FieldActions.SetValueAction">
            <summary>
            Valorise la valeur d'un champ du cluster
            </summary>
        </member>
        <member name="P:Ocrus.FieldActions.SetValueAction.NewValue">
            <summary>
            Valeur du champ à valoriser
            </summary>
        </member>
        <member name="M:Ocrus.FieldActions.SetValueAction.#ctor(Ocrus.Instances.FieldClusterID,System.String)">
            <summary>
            Valorise la valeur d'un champ du cluster
            </summary>
            <param name="id">Identifie le champ dans le cluster</param>
            <param name="newValue">Valeur du champ à valoriser</param>
        </member>
        <member name="M:Ocrus.FieldActions.SetValueAction.Apply(Ocrus.FieldActions.IInputProxy)">
            <inheritdoc/>
        </member>
        <member name="T:Ocrus.FieldActions.FieldClusterAction">
            <summary>
            Action à effectuer sur un champ d'un cluster
            </summary>
        </member>
        <member name="P:Ocrus.FieldActions.FieldClusterAction.Id">
            <inheritdoc/>
        </member>
        <member name="M:Ocrus.FieldActions.FieldClusterAction.#ctor(Ocrus.Instances.FieldClusterID)">
            <summary>
            Action à effectuer sur un champ d'un cluster
            </summary>
            <param name="id">Identifie le field dans le cluster</param>
            <exception cref="T:System.ArgumentNullException">Si <paramref name="id"/> est null</exception>
        </member>
        <member name="M:Ocrus.FieldActions.FieldClusterAction.Apply(Ocrus.FieldActions.IInputProxy)">
            <inheritdoc/>
        </member>
        <member name="T:Ocrus.FieldActions.IInputProxy">
            <summary>
            Proxy entre le champ 
            </summary>
        </member>
        <member name="P:Ocrus.FieldActions.IInputProxy.Value">
            <summary>
            Valeur du champ
            </summary>
        </member>
        <member name="P:Ocrus.FieldActions.IInputProxy.State">
            <summary>
            Etat du champ
            </summary>
        </member>
        <member name="P:Ocrus.FieldActions.IInputProxy.IsReadOnly">
            <summary>
            Le champ est en lecture seule
            </summary>
        </member>
        <member name="P:Ocrus.FieldActions.IInputProxy.ErrorMessage">
            <summary>
            Message d'erreur associé au champ
            </summary>
        </member>
        <member name="P:Ocrus.FieldActions.IInputProxy.CanBeForced">
            <summary>
            Indique si le champ peut être forcé.
            </summary>
        </member>
        <member name="M:Ocrus.FieldActions.IInputProxy.ForceValue(System.String)">
            <summary>
            Force le champ avec une valeur de forçage.
            </summary>
            <param name="forcedValue">Valeur de forçage</param>
        </member>
        <member name="T:Ocrus.Export.ExportConfig">
            <summary>
            Configuration pilotant la phase d'export d'un customer workflow
            </summary>
        </member>
        <member name="P:Ocrus.Export.ExportConfig.ExportName">
            <summary>
            Nom utilisé par 3D20 dans leurs process
            </summary>
        </member>
        <member name="P:Ocrus.Export.ExportConfig.ExportedImages">
            <summary>
            Faut-il exporter les jpeg uniquement, tiff uniquement, les deux
            </summary>
        </member>
        <member name="M:Ocrus.Export.ExportConfig.#ctor(System.String,Ocrus.Export.ExportedImages)">
            <summary>
            Pilote l'export du customer workflow
            </summary>
            <param name="exportName">Nom utilisé par 3D20 dans leurs process</param>
            <param name="exportedImages">Faut-il exporter les jpeg uniquement, tiff uniquement, les deux</param>
        </member>
        <member name="M:Ocrus.Export.ExportConfig.#ctor(Ocrus.Export.ExportedImages)">
            <summary>
            Pilote l'export du customer workflow sans export 3D20
            </summary>
            <param name="customerID">Customer ID</param>
            <param name="businessID">Business ID</param>
            <param name="exportedImages">Faut-il exporter les jpeg uniquement, tiff uniquement, les deux</param>
        </member>
        <member name="T:Ocrus.Export.ExportedImages">
            <summary>
            Types des images à exporter
            </summary>
        </member>
        <member name="F:Ocrus.Export.ExportedImages.Tiff">
            <summary>
            Tiff uniquement
            </summary>
        </member>
        <member name="F:Ocrus.Export.ExportedImages.Jpeg">
            <summary>
            Jpeg uniquement
            </summary>
        </member>
        <member name="F:Ocrus.Export.ExportedImages.Both">
            <summary>
            Jpeg et Tiff
            </summary>
        </member>
        <member name="T:Ocrus.Integration.DynamicMapper">
            <summary>
            Mapper configurable avec un algorithme de mapping
            </summary>
        </member>
        <member name="M:Ocrus.Integration.DynamicMapper.#ctor(Ocrus.Integration.IMappingSelector)">
            <summary>
            Instancie un mapper dynamic
            </summary>
            <param name="mapSelector">Algorithme de selection du mapping</param>
        </member>
        <member name="M:Ocrus.Integration.DynamicMapper.Map(Ocrus.Integration.Syo.ISyoScannerResult,System.Xml.Linq.XElement)">
            <summary>
            Réalise le mapping des données entre les informations d'une page brute <paramref name="xmlPage"/> vers les champs de <see cref="T:Ocrus.Integration.DefaultScanPage"/>
            Si le mapping récupéré est vide (que des listes vides), les champs définis dans <see cref="T:Ocrus.Integration.DefaultScanPage"/> <br/>
            sont par défaut valorisés depuis la valeur des noeuds XML de même nom.
            </summary>
            <param name="scannerResult">Paramètres généraux du résultat d'un scan</param>
            <param name="xmlPage">noeud XML portant la description d'une page</param>
            <returns>Valeurs extraites et mappées</returns>
        </member>
        <member name="T:Ocrus.Integration.FromTo">
            <summary>
            Décrit un mapping entre une source 'from' et une destination 'to'
            </summary>
        </member>
        <member name="P:Ocrus.Integration.FromTo.From">
            <summary>
            Nom de la source
            </summary>      
        </member>
        <member name="P:Ocrus.Integration.FromTo.To">
            <summary>
            Nom de la destination
            </summary>
        </member>
        <member name="M:Ocrus.Integration.FromTo.#ctor(System.String,System.String)">
            <summary>
            Décrit un mapping entre une source 'from' et une destination 'to'
            </summary>
            <param name="from">Nom de la source</param>
            <param name="to">Nom de la destination</param>
        </member>
        <member name="M:Ocrus.Integration.FromTo.Id(System.String)">
            <summary>
            Créer un FromTo identité qui reprend le nom de la source pour la destination
            </summary>
            <param name="name">Nom identique pour from et to</param>
            <returns>FromTo identité</returns>
        </member>
        <member name="T:Ocrus.Integration.EnvironmentMappingSelector">
            <summary>
            Retourne un mapping différent en fonction de la valeur de l'environnement (scanner) extrait de l'indexxml
            </summary>
        </member>
        <member name="M:Ocrus.Integration.EnvironmentMappingSelector.#ctor(System.Collections.Generic.IReadOnlyDictionary{System.String,Ocrus.Integration.MetaDataMappings})">
            <summary>
            Instancie un HarmonizeMappings sans mapping par défaut
            </summary>
            <param name="envMappings">Dictionnaire associant un mapping à une valeur d'environnement (scanner)</param>
        </member>
        <member name="M:Ocrus.Integration.EnvironmentMappingSelector.#ctor(System.Collections.Generic.IReadOnlyDictionary{System.String,Ocrus.Integration.MetaDataMappings},Ocrus.Integration.MetaDataMappings)">
            <summary>
            Instancie un HarmonizeMappings avec un mapping par défaut si un environnement (scanner) n'est pas connu
            </summary>
            <param name="envMappings">>Dictionnaire associant un mapping à une valeur d'environnement (scanner)</param>
            <param name="defaultMapping">Mapping par défaut</param>
        </member>
        <member name="M:Ocrus.Integration.EnvironmentMappingSelector.GetMappings(Ocrus.Integration.Syo.ISyoScannerResult)">
            <summary>
            Retourne le bon mapping en fonction de la valeur environnement
            </summary>
            <param name="scannerResult">Information sur le lot scanné</param>
            <exception cref="T:Ocrus.Exceptions.DynamicBusiness.DynamicBusinessException">Déclenchée si pas de mapping trouvé</exception>
            <returns>Mapping à appliquer</returns>
        </member>
        <member name="T:Ocrus.Integration.ConstMappings">
            <summary>
            Retourne toujours le même mapping
            </summary>
        </member>
        <member name="M:Ocrus.Integration.ConstMappings.#ctor(Ocrus.Integration.MetaDataMappings)">
            <summary>
            Instancie un selector constant qui retourne toujours le même mapping
            </summary>
            <param name="constMap">Mapping constant</param>
        </member>
        <member name="M:Ocrus.Integration.ConstMappings.GetMappings(Ocrus.Integration.Syo.ISyoScannerResult)">
            <inheritdoc />
        </member>
        <member name="T:Ocrus.Integration.ArrangeByFollowingPairs">
            <summary>
            Arrange des pages deux par deux pour former des feuilles.
            Lorsque un recto et un verso se suivent, cela donne une feuille
            Lorsque deux recto se suivent, cela donne une première feuille avec un verso Nothing et une deuxième feuille
            </summary>
        </member>
        <member name="M:Ocrus.Integration.ArrangeByFollowingPairs.Arrange(System.Collections.Generic.List{Ocrus.Integration.ArrangedPage})">
            <summary>
            Arrange des pages deux par deux pour former des feuilles.
            Lorsque un recto et un verso se suivent, cela donne une feuille
            Lorsque deux recto se suivent, cela donne une première feuille avec un verso Nothing et une deuxième feuille
            </summary>
            <param name="arrangedPages">Liste de pages arrangées</param>
            <returns>Pages arrangées par pairs</returns>
        </member>
        <member name="T:Ocrus.Integration.DefaultArrange">
            <summary>
            Algorithme d'arrangement par défaut basé sur <see cref="T:Ocrus.Integration.ArrangeByFollowingPairs"/>
            </summary>
        </member>
        <member name="M:Ocrus.Integration.DefaultArrange.Arrange(Ocrus.Integration.Syo.ISYOIntegrationContext,Ocrus.Integration.Syo.DefaultScannerResult)">
            <inheritdoc/>
        </member>
        <member name="T:Ocrus.Integration.FirstHeaderClassifyFromRectoMulti`1">
            <summary>
            Classification qui considère que la première feuille est la feuille HEADER du pli
            Détermine la feuille maître, type les autres feuilles et sépare les feuilles de type inconnues
            Algorithme:
             - tous les IClassifyStep sont sollicités
             - leurs différents résultats sont consolidés grâce au IStepsConciliator utilisé
            </summary>
            <typeparam name="TFluxContext">Context du flux</typeparam>
        </member>
        <member name="M:Ocrus.Integration.FirstHeaderClassifyFromRectoMulti`1.#ctor(System.Collections.Generic.IReadOnlyList{Ocrus.Integration.IMultiPagesClassifyStep},Ocrus.Integration.IClassifyCombinator)">
            <summary>
            Classification qui considère que la première feuille est la feuille HEADER du pli
            Détermine la feuille maître, type les autres feuilles et sépare les feuilles de type inconnues
            Algorithme:
             - tous les IClassifyStep sont sollicités
             - leurs différents résultats sont consolidés grâce au <paramref name="stepsCombinator"/> utilisé
            </summary>
            <param name="classifySteps">Etapes de classifications multipages</param>
            <param name="stepsCombinator">Combine des résultats de classification</param>
        </member>
        <member name="M:Ocrus.Integration.FirstHeaderClassifyFromRectoMulti`1.Classify(`0,System.Collections.Generic.IReadOnlyList{Ocrus.Integration.ArrangedSheet})">
            <inheritdoc />
        </member>
        <member name="T:Ocrus.Integration.FirstHeaderClassifyFromRecto`1">
            <summary>
            Classification qui considère que la première feuille est la feuille HEADER du pli
            Détermine la feuille maître, type les autres feuilles et sépare les feuilles de type inconnues
            Algorithme:
             - le premier IClassifyStep qui reconnait la feuille interrompt le traitement et les steps suivants sont ignorés
            </summary>
            <typeparam name="TFluxContext">Context du flux</typeparam>
        </member>
        <member name="M:Ocrus.Integration.FirstHeaderClassifyFromRecto`1.#ctor(System.Collections.Generic.IReadOnlyList{Ocrus.Integration.IClassifyStep})">
            <summary>
            Classification qui considère que la première feuille est la feuille HEADER du pli
            Détermine la feuille maître, type les autres feuilles et sépare les feuilles de type inconnues
            Algorithme:
             - le premier IClassifyStep qui reconnait la feuille interrompt le traitement et les steps suivants sont ignorés
            </summary>
            <param name="classifySteps">Etapes de classifications à exécuter dans l'ordre</param>
        </member>
        <member name="M:Ocrus.Integration.FirstHeaderClassifyFromRecto`1.Classify(`0,System.Collections.Generic.IReadOnlyList{Ocrus.Integration.ArrangedSheet})">
            <inheritdoc />
        </member>
        <member name="T:Ocrus.Integration.ClassifyHelpers">
            <summary>
            Regroupe des fonctions utilitaires pour classer des feuilles/pages
            </summary>
        </member>
        <member name="M:Ocrus.Integration.ClassifyHelpers.ToHeader(Ocrus.Integration.ArrangedSheet)">
            <summary>
            Transforme une feuille arrangée en une feuille HEADER classée<br/>
            Score : 100%, classification "HEADER" pour le recto et le verso , aucune données extraites
            </summary>
            <param name="headerSheet">Feuillée arrangée à classer</param>
            <returns>Feuille classée Header</returns>
        </member>
        <member name="M:Ocrus.Integration.ClassifyHelpers.ClassifySheetFromRecto(System.Collections.Generic.IReadOnlyList{Ocrus.Integration.IClassifyStep},Ocrus.Integration.ArrangedSheet,Ocrus.Integration.IClassifyCombinator)">
            <summary>
            Classe une feuille en suivant des étapes de classifications.
            Classe uniquement en se basant sur la page recto.
            La première étape qui arrive à classer la page recto interromp le traitement et sa classe et ses extractions sont utilisées pour créer la page classée
            </summary>
            <param name="classifySteps">Liste d'étapes de classification</param>
            <param name="sheet">Feuille arrangée à classer</param>
            <param name="combinator">Algorithme de réconciliation entre les résultats des étapes</param>
            <returns>Résultat de classification retenu</returns>
        </member>
        <member name="M:Ocrus.Integration.ClassifyHelpers.ClassifySheetFromRecto(Ocrus.Integration.IClassifyStep,Ocrus.Integration.ArrangedSheet)">
            <summary>
            Classe une feuille en suivant une seule étape de classification.
            Classe uniquement en se basant sur la page recto.
            La classification et les extractions de la page recto sont utilisées pour créer la page classée
            </summary>
            <param name="classifyStep">Etape de classification</param>
            <param name="sheet">Feuille arrangée à classer</param>
            <returns>Résultat de classification</returns>
        </member>
        <member name="T:Ocrus.Integration.ClassifyHelpers.IdxCombinationResult">
            <summary>
            Objet permettant de suivre une page, son indice dans la liste d'entrée (différent de son field Position qui lui est métier) et la combinaison de résultats
            </summary>
        </member>
        <member name="M:Ocrus.Integration.ClassifyHelpers.ClassifySheetFromRectoMulti(System.Collections.Generic.IEnumerable{Ocrus.Integration.IMultiPagesClassifyStep},System.Collections.Generic.IReadOnlyList{Ocrus.Integration.ArrangedSheet},Ocrus.Integration.IClassifyCombinator)">
            <summary>
            Classe des feuilles en suivant des étapes de classifications.
            Classe uniquement en se basant sur la page recto.
            Exécute toutes les étapes de classification indiquées sur un ensemble de feuilles.        
            </summary>
            <param name="classifySteps">Etapes de classifications à passer sur toutes les feuilles</param>
            <param name="sheets">Liste des feuilles à classer</param>
            <param name="combinator">Algorithme de réconciliation entre les résultats des étapes</param>
            <returns>Résultat de classification retenu pour chaque feuille</returns>
        </member>
        <member name="M:Ocrus.Integration.ClassifyHelpers.ClassifySheetFromRectoMulti(Ocrus.Integration.IMultiPagesClassifyStep,System.Collections.Generic.IReadOnlyList{Ocrus.Integration.ArrangedSheet})">
            <summary>
            Classe des feuilles en suivant une seule étape de classification.<br />
            Classe uniquement en se basant sur la page recto.
            Un seul appel est réalisé.
            </summary>
            <param name="classifyStep">Etape de classification à passer sur toutes les feuilles</param>
            <param name="sheets">Liste des feuilles à classer</param>
            <returns>Résultat de classification retenu pour chaque feuille</returns>
        </member>
        <member name="T:Ocrus.Integration.DefaultScanPage">
            <summary>
            Données présentes sur la plupart des pages
            </summary>
        </member>
        <member name="P:Ocrus.Integration.DefaultScanPage.Application">
            <summary>
            Nom du flux pour le scanner
            </summary>
        </member>
        <member name="P:Ocrus.Integration.DefaultScanPage.Endos">
            <summary>
            Endos (Transmission des effets de commerce ou des chèques au moyen d'une signature (endos) apposée au verso) 
            </summary>
        </member>
        <member name="P:Ocrus.Integration.DefaultScanPage.Environnement">
            <summary>
            Environnement (souvent le nom du scanner)
            </summary>
        </member>
        <member name="P:Ocrus.Integration.DefaultScanPage.Jpeg">
            <summary>
            Nom de l'image au format Jpeg
            </summary>
        </member>
        <member name="P:Ocrus.Integration.DefaultScanPage.Lecteur">
            <summary>
            Type de scanner
            </summary>
        </member>
        <member name="P:Ocrus.Integration.DefaultScanPage.PageName">
            <summary>
            Nom de la page
            </summary>
        </member>
        <member name="P:Ocrus.Integration.DefaultScanPage.PageType">
            <summary>
            Type de la page
            </summary>
        </member>
        <member name="P:Ocrus.Integration.DefaultScanPage.Recto">
            <summary>
            R : recto ou V : Verso
            </summary>
        </member>
        <member name="P:Ocrus.Integration.DefaultScanPage.Tiff">
            <summary>
            Nom de l'image au format Tiff
            </summary>
        </member>
        <member name="P:Ocrus.Integration.DefaultScanPage.Traitement">
            <summary>
            Informations complémentaires sur le flux
            </summary>
        </member>
        <member name="P:Ocrus.Integration.DefaultScanPage.Transaction">
            <summary>
            Informations complémentaires sur le flux
            </summary>
        </member>
        <member name="P:Ocrus.Integration.DefaultScanPage.TypeFlux">
            <summary>
            Informations complémentaires sur le flux
            </summary>
        </member>
        <member name="P:Ocrus.Integration.DefaultScanPage.ImageUID">
            <summary>
            Identifiant unique de l'image
            </summary>
        </member>
        <member name="P:Ocrus.Integration.DefaultScanPage.MetaData">
            <summary>
            Meta données qui ont été extraites volontairement d'une page brute
            </summary>
        </member>
        <member name="M:Ocrus.Integration.DefaultScanPage.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Collections.Generic.IReadOnlyDictionary{System.String,System.String})">
            <summary>
            Instancie une page dans sa représentation par défaut
            </summary>
            <param name="application">Nom du flux pour le scanner</param>
            <param name="environnement">Environnement (souvent le nom du scanner)</param>
            <param name="lecteur">Type de scanner</param>
            <param name="pageName">Nom de la page</param>
            <param name="pageType">Type de la page</param>
            <param name="recto"> R : recto ou V : Verso</param>
            <param name="endos">Endos (Transmission des effets de commerce ou des chèques au moyen d'une signature (endos) apposée au verso) </param>
            <param name="jpeg">Nom de l'image au format Jpeg</param>
            <param name="tiff">Nom de l'image au format Tiff</param>
            <param name="traitement">Informations complémentaires sur le flux</param>
            <param name="transaction">Informations complémentaires sur le flux</param>
            <param name="typeFlux">Informations complémentaires sur le flux</param>
            <param name="imageUID">Identifiant unique de l'image</param>
            <param name="metaData">Meta données qui ont été extraites volontairement d'une page brute</param>
        </member>
        <member name="M:Ocrus.Integration.DefaultScanPage.ToPageInfos">
            <summary>
            Extrait les informations minimales représentant une PageInfos
            </summary>
            <returns>PageInfos associée</returns>
        </member>
        <member name="P:Ocrus.Integration.UnknownClassifyStepResult.PreExtractionResults">
            <summary>
            Champs éventuellement extraits au passage
            </summary>
        </member>
        <member name="T:Ocrus.Integration.BestScoreClassifyAggregationCombinator">
            <summary>
            Combinator qui<br />
            - Garde la Classification qui possède le meilleur score et qui au préalable est supérieur à un certain seuil.<br />
            - Ajoute les pre extraction du résultat courant à ceux précédents (possibilité de doublons)<br/>
            - N'interrompt jamais le pipeline des étapes<br/>
            Par défaut le seuil vaut 80.<br />
            </summary>
        </member>
        <member name="M:Ocrus.Integration.BestScoreClassifyAggregationCombinator.#ctor">
            <summary>
            Instancie un combinator de Classification qui opère sur les score.<br />
            Par défaut le seuil de Classification vaut 80.
            </summary>
        </member>
        <member name="M:Ocrus.Integration.BestScoreClassifyAggregationCombinator.#ctor(System.Int32)">
            <summary>
            Instancie un combinator de Classification qui opère sur les score.
            </summary>
            <param name="minScore">Seuil.</param>
        </member>
        <member name="M:Ocrus.Integration.BestScoreClassifyAggregationCombinator.Combine(Ocrus.Integration.CombinationClassify,Ocrus.OneOfTypes.OneOf{Ocrus.Integration.ClassifyStepResult,Ocrus.Integration.UnknownClassifyStepResult})">
            <summary>
            - Garde la Classification qui possède le meilleur score et qui au préalable est supérieur à un certain seuil.<br />
            - Ajoute les pre extraction du résultat courant à ceux précédents (possibilité de doublons, ajoute également les pre-extractions des resultats unknown)<br/>
            - N'interrompt jamais le pipeline des étapes<br/>
            Par défaut le seuil vaut 80.<br />
            </summary>
            <param name="previousResult">Résultat précédent.</param>
            <param name="currentResult">Résultat actuel.</param>
            <returns></returns>
        </member>
        <member name="M:Ocrus.Integration.BestScoreClassifyAggregationCombinator.CombinePreExtractions(System.Collections.Generic.IReadOnlyList{Ocrus.OCREngines.Extraction},System.Collections.Generic.IReadOnlyList{Ocrus.OCREngines.Extraction})">
            <summary>
            Combine deux listes de pre extractions en respectant l'odre de précédence.<br/>
            </summary>
            <param name="preExtractionPrevious"></param>
            <param name="preExtractionCurrent"></param>
            <returns></returns>
        </member>
        <member name="T:Ocrus.Integration.IMappingSelector">
            <summary>
            Représente un algorithme de sélection de mapping d'indexml en fonction d'un <see cref="T:Ocrus.Integration.Syo.ISyoScannerResult"/>
            </summary>
        </member>
        <member name="M:Ocrus.Integration.IMappingSelector.GetMappings(Ocrus.Integration.Syo.ISyoScannerResult)">
            <summary>
            Sélectionne un mapping en fonction de <paramref name="scannerResult"/>
            </summary>
            <param name="scannerResult">Paramètres généraux du résultat d'un scan</param>
            <returns>Mapping d'indexxml retenu</returns>
        </member>
        <member name="T:Ocrus.Integration.MultiPagesClassifyStep">
            <summary>
            Etape de classification multipages. Pour ce faire elle utilise un moteur de classification <see cref="T:Ocrus.OCREngines.IClassifyEngine"/> 
            Cette classe est ensuite confrontée à un dictionnaire de ClassificationMapping afin de filtrer si elle est retenue 
            </summary>
        </member>
        <member name="M:Ocrus.Integration.MultiPagesClassifyStep.#ctor(Ocrus.OCREngines.IClassifyEngine,System.Collections.Generic.IEnumerable{Ocrus.Integration.ClassificationMapping})">
            <summary>
            Etape de classification multipages. Pour ce faire elle utilise un moteur de classification <see cref="T:Ocrus.OCREngines.IClassifyEngine"/> 
            </summary>
            <param name="engine">Moteur de classification</param>
            <param name="mapping">Séquence de mappings des classes</param>
        </member>
        <member name="M:Ocrus.Integration.MultiPagesClassifyStep.Execute(System.Collections.Generic.IEnumerable{Ocrus.Integration.ArrangedPage})">
            <inheritdoc/>
        </member>
        <member name="T:Ocrus.Integration.AllExtractAggregationCombinator">
            <summary>
            Combinator qui    
            - ajoute toutes les extraction du résultat courant à ceux précédents en favorisant ceux qui ont déjà été extraits (pas de doublons)
            - n'interrompt jamais le pipeline des étapes
            </summary>
        </member>
        <member name="M:Ocrus.Integration.AllExtractAggregationCombinator.Combine(Ocrus.Integration.CombinationExtract,Ocrus.Integration.ExtractStepResult)">
            <summary>
            - ajoute toutes les extraction du résultat courant à ceux précédents en favorisant ceux qui ont déjà été extraits (pas de doublons)
            - n'interrompt jamais le pipeline des étapes
            </summary>
            <param name="accumulatedPreviousResults">Résultat cummulé courant</param>
            <param name="currentResult">Résultat unitaire à combiner avec le résultat cumulé courant</param>
            <returns></returns>
        </member>
        <member name="T:Ocrus.Integration.ExtractStepResult">
            <summary>
            Résultat d'une étape d'extraction
            </summary>
        </member>
        <member name="P:Ocrus.Integration.ExtractStepResult.ExtractionResults">
            <summary>
            Champs extraits
            </summary>
        </member>
        <member name="M:Ocrus.Integration.ExtractStepResult.#ctor">
            <summary>
            Aucune valeurs extraites
            </summary>
        </member>
        <member name="M:Ocrus.Integration.ExtractStepResult.#ctor(System.Collections.Generic.IReadOnlyList{Ocrus.OCREngines.Extraction})">
            <summary>
            Des valeurs extraites
            </summary>
            <param name="extractionResults">Valeurs extraites</param>
        </member>
        <member name="T:Ocrus.Integration.CombinationExtract">
            <summary>
            Représente la combinaison de plusieurs étapes d'OCR
            Permet également d'interrompre le pipeline d'exécution des étapes d'ocr
            </summary>
        </member>
        <member name="P:Ocrus.Integration.CombinationExtract.StopPipeline">
            <summary>
            Faut-il stopper le pipeline d'exécution des étapes pour cette combinaison ?
            </summary>
        </member>
        <member name="P:Ocrus.Integration.CombinationExtract.Value">
            <summary>
            La valeur actuelle fruit de la combinaison du résultat des étapes
            </summary>
        </member>
        <member name="M:Ocrus.Integration.CombinationExtract.#ctor">
            <summary>
            Initialise un CombinationExtract neutre qui n'arrête pas le pipeline
            </summary>
        </member>
        <member name="M:Ocrus.Integration.CombinationExtract.#ctor(System.Boolean,Ocrus.Integration.ExtractStepResult)">
            <summary>
            Représente la combinaison de plusieurs étapes d'OCR
            </summary>
            <param name="stopPipeline">Faut-il stopper le pipeline d'exécution des étapes pour cette combinaison ?</param>
            <param name="result">La valeur actuelle fruit de la combinaison du résultat des étapes</param>
        </member>
        <member name="M:Ocrus.Integration.CombinationExtract.InitializeCombinations(System.Int32)">
            <summary>
            Initialise autant de CombinationExtract neutres que demandé
            </summary>
            <param name="count">Nombre de combinaisons neutres à initialiser</param>
            <returns>Liste de combinaisons neutres</returns>
        </member>
        <member name="T:Ocrus.Integration.IExtractCombinator">
            <summary>
            Décrit une recombinaison entre deux résultats de deux étapes d'extraction successives
            </summary>
        </member>
        <member name="M:Ocrus.Integration.IExtractCombinator.Combine(Ocrus.Integration.CombinationExtract,Ocrus.Integration.ExtractStepResult)">
            <summary>
            Combine deux résultats de différentes étapes d'extraction en un seul résultat
            </summary>
            <param name="accumulatedPreviousResults">Résultat cummulé courant</param>
            <param name="currentResult">Résultat supplémentaire à combiner avec le résultat cumulé courant</param>
            <returns>Résultat d'étape d'extraction unique</returns>
        </member>
        <member name="T:Ocrus.Integration.IMultiPagesExtractStep">
            <summary>
            Etape d'extraction.
            Traite plusieurs pages en un seul appel
            </summary>
        </member>
        <member name="M:Ocrus.Integration.IMultiPagesExtractStep.Execute(System.Collections.Generic.IEnumerable{Ocrus.Integration.ClassifiedPage})">
            <summary>
            Extrait les champs des pages
            L'ordre des pages doit être respecté dans la liste de retour.
            </summary>
            <param name="pages">Pages arrangées à extraire</param>
            <returns>Pour chaque page, la liste des valeurs extraites</returns>
        </member>
        <member name="T:Ocrus.Integration.MultiPagesExtractStep">
            <summary>
            Etape d'extraction multipages. Pour ce faire elle utilise un moteur d'extraction <see cref="T:Ocrus.OCREngines.IExtractEngine"/> 
            Ces extradctions sont ensuite confrontées à un dictionnaire de ExtractionMapping afin de filtrer si elles sont retenues
            </summary>
        </member>
        <member name="M:Ocrus.Integration.MultiPagesExtractStep.#ctor(Ocrus.OCREngines.IExtractEngine,System.Collections.Generic.IEnumerable{Ocrus.Integration.ExtractionMapping})">
            <summary>
            Etape d'extraction multipages. Pour ce faire elle utilise un moteur d'extraction <see cref="T:Ocrus.OCREngines.IExtractEngine"/> 
            </summary>
            <param name="engine">Moteur d'extraction</param>
            <param name="mapping"></param>
        </member>
        <member name="M:Ocrus.Integration.MultiPagesExtractStep.Execute(System.Collections.Generic.IEnumerable{Ocrus.Integration.ClassifiedPage})">
            <inheritdoc/>
        </member>
        <member name="T:Ocrus.Integration.IMapping">
            <summary>
            Interface représentant un objet qui définit un mapping
            </summary>
        </member>
        <member name="P:Ocrus.Integration.IMapping.FromTo">
            <summary>
            From stockant le mapping
            </summary>
        </member>
        <member name="T:Ocrus.Integration.MappingConverter">
            <summary>
            Fonctions ulititaires concernant le mapping avec les fromto
            </summary>
        </member>
        <member name="M:Ocrus.Integration.MappingConverter.ToDico``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Projete une liste de mapping dans un dictionnaire où chaque clef du dico est le from
            </summary>
            <typeparam name="T">Type du mapping final</typeparam>
            <param name="mappings">Liste de mappings</param>
            <returns>Dictionnaire de mappings</returns>
        </member>
        <member name="T:Ocrus.Integration.AllExtract`1">
            <summary>
            Extrait les champs des pages d'une feuille en utilisant les étapes d'extraction.
            Execute toutes les étapes d'extraction sur le recto et le verso de la feuille.
            Les champs extraits, pour chaque page, sont l'union de tous les champs extraits sur cette page par toutes les étapes d'extraction.
            Lorsque deux champs extraits ont le même nom, seul le premier champ est retenu.
            </summary>
            <typeparam name="TFluxContext">Type du context du flux</typeparam>
        </member>
        <member name="M:Ocrus.Integration.AllExtract`1.#ctor(Ocrus.UX.IFoldUX,System.Collections.Generic.IReadOnlyList{Ocrus.Integration.IExtractStep})">
            <summary>
            Instancie un AllExtract qui extrait les champs des pages d'une feuille en utilisant les étapes d'extraction.
            Execute toutes les étapes d'extraction sur le recto et le verso de la feuille.
            Les champs extraits, pour chaque page, sont l'union de tous les champs extraits sur cette page par toutes les étapes d'extraction.
            Lorsque deux champs extraits ont le même nom, seul le premier champ est retenu.
            </summary>
        </member>
        <member name="M:Ocrus.Integration.AllExtract`1.ExtractFields(`0,Ocrus.Integration.ClassificationResult)">
            <summary>
            Extrait les champs des pages d'une feuille en utilisant les étapes d'extraction
            Execute toutes les étapes d'extraction sur le recto et le verso de la feuille
            Les champs extraits, pour chaque page, sont l'union de tous les champs extraits sur cette page par toutes les étapes d'extraction
            Lorsque deux champs extraits ont le même nom, seul le premier champ est retenu.      
            </summary>
        </member>
        <member name="T:Ocrus.Integration.ExtractHelpers">
            <summary>
            Utilitaires facilitant l'extractions
            </summary>
        </member>
        <member name="T:Ocrus.Integration.ExtractHelpers.IdxCombinationResult">
            <summary>
            Objet permettant de suivre une page, son indice dans la liste d'entrée (différent de son field Position qui lui est métier) et la combinaison de résultats
            </summary>
        </member>
        <member name="M:Ocrus.Integration.ExtractHelpers.ExtractPage(Ocrus.OneOfTypes.OneOf{Ocrus.Integration.ClassifiedPage,Ocrus.Integration.UnknownPage,Ocrus.OneOfTypes.Nothing},System.Func{Ocrus.Integration.ClassifiedPage,Ocrus.Integration.ClassifiedAndExtractedPage})">
            <summary>
            Extrait une page éventuelle en y appliquant la fonction d'extraction <paramref name="extract"/>
            </summary>
            <param name="verso">Eventuelle page à extraire</param>
            <param name="extract">Fonction d'extraction</param>
            <returns>Eventuelle page extraite</returns>
        </member>
        <member name="M:Ocrus.Integration.ExtractHelpers.ExtractSheetMulti(System.Collections.Generic.IReadOnlyList{Ocrus.Integration.IMultiPagesExtractStep},System.Collections.Generic.IReadOnlyList{Ocrus.OneOfTypes.OneOf{Ocrus.Integration.ClassifiedSheet,Ocrus.Integration.UnknownSheet}},Ocrus.Integration.IExtractCombinator)">
            <summary>
            Extrait les champs des pages des feuilles en suivant des étapes d'extraction.
            Execute toutes les étapes d'extraction sur le recto et le verso de la feuille
            La combinaison des différentes extractions en une liste d'extractions finale est effectuée par le combinator
            </summary>
            <param name="extractSteps">Etapes d'extractions</param>
            <param name="sheets">Feuilles à extraire</param>
            <param name="combinator">Combinator permettant de paramétrer comment les différents résultats des différents moteurs sont combinés</param>
            <returns>Feuilles classées et extraites</returns>
        </member>
        <member name="M:Ocrus.Integration.ExtractHelpers.ExtractSheet(System.Collections.Generic.IReadOnlyList{Ocrus.Integration.IExtractStep},Ocrus.Integration.ClassifiedSheet,Ocrus.Integration.IExtractCombinator)">
            <summary>
            Extrait les champs des pages d'une feuille en utilisant les étapes d'extraction
            Execute toutes les étapes d'extraction sur le recto et le verso de la feuille
            Les champs extraits, pour chaque page, sont l'union de tous les champs extraits sur cette page par toutes les étapes d'extraction
            Lorsque deux champs extraits ont le même nom, les deux seront présents sur la page correspondante        
            </summary>
            <param name="extractSteps">Etapes d'extraction</param>
            <param name="sheet">Feuille dont on souhaite extraire les champs des pages</param>
            <param name="combinator">Combinator permettant de paramétrer comment les différents résultats des différents moteurs sont combinés</param>
            <returns>Feuille classée et extraite</returns>  
        </member>
        <member name="M:Ocrus.Integration.ExtractHelpers.ExtractSheet(Ocrus.Integration.IExtractStep,Ocrus.Integration.ClassifiedSheet)">
            <summary>
            Extrait les champs des pages d'une feuille en utilisant une seule étape d'extraction.
            Execute l'étape d'extraction sur le recto et le verso de la feuille.
            </summary>
            <param name="extractStep">Etape d'extraction</param>
            <param name="sheet">Feuille dont on souhaite extraire les champs des pages</param>
            <returns>Feuille classée et extraite</returns>    
        </member>
        <member name="T:Ocrus.Integration.Syo.DefaultScannerResult">
            <summary>
            Résultat du parsing du répertoire d'intégration
            </summary>
        </member>
        <member name="P:Ocrus.Integration.Syo.DefaultScannerResult.Application">
            <inheritdoc/>
        </member>
        <member name="P:Ocrus.Integration.Syo.DefaultScannerResult.Traitement">
            <inheritdoc/>
        </member>
        <member name="P:Ocrus.Integration.Syo.DefaultScannerResult.IdentificateurLot">
            <inheritdoc/>
        </member>
        <member name="P:Ocrus.Integration.Syo.DefaultScannerResult.Reader">
            <inheritdoc/>
        </member>
        <member name="P:Ocrus.Integration.Syo.DefaultScannerResult.DigitizationDate">
            <inheritdoc/>
        </member>
        <member name="P:Ocrus.Integration.Syo.DefaultScannerResult.Environment">
            <inheritdoc/>
        </member>
        <member name="P:Ocrus.Integration.Syo.DefaultScannerResult.ScanPages">
            <summary>
            Liste des pages
            </summary>
        </member>
        <member name="M:Ocrus.Integration.Syo.DefaultScannerResult.#ctor(System.Collections.Generic.IReadOnlyList{Ocrus.Integration.DefaultScanPage},System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Résultat du parsing du répertoire d'intégration
            </summary>
            <param name="scanPages">Pages chargées</param>
            <param name="application">Nom du flux pour le scanner</param>
            <param name="traitement">Informations complémentaires sur le flux</param>
            <param name="identificateurLot">identifiant du lot</param>
            <param name="reader">Type de scanner</param>
            <param name="digitizationDate">Date d'acquisition</param>
            <param name="environment">Environnement (souvent le nom du scanner)</param>
        </member>
        <member name="T:Ocrus.Integration.Syo.IntegrationBatchInfos">
            <summary>
            Informations propres à un lot donné à traiter.
            </summary>
        </member>
        <member name="P:Ocrus.Integration.Syo.IntegrationBatchInfos.Application">
            <summary>
            Nom du flux pour le scanner
            </summary>
        </member>
        <member name="P:Ocrus.Integration.Syo.IntegrationBatchInfos.Traitement">
            <summary>
            Informations complémentaires sur le flux
            </summary>
        </member>
        <member name="P:Ocrus.Integration.Syo.IntegrationBatchInfos.IdentificateurLot">
            <summary>
            IdentificateurLot présent dans les pages du index.xml, sert à calculer l'identification unique du lot
            </summary>
        </member>
        <member name="P:Ocrus.Integration.Syo.IntegrationBatchInfos.Reader">
            <summary>
            Type de scanner
            </summary>
        </member>
        <member name="P:Ocrus.Integration.Syo.IntegrationBatchInfos.DigitizationDate">
            <summary>
            Date de numérisation/réception
            </summary>
        </member>
        <member name="P:Ocrus.Integration.Syo.IntegrationBatchInfos.Environment">
            <summary>
            Environnement (souvent le nom du scanner)
            </summary>
        </member>
        <member name="P:Ocrus.Integration.Syo.IntegrationBatchInfos.FullIDLot">
            <summary>
            Identifiant du lot au sens de l'infra. <br />
            Il y a l'identifiant du lot initial connu du scanner et l'identifiant du lot une fois inséré dans l'infra (idlot de l'infra garantit une unicité, il est plus complexe)
            </summary>
        </member>
        <member name="M:Ocrus.Integration.Syo.IntegrationBatchInfos.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Informations propres à un lot donné à traiter.
            </summary>
            <param name="application"></param>
            <param name="traitement"></param>
            <param name="identificateurLot"></param>
            <param name="reader">Nom du lecteur qui numérisé les pages</param>
            <param name="digitizationDate">Date de numérisation/réception</param>
            <param name="environment"></param>
            <param name="fullIDLot"></param>
        </member>
        <member name="T:Ocrus.Integration.Syo.IntegrationJobInfos">
            <summary>
            Informations constantes qui ne changent pas entre les différents lots à traiter
            </summary>
        </member>
        <member name="P:Ocrus.Integration.Syo.IntegrationJobInfos.CustomerID">
            <summary>
            CustomerID
            </summary>
        </member>
        <member name="P:Ocrus.Integration.Syo.IntegrationJobInfos.BusinessID">
            <summary>
            BusinessID
            </summary>
        </member>
        <member name="P:Ocrus.Integration.Syo.IntegrationJobInfos.Site">
            <summary>
            Site où tourne le job
            </summary>
        </member>
        <member name="P:Ocrus.Integration.Syo.IntegrationJobInfos.RootDirectory">
            <summary>
            Répertoire racine d'intégration
            </summary>
        </member>
        <member name="P:Ocrus.Integration.Syo.IntegrationJobInfos.CheckSubDirectories">
            <summary>
            Faut-il scanner les sous répertoires pour récupérer les lots
            </summary>
        </member>
        <member name="P:Ocrus.Integration.Syo.IntegrationJobInfos.IndexFile">
            <summary>
            Nom de l'index.xml
            </summary>
        </member>
        <member name="P:Ocrus.Integration.Syo.IntegrationJobInfos.CWName">
            <summary>
            Nom du customer workflow
            </summary>
        </member>
        <member name="M:Ocrus.Integration.Syo.IntegrationJobInfos.#ctor(System.String,System.String,System.String,System.String,System.Boolean,System.String,System.String)">
            <summary>
            Informations constantes qui ne changent pas entre les différents lots à traiter
            </summary>
            <param name="customerID">CustomerID</param>
            <param name="businessID">BusinessID</param>
            <param name="site">Site où tourne le job</param>
            <param name="rootDirectory">Répertoire racine d'intégration</param>
            <param name="checkSubDirectories">aut-il scanner les sous répertoires pour récupérer les lots</param>
            <param name="indexFile">Nom de l'index.xml</param>
            <param name="cwname">Nom du customer workflow</param>
        </member>
        <member name="T:Ocrus.Integration.Syo.ISYOIntegrationContext">
            <summary>
            Contexte d'execution de l'intégration lorsque l'on s'execute dans le cycle de vie de SYO
            </summary>
        </member>
        <member name="P:Ocrus.Integration.Syo.ISYOIntegrationContext.JobInfos">
            <summary>
            Informations constantes qui ne changent pas entre les différents lots à traiter
            </summary>
        </member>
        <member name="P:Ocrus.Integration.Syo.ISYOIntegrationContext.BatchInfos">
            <summary>
            Informations propres à un lot donné à traiter.
            </summary>
        </member>
        <member name="P:Ocrus.Integration.Syo.ISYOIntegrationContext.DirectoryToProcess">
            <summary>
            Répertoire où sont stockés les lots à traiter
            </summary>
        </member>
        <member name="P:Ocrus.Integration.Syo.ISYOIntegrationContext.CollectedStats">
            <summary>
            Statistics collectées
            </summary>
        </member>
        <member name="M:Ocrus.Integration.Syo.ISYOIntegrationContext.AddBatchContext(Ocrus.Integration.Syo.IntegrationBatchInfos)">
            <summary>
            Ajoute les informations du lot courant au contexte courant
            </summary>
            <param name="batchInfos">Information du lot courant</param>
        </member>
        <member name="T:Ocrus.Integration.Syo.SyoIntegrationStatistics">
            <summary>
            Statistics collectées
            </summary>
        </member>
        <member name="P:Ocrus.Integration.Syo.SyoIntegrationStatistics.PagesCount">
            <summary>
            Nombre de pages traitées
            </summary>
        </member>
        <member name="T:Ocrus.Integration.Syo.ISyoScannerResult">
            <summary>
            Résultat du scanner dans un contexte SYO
            </summary>
        </member>
        <member name="P:Ocrus.Integration.Syo.ISyoScannerResult.Application">
            <summary>
            Nom du flux pour le scanner
            </summary>
        </member>
        <member name="P:Ocrus.Integration.Syo.ISyoScannerResult.Traitement">
            <summary>
            Informations complémentaires sur le flux
            </summary>
        </member>
        <member name="P:Ocrus.Integration.Syo.ISyoScannerResult.IdentificateurLot">
            <summary>
            Identifiant du lot lors du scan
            </summary>
        </member>
        <member name="P:Ocrus.Integration.Syo.ISyoScannerResult.Reader">
            <summary>
            Type de scanner
            </summary>
        </member>
        <member name="P:Ocrus.Integration.Syo.ISyoScannerResult.DigitizationDate">
            <summary>
            Date d'acquisition
            </summary>
        </member>
        <member name="P:Ocrus.Integration.Syo.ISyoScannerResult.Environment">
            <summary>
            Environnement (souvent le nom du scanner)
            </summary>
        </member>
        <member name="T:Ocrus.Integration.IArrange`2">
            <summary>
            Interface que doit implémenter le business d'arrangement des feuilles
            </summary>
            <typeparam name="TScannerResult">Type modélisant le résulat du scanner</typeparam>
            <typeparam name="TFluxContext">Type modélisant contexte courant du flux</typeparam>
        </member>
        <member name="M:Ocrus.Integration.IArrange`2.Arrange(`1,`0)">
            <summary>
            Arrange les pages en feuilles arrangées dans le bon ordre.
            </summary>
            <param name="fluxContext">Contexte courant du flux</param>
            <param name="scannerResult">Résultat du chargement des données que le flux doit traiter</param>
            <returns>Pages en feuilles arrangées dans le bon ordre</returns>
        </member>
        <member name="T:Ocrus.Integration.IExtract`1">
            <summary>
            Interface que doit implémenter le business d'extraction des champs des feuilles
            </summary>
            <typeparam name="TFluxContext">Type modélisant contexte courant du flux</typeparam>
        </member>
        <member name="M:Ocrus.Integration.IExtract`1.ExtractFields(`0,Ocrus.Integration.ClassificationResult)">
            <summary>
            Extrait les champs des pages.
            </summary>
            <param name="fluxContext">Contexte courant du flux</param>
            <param name="classificationResult">Feuilles classées</param>
            <returns>Lot totalement intégré</returns>
        </member>
        <member name="T:Ocrus.Integration.IClassify`1">
            <summary>
            Interface que doit implémenter le business de classification des feuilles
            </summary>
            <typeparam name="TFluxContext">Type modélisant contexte courant du flux</typeparam>
        </member>
        <member name="M:Ocrus.Integration.IClassify`1.Classify(`0,System.Collections.Generic.IReadOnlyList{Ocrus.Integration.ArrangedSheet})">
            <summary>
            Type les feuilles et les pages du lot.
            </summary>
            <param name="fluxContext">Contexte courant du flux</param>
            <param name="arrangedSheets">Feuilles arrangées et ordonnées</param>
            <returns>Début de lot contenant un header et des feuilles arrangées et classées</returns>
        </member>
        <member name="T:Ocrus.Integration.IIntegrator`2">
            <summary>
            Coeur de métier de l'intégration
            </summary>
            <typeparam name="TScannerResult">Type d'objet retourné par le chargement de l'entrée d'un flux (typiquement indexxml)</typeparam>
            <typeparam name="TFluxContext">Type matérialisant le contexte du flux</typeparam>
        </member>
        <member name="T:Ocrus.Integration.DocumentTypeFold">
            <summary>
            Représente le type d'un document traité par le Customer Workflow
            </summary>
        </member>
        <member name="P:Ocrus.Integration.DocumentTypeFold.DocumentTypeCode">
            <summary>
            Type du document (BORDEREAU, etc.)
            </summary>
        </member>
        <member name="P:Ocrus.Integration.DocumentTypeFold.Shortcut">
            <summary>
            Quel est le raccourci dans rafale
            </summary>
        </member>
        <member name="P:Ocrus.Integration.DocumentTypeFold.IsSplit">
            <summary>
            True si ce document est un marqueur de changement de pli
            </summary>
        </member>
        <member name="M:Ocrus.Integration.DocumentTypeFold.#ctor(System.String,Ocrus.OneOfTypes.OneOf{Ocrus.UX.Default,Ocrus.UX.HotKeys,Ocrus.UX.AutoComplete},System.Boolean)">
            <summary>
            Représente le type d'un document traité par le Customer Workflow
            </summary>
            <param name="documentTypeCode">Type du document (BORDEREAU, etc.)</param>
            <param name="shortcut">Quel est le raccourci dans rafale</param>
            <param name="isSplit">True si ce document est un marqueur de changement de pli</param>
        </member>
        <member name="T:Ocrus.Integration.ClassificationResult">
            <summary>
            Ensemble des feuilles classées suite à l'étape de classification
            </summary>
        </member>
        <member name="P:Ocrus.Integration.ClassificationResult.HeaderSheet">
            <summary>
            Feuille header du pli
            </summary>
        </member>
        <member name="P:Ocrus.Integration.ClassificationResult.ClassifiedSheets">
            <summary>
            Feuilles qui ont été classées.
            Elle sont soient de classe connue : ClassifiedSheet, soit de classe inconnue UnknownSheet
            </summary>
        </member>
        <member name="M:Ocrus.Integration.ClassificationResult.#ctor(Ocrus.Integration.ClassifiedSheet,System.Collections.Generic.IReadOnlyList{Ocrus.OneOfTypes.OneOf{Ocrus.Integration.ClassifiedSheet,Ocrus.Integration.UnknownSheet}})">
            <summary>
            Ensemble des feuilles classées suite à l'étape de classification
            </summary>
            <param name="headerSheet">Feuille header</param>
            <param name="classifiedSheets">Liste de feuille éventuellement classées</param>
        </member>
        <member name="T:Ocrus.Integration.NothingToDo">
            <summary>
            Classe indiquant qu'il n'y a rien à faire
            </summary>
        </member>
        <member name="T:Ocrus.Integration.IFluxInitializer`1">
            <summary>
            Initialize le traitement d'un lot
            </summary>
            <typeparam name="TFluxContext">Contecte du flux initialisé</typeparam>
        </member>
        <member name="M:Ocrus.Integration.IFluxInitializer`1.InitContext">
            <summary>
            Initialise le traitement d'un lot.
            Est appelé lorsqu'un nouveau lot est à traiter.
            En fonction des informations reçues, des données, etc. peut décider de ne rien faire. Auquel cas retourner NothingToDo
            </summary>
            <returns>Soit un contexte qui va perdurer pendant tout le traitement du lot. Soit NothingToDo</returns>
        </member>
        <member name="T:Ocrus.Integration.IScannerLoader`2">
            <summary>
            Permet de charger l'entrée d'un flux
            </summary>
            <typeparam name="TScannerResult">Type d'objet retourné par le chargement de l'entrée d'un flux (typiquement indexxml)</typeparam>
            <typeparam name="TFluxContext">Type matérialisant le contexte du flux</typeparam>
        </member>
        <member name="M:Ocrus.Integration.IScannerLoader`2.Load(`1)">
            <summary>
            Charge la matière que le flux va devoir traiter (metadonnées, images, pdf, emails, etc.)
            </summary>
            <param name="fluxContext">Contexte courant du flux</param>
            <returns>Objet pertinent pour représenter la matière chargée et dont va se nourrir l'étape d'arrangement des feuilles</returns>
        </member>
        <member name="T:Ocrus.Integration.IIntegrationRepository`1">
            <summary>
            Représente le repository de stockage du résultat de l'intégration
            </summary>
            <typeparam name="TFluxContext">Context du flux</typeparam>
        </member>
        <member name="M:Ocrus.Integration.IIntegrationRepository`1.SaveFold(`0,Ocrus.Integration.FoldToIntegrate)">
            <summary>
            Sauvegarde le <paramref name="fold"/> dans l'infrastructure de persistence choisie
            </summary>
            <param name="fluxContext">Contexte courant du flux</param>
            <param name="fold">Fold à faire persister</param>
        </member>
        <member name="T:Ocrus.Integration.ClassifiedPage">
            <summary>
            Page classée
            </summary>
        </member>
        <member name="P:Ocrus.Integration.ClassifiedPage.Classification">
            <summary>
            Classe de la page
            </summary>
        </member>
        <member name="M:Ocrus.Integration.ClassifiedPage.#ctor(Ocrus.Integration.ArrangedPage,Ocrus.OCREngines.Classification,System.Collections.Generic.IReadOnlyList{Ocrus.OCREngines.Extraction})">
            <summary>
            Page classée
            </summary>
            <param name="p">Page arrangée</param>
            <param name="classification">Classification de la page</param>
            <param name="preExtractions">Eventuelles pre-extractions</param>
        </member>
        <member name="M:Ocrus.Integration.ClassifiedPage.#ctor(Ocrus.Integration.ArrangedPage,Ocrus.OCREngines.Classification)">
            <summary>
            Instancie une page classée avec aucune données extraites
            </summary>
            <param name="p">Page arrangée</param>
            <param name="classification">Classification de la page</param>        
        </member>
        <member name="M:Ocrus.Integration.ClassifiedPage.ToPageOCR">
            <summary>
            Transforme en PageOCR
            </summary>
            <returns>PageOCR</returns>
        </member>
        <member name="T:Ocrus.Integration.AnalyzedPageBase">
            <summary>
            Page qui a été analysée.
            Analysée signifie que l'on a tenté de classer cette page.
            </summary>
        </member>
        <member name="P:Ocrus.Integration.AnalyzedPageBase.Infos">
            <summary>
            Information sur la page
            </summary>
        </member>
        <member name="P:Ocrus.Integration.AnalyzedPageBase.PositionInBatch">
            <summary>
            Position de la page dans le lot
            </summary>
        </member>
        <member name="P:Ocrus.Integration.AnalyzedPageBase.MetaData">
            <summary>
            Meta données de la page
            </summary>
        </member>
        <member name="P:Ocrus.Integration.AnalyzedPageBase.PreExtractions">
            <summary>
            Champ qui ont éventuellement déjà été pre-extraits en même temmps que l'analyse de la page
            </summary>
        </member>
        <member name="M:Ocrus.Integration.AnalyzedPageBase.#ctor(Ocrus.Integration.ArrangedPage,System.Collections.Generic.IReadOnlyList{Ocrus.OCREngines.Extraction})">
            <summary>
            Page qui a été analysée.
            Analysée signifie que l'on a tenté de classer cette page.
            </summary>
            <param name="p">Page arrangée</param>
            <param name="preExtractions">Eventuelles pré-extractions</param>
        </member>
        <member name="T:Ocrus.Integration.UnknownPage">
            <summary>
            Page de classe inconnue
            </summary>
        </member>
        <member name="M:Ocrus.Integration.UnknownPage.#ctor(Ocrus.Integration.ArrangedPage)">
            <summary>
            Page de classe inconnue
            </summary>
            <param name="page">Arrange page initiale</param>
        </member>
        <member name="M:Ocrus.Integration.UnknownPage.#ctor(Ocrus.Integration.ArrangedPage,System.Collections.Generic.IReadOnlyList{Ocrus.OCREngines.Extraction})">
            <summary>
            Page de classe inconnue avec des extractions
            </summary>
            <param name="page">Arrange page initiale</param>
            <param name="extraction">Valeur extraites depuis la page</param>
        </member>
        <member name="T:Ocrus.Integration.ClassifiedAndExtractedPage">
            <summary>
            Page classée dont on a éventuellement extrait des champs
            </summary>
        </member>
        <member name="P:Ocrus.Integration.ClassifiedAndExtractedPage.Classification">
            <summary>
            Classification de la page
            </summary>
        </member>
        <member name="P:Ocrus.Integration.ClassifiedAndExtractedPage.Fields">
            <summary>
            List des champs extraits
            </summary>
        </member>
        <member name="P:Ocrus.Integration.ClassifiedAndExtractedPage.Infos">
            <summary>
            Informations sur la page
            </summary>
        </member>
        <member name="P:Ocrus.Integration.ClassifiedAndExtractedPage.MetaData">
            <summary>
            Meta données associées à la page
            </summary>
        </member>
        <member name="P:Ocrus.Integration.ClassifiedAndExtractedPage.PositionInBatch">
            <summary>
            Position de la page dans le lot
            </summary>
        </member>
        <member name="M:Ocrus.Integration.ClassifiedAndExtractedPage.#ctor(Ocrus.Integration.ClassifiedPage)">
            <summary>
            Page classée sans champs extraits
            </summary>
            <param name="page">Page classée</param>
        </member>
        <member name="M:Ocrus.Integration.ClassifiedAndExtractedPage.#ctor(Ocrus.Integration.ClassifiedPage,System.Collections.Generic.IReadOnlyList{Ocrus.OCREngines.Extraction})">
            <summary>
            Page classée dont on a extrait des champs
            </summary>
            <param name="page">Page classée</param>
            <param name="fields">Champs extraits</param>
        </member>
        <member name="M:Ocrus.Integration.ClassifiedAndExtractedPage.#ctor(Ocrus.OCREngines.Classification,Ocrus.PageInfos,System.Collections.Generic.IReadOnlyDictionary{System.String,System.String},System.Int32,System.Collections.Generic.IReadOnlyList{Ocrus.OCREngines.Extraction})">
            <summary>
            Page classée dont on a extrait des champs
            </summary>
            <param name="classification">Classification de la page</param>
            <param name="infos">Informations sur la page</param>
            <param name="metaData">Meta données associées à la page</param>
            <param name="positionInBatch">Position de la page dans le lot</param>
            <param name="fields">Champs extraits</param>
        </member>
        <member name="T:Ocrus.Integration.ClassifiedAndExtractedSheet">
            <summary>
            Feuille classée dont on a éventuellement extrait les champs (de ses pages)
            </summary>
        </member>
        <member name="P:Ocrus.Integration.ClassifiedAndExtractedSheet.Classification">
            <summary>
            Classification de la feuille
            </summary>
        </member>
        <member name="P:Ocrus.Integration.ClassifiedAndExtractedSheet.Recto">
            <summary>
            Page recto classée dont on a éventuellement extrait les champs
            </summary>
        </member>
        <member name="P:Ocrus.Integration.ClassifiedAndExtractedSheet.Verso">
            <summary>
            Contient soit une page classée, soit une page inconnue, soit aucune page
            </summary>
        </member>
        <member name="P:Ocrus.Integration.ClassifiedAndExtractedSheet.PositionInBatch">
            <summary>
            Position dans le lot
            </summary>
        </member>
        <member name="M:Ocrus.Integration.ClassifiedAndExtractedSheet.#ctor(Ocrus.Integration.ClassifiedSheet)">
            <summary>
            Instancie une feuille classée avec aucun champs extraits
            </summary>
            <param name="sheet">Feuille classée à partir de laquelle instancier une feuille classée sans champs extraits</param>
        </member>
        <member name="M:Ocrus.Integration.ClassifiedAndExtractedSheet.#ctor(Ocrus.Integration.ClassifiedAndExtractedPage,Ocrus.OneOfTypes.OneOf{Ocrus.Integration.ClassifiedAndExtractedPage,Ocrus.Integration.UnknownPage,Ocrus.OneOfTypes.Nothing},Ocrus.OCREngines.Classification,System.Int32)">
            <summary>
            Instancie une feuille classée en fonction de ses pages
            </summary>
            <param name="recto">Page recto classée et extraite</param>
            <param name="verso">Eventuelle page vecto classée et extraite</param>
            <param name="classification">Classification de la feuille</param>
            <param name="positionInBatch">Position dans le lot de la feuille</param>
        </member>
        <member name="M:Ocrus.Integration.ClassifiedAndExtractedSheet.#ctor(Ocrus.Integration.ClassifiedPage,Ocrus.OneOfTypes.OneOf{Ocrus.Integration.ClassifiedPage,Ocrus.Integration.UnknownPage,Ocrus.OneOfTypes.Nothing},Ocrus.OCREngines.Classification,System.Int32)">
            <summary>
            Instancie une feuille classée avec aucun champs extraits
            </summary>
            <param name="recto">Page recto classée</param>
            <param name="verso">Eventuelle page verso</param>
            <param name="classification">Classe de la feuille</param>
            <param name="positionInBatch">Position dans le lot de la feuille</param>
        </member>
        <member name="T:Ocrus.Integration.FoldToIntegrate">
            <summary>
            Représente le résultat de l'étape d'intégration d'un point de vue métier.
            Ce résultat est injecté dans la base qui sert de stockage (Syo pour le moment)
            </summary>
        </member>
        <member name="P:Ocrus.Integration.FoldToIntegrate.BatchHeaderSheet">
            <summary>
            Feuille header du lot
            </summary>
        </member>
        <member name="P:Ocrus.Integration.FoldToIntegrate.ClassifiedAndFieldsSheets">
            <summary>
            Feuilles qui ont été classées et dont on a éventuellement extrait des champs
            Contient également les feuilles qui n'ont pas pu être classées. Elles partiront en identification manuelle dans Rafale.
            </summary>
        </member>
        <member name="P:Ocrus.Integration.FoldToIntegrate.DocTypes">
            <summary>
            Liste des types de documents supportés par le customer workflow
            </summary>
        </member>
        <member name="M:Ocrus.Integration.FoldToIntegrate.#ctor(Ocrus.Integration.ClassifiedAndExtractedSheet,System.Collections.Generic.IReadOnlyList{Ocrus.OneOfTypes.OneOf{Ocrus.Integration.ClassifiedAndExtractedSheet,Ocrus.Integration.UnknownSheet}},System.Collections.Generic.IReadOnlyList{Ocrus.Integration.DocumentTypeFold})">
            <summary>
            Représente le résultat de l'étape d'intégration d'un point de vue métier.
            </summary>
            <param name="batchHeaderSheet">Header du lot</param>
            <param name="classifiedAndFieldsSheets">Feuilles qui ont été classées et dont on a éventuellement extrait des champs</param>
            <param name="docTypes">Liste des types de documents supportés par le customer workflow</param>
        </member>
        <member name="T:Ocrus.Integration.ClassifiedSheet">
            <summary>
            Feuille de classification connue
            </summary>
        </member>
        <member name="P:Ocrus.Integration.ClassifiedSheet.Recto">
            <summary>
            Page recto classée
            </summary>
        </member>
        <member name="P:Ocrus.Integration.ClassifiedSheet.Verso">
            <summary>
            Soit une page verso classée, inconnue ou aucune page
            </summary>
        </member>
        <member name="P:Ocrus.Integration.ClassifiedSheet.Classification">
            <summary>
            Classification de la feuille
            </summary>
        </member>
        <member name="P:Ocrus.Integration.ClassifiedSheet.PositionInBatch">
            <summary>
            Position de la feuille dans le batch
            </summary>
        </member>
        <member name="M:Ocrus.Integration.ClassifiedSheet.#ctor(Ocrus.Integration.ClassifiedPage,Ocrus.OneOfTypes.OneOf{Ocrus.Integration.ClassifiedPage,Ocrus.Integration.UnknownPage,Ocrus.OneOfTypes.Nothing},System.Int32,Ocrus.OCREngines.Classification)">
            <summary>
            Feuille classée
            </summary>
            <param name="recto">Page recto classée</param>
            <param name="verso">Eventuelle page verso</param>
            <param name="positionInBatch">position de la feuille dans le lot</param>
            <param name="classification">Classe de la feuille</param>
        </member>
        <member name="M:Ocrus.Integration.ClassifiedSheet.#ctor(Ocrus.Integration.ClassifiedPage,Ocrus.Integration.ClassifiedPage,System.Int32,Ocrus.OCREngines.Classification)">
            <summary>
            Feuille classée avec verso connu
            </summary>
            <param name="recto">Page recto classée</param>
            <param name="verso">Page verso</param>
            <param name="positionInBatch">position de la feuille dans le lot</param>
            <param name="classification">Classe de la feuille</param>
        </member>
        <member name="M:Ocrus.Integration.ClassifiedSheet.#ctor(Ocrus.Integration.ClassifiedPage,Ocrus.Integration.UnknownPage,System.Int32,Ocrus.OCREngines.Classification)">
            <summary>
            Feuille classée avec verso inconnu
            </summary>
            <param name="recto">Page recto classée</param>
            <param name="verso">Verso inconnu</param>
            <param name="positionInBatch">position de la feuille dans le lot</param>
            <param name="classification">Classe de la feuille</param>
        </member>
        <member name="M:Ocrus.Integration.ClassifiedSheet.#ctor(Ocrus.Integration.ClassifiedPage,System.Int32,Ocrus.OCREngines.Classification)">
            <summary>
            Feuille classée sans verso
            </summary>
            <param name="recto">Page recto classée</param>       
            <param name="positionInBatch">position de la feuille dans le lot</param>
            <param name="classification">Classe de la feuille</param>
        </member>
        <member name="T:Ocrus.Integration.ArrangedPage">
            <summary>
            Une page arrangée est une page qui a été associée à sa feuille, du bon côté (recto ou verso)
            </summary>
        </member>
        <member name="P:Ocrus.Integration.ArrangedPage.Infos">
            <summary>
            Informations sur la page
            </summary>
        </member>
        <member name="P:Ocrus.Integration.ArrangedPage.PositionInBatch">
            <summary>
            Position de la page dans le lot
            </summary>
        </member>
        <member name="P:Ocrus.Integration.ArrangedPage.MetaData">
            <summary>
            méta données de la page
            </summary>
        </member>
        <member name="P:Ocrus.Integration.ArrangedPage.PreClassification">
            <summary>
            Eventuelle pre-classification de la page que l'on aurait extraite dès l'arrangement de la page
            </summary>
        </member>
        <member name="P:Ocrus.Integration.ArrangedPage.PreExtractions">
            <summary>
            Eventuelle pre-extraction des champs que l'on aurait faite dès l'arrangement de la page
            </summary>
        </member>
        <member name="M:Ocrus.Integration.ArrangedPage.#ctor(Ocrus.PageInfos,System.Int32)">
            <summary>
            Instancie une page arrangée sans métadonnées, sans preclassification ni pre extraction
            </summary>
            <param name="infos">Information sur la page</param>
            <param name="position">Position dans le batch</param>
        </member>
        <member name="M:Ocrus.Integration.ArrangedPage.#ctor(Ocrus.PageInfos,System.Int32,System.Collections.Generic.IReadOnlyDictionary{System.String,System.String})">
            <summary>
            Instancie une page arrangée sans preclassification ni pre extraction
            </summary>
            <param name="infos">Information sur la page</param>
            <param name="positionInBatch">Position dans le batch</param>
            <param name="metaData">Metadonnée associées</param>
        </member>
        <member name="M:Ocrus.Integration.ArrangedPage.#ctor(Ocrus.PageInfos,System.Int32,System.Collections.Generic.IReadOnlyDictionary{System.String,System.String},Ocrus.OneOfTypes.OneOf{Ocrus.OCREngines.Classification,Ocrus.OCREngines.UnknownClassification})">
            <summary>
            Instancie une page arrangée sans pre extraction
            </summary>
            <param name="infos">Information sur la page</param>
            <param name="positionInBatch">Position dans le batch</param>
            <param name="metaData">Metadonnée associées</param>
            <param name="preClassification">Eventuelle pré-classification</param>
        </member>
        <member name="M:Ocrus.Integration.ArrangedPage.#ctor(Ocrus.PageInfos,System.Int32,System.Collections.Generic.IReadOnlyDictionary{System.String,System.String},Ocrus.OneOfTypes.OneOf{Ocrus.OCREngines.Classification,Ocrus.OCREngines.UnknownClassification},System.Collections.Generic.IReadOnlyList{Ocrus.OCREngines.Extraction})">
            <summary>
            Instancie une page arrangée 
            </summary>
            <param name="infos">Information sur la page</param>
            <param name="positionInBatch">Position dans le batch</param>
            <param name="metaData">Metadonnée associées</param>
            <param name="preClassification">Eventuelle pré-classification</param>
            <param name="preExtractions">Liste de champs pré-extraits</param>
        </member>
        <member name="M:Ocrus.Integration.ArrangedPage.ToPageOCR">
            <summary>
            Transforme en <see cref="T:Ocrus.OCREngines.PageOCR"/>
            </summary>
            <returns>PageOCR</returns>
        </member>
        <member name="T:Ocrus.Integration.ArrangedSheet">
            <summary>
            Une feuille arrangée est une feuille reconstituée à partir de pages
            </summary>
        </member>
        <member name="P:Ocrus.Integration.ArrangedSheet.Recto">
            <summary>
            Page recto
            </summary>
        </member>
        <member name="P:Ocrus.Integration.ArrangedSheet.Verso">
            <summary>
            Page verso ou aucune page
            </summary>
        </member>
        <member name="P:Ocrus.Integration.ArrangedSheet.PositionInBatch">
            <summary>
            Position de la feuille dans le lot
            </summary>
        </member>
        <member name="M:Ocrus.Integration.ArrangedSheet.#ctor(Ocrus.Integration.ArrangedPage,System.Int32)">
            <summary>
            Instancie une feuille sans verso
            </summary>
            <param name="recto">page recto</param>
            <param name="positionInBatch">Position de la feuille dans le lot</param>
        </member>
        <member name="M:Ocrus.Integration.ArrangedSheet.#ctor(Ocrus.Integration.ArrangedPage,Ocrus.Integration.ArrangedPage,System.Int32)">
            <summary>
            Instancie une feuille avec verso
            </summary>
            <param name="recto">Page recto</param>
            <param name="verso">Page verso</param>
            <param name="positionInBatch">Position de la feuille dans le lot</param>
        </member>
        <member name="T:Ocrus.Integration.UnknownSheet">
            <summary>
            Feuille de classe inconnue
            </summary>
        </member>
        <member name="P:Ocrus.Integration.UnknownSheet.Recto">
            <summary>
            Recto de classification connue ou inconnue
            </summary>
        </member>
        <member name="P:Ocrus.Integration.UnknownSheet.Verso">
            <summary>
            Verso de classification connue, inconnue ou aucun verso
            </summary>
        </member>
        <member name="P:Ocrus.Integration.UnknownSheet.PositionInBatch">
            <summary>
            Position dans le pli
            </summary>
        </member>
        <member name="M:Ocrus.Integration.UnknownSheet.#ctor(Ocrus.Integration.UnknownPage,System.Int32)">
            <summary>
            Créé une feuille inconnue à partir d'un recto inconnu sans verso
            </summary>
        </member>
        <member name="M:Ocrus.Integration.UnknownSheet.#ctor(Ocrus.OneOfTypes.OneOf{Ocrus.Integration.ClassifiedPage,Ocrus.Integration.UnknownPage},Ocrus.OneOfTypes.OneOf{Ocrus.Integration.ClassifiedPage,Ocrus.Integration.UnknownPage,Ocrus.OneOfTypes.Nothing},System.Int32)">
            <summary>
            Créé une feuille inconnue
            </summary>
        </member>
        <member name="M:Ocrus.Integration.UnknownSheet.CreateWithUnknownVerso(Ocrus.Integration.ArrangedSheet,System.Collections.Generic.IReadOnlyList{Ocrus.OCREngines.Extraction})">
            <summary>
            Créer une feuille de classe inconnue à partir d'une feuille arrangée
            </summary>
            <param name="sheet">Feuille arrangée</param>
            <param name="extractions">Extractions trouvées sur le recto</param>
            <returns>Feuille de classe inconnue</returns>
        </member>
        <member name="T:Ocrus.Integration.CombinationClassify">
            <summary>
            Représente la combinaison de plusieurs étapes d'OCR
            Permet également d'interrompre le pipeline d'exécution des étapes d'ocr
            </summary>
        </member>
        <member name="P:Ocrus.Integration.CombinationClassify.StopPipeline">
            <summary>
            Faut-il stopper le pipeline d'exécution des étapes pour cette combinaison ?
            </summary>
        </member>
        <member name="P:Ocrus.Integration.CombinationClassify.Value">
            <summary>
            La valeur actuelle fruit de la combinaison du résultat des étapes
            </summary>
        </member>
        <member name="M:Ocrus.Integration.CombinationClassify.#ctor">
            <summary>
            Initialise un CombinationResult neutre 
            </summary>
        </member>
        <member name="M:Ocrus.Integration.CombinationClassify.#ctor(System.Boolean,Ocrus.OneOfTypes.OneOf{Ocrus.Integration.ClassifyStepResult,Ocrus.Integration.UnknownClassifyStepResult})">
            <summary>
            Représente la combinaison de plusieurs étapes d'OCR
            </summary>
            <param name="stopPipeline">Faut-il stopper le pipeline d'exécution des étapes pour cette combinaison ?</param>
            <param name="result">La valeur actuelle fruit de la combinaison du résultat des étapes</param>
        </member>
        <member name="M:Ocrus.Integration.CombinationClassify.InitializeCombinations(System.Int32)">
            <summary>
            Initialise autant de CombinaisonResult neutres que demandé
            </summary>
            <param name="count">Nombre de combinaisons neutres à initialiser</param>
            <returns>Liste de combinaisons neutres</returns>
        </member>
        <member name="T:Ocrus.Integration.FirstStepClassifyAggregationCombinator">
            <summary>
            Combinator qui
            - garde la première classe trouvée par une étape
            - ajoute les pre extraction du résultat courant à ceux précédents en favorisant ceux qui ont déjà été extraits (pas de doublons)
            - n'interrompt jamais le pipeline des étapes
            </summary>
        </member>
        <member name="M:Ocrus.Integration.FirstStepClassifyAggregationCombinator.CombinePreExtractions(System.Collections.Generic.IReadOnlyList{Ocrus.OCREngines.Extraction},System.Collections.Generic.IReadOnlyList{Ocrus.OCREngines.Extraction})">
            <summary>
            Ajoute les nouvelles preExtractions si elles ne sont pas déjà présentes en respectant la précédence des preExtractions déjà extraites.
            Cela signifie que si la même donnée est déjà extraite, alors la nouvelle preExtraction est ignorée
            </summary>
            <param name="preExtractionPrevious"></param>
            <param name="preExtractionCurrent"></param>
            <returns></returns>
        </member>
        <member name="M:Ocrus.Integration.FirstStepClassifyAggregationCombinator.Combine(Ocrus.Integration.CombinationClassify,Ocrus.OneOfTypes.OneOf{Ocrus.Integration.ClassifyStepResult,Ocrus.Integration.UnknownClassifyStepResult})">
            <summary>
            - garde la première classe trouvée par une étape
            - ajoute les pre extraction du résultat courant à ceux précédents en favorisant ceux qui ont déjà été extraits (pas de doublons)
            - n'interrompt jamais le pipeline des étapes
            </summary>
            <param name="accumulatedPreviousResults">Résultat cummulé courant</param>
            <param name="currentResult">Résultat unitaire à combiner avec le résultat cumulé courant</param>
            <returns>Nouveau résultat cumulé</returns>
        </member>
        <member name="T:Ocrus.Integration.ClassifyAndPreExtractStep">
            <summary>
            Etape de classification monopage qui fait également une extraction des champs. Pour ce faire elle utilise un moteur de classification 
            et d'extraction <see cref="T:Ocrus.OCREngines.IClassifyAndExtractEngine"/> 
            Cette classe est ensuite confrontée à un dictionnaire de ClassificationAndExtractionSelectorMapping afin de filtrer si elle est
            retenue et, si elle est retenue, de filtrer les champs eux même retenus.
            </summary>
        </member>
        <member name="M:Ocrus.Integration.ClassifyAndPreExtractStep.#ctor(Ocrus.OCREngines.IClassifyAndExtractEngine,System.Collections.Generic.IEnumerable{Ocrus.Integration.ClassificationAndExtractionMapping})">
            <summary>
            Etape de classification monopage qui fait également une extraction des champs. Pour ce faire elle utilise un moteur de classification 
            et d'extraction <see cref="T:Ocrus.OCREngines.IClassifyAndExtractEngine"/> 
            </summary>
            <param name="engine">Moteur de classification et d'extraction</param>
            <param name="mapping">Séquence de mappings</param>
        </member>
        <member name="M:Ocrus.Integration.ClassifyAndPreExtractStep.Execute(Ocrus.Integration.ArrangedPage)">
            <inheritdoc />
        </member>
        <member name="T:Ocrus.Integration.ClassifyStep">
            <summary>
            Etape de classification qui se base sur un moteur de classification <see cref="T:Ocrus.OCREngines.IClassifyEngine"/> pour classer une page arrangée.
            Ne réalise pas d'extraction de champs
            Cette classe est ensuite confrontée à un dictionnaire de ClassificationSelectorMapping afin de filtrer si elle est retenue.
            </summary>
        </member>
        <member name="M:Ocrus.Integration.ClassifyStep.#ctor(Ocrus.OCREngines.IClassifyEngine,System.Collections.Generic.IEnumerable{Ocrus.Integration.ClassificationMapping})">
            <summary>
            Etape de classification qui se base sur un moteur de classification <see cref="T:Ocrus.OCREngines.IClassifyEngine"/> pour classer une page arrangée.
            </summary>
            <param name="engine">Moteur de classification</param>
            <param name="mapping">Séquence de mappings de classes <see cref="T:Ocrus.Integration.ClassificationMapping"/></param>
        </member>
        <member name="M:Ocrus.Integration.ClassifyStep.Execute(Ocrus.Integration.ArrangedPage)">
            <inheritdoc />
        </member>
        <member name="T:Ocrus.Integration.ClassifyStepResult">
            <summary>
            Résultat d'une étape de classification lorsque la classification a été trouvée
            </summary>
        </member>
        <member name="P:Ocrus.Integration.ClassifyStepResult.Classification">
            <summary>
            Classification trouvée
            </summary>
        </member>
        <member name="P:Ocrus.Integration.ClassifyStepResult.PreExtractionResults">
            <summary>
            Champs éventuellement extraits au passage
            </summary>
        </member>
        <member name="M:Ocrus.Integration.ClassifyStepResult.#ctor(Ocrus.OCREngines.Classification)">
            <summary>
            Résultat d'étape de classification sans extraction
            </summary>
            <param name="classification">Classification trouvée</param>
        </member>
        <member name="M:Ocrus.Integration.ClassifyStepResult.#ctor(Ocrus.OCREngines.Classification,System.Collections.Generic.IReadOnlyList{Ocrus.OCREngines.Extraction})">
            <summary>
            Résultat d'étape de classification avec extractions
            </summary>
            <param name="classification">Classification trouvée</param>
            <param name="preExtractionResults">Extractions trouvées</param>
        </member>
        <member name="T:Ocrus.Integration.MultiPagesClassifyAndPreExtractStep">
            <summary>
            Etape de classification multipages qui fait également une extraction des champs. Pour ce faire elle utilise un moteur de classification 
            et d'extraction <see cref="T:Ocrus.OCREngines.IClassifyAndExtractEngine"/> 
            Cette classe est ensuite confrontée à un dictionnaire de ClassificationAndExtractionSelectorMapping afin de filtrer si elle est
            retenue et, si elle est retenue, de filtrer les champs eux même retenus.
            </summary>
        </member>
        <member name="M:Ocrus.Integration.MultiPagesClassifyAndPreExtractStep.#ctor(Ocrus.OCREngines.IClassifyAndExtractEngine,System.Collections.Generic.IEnumerable{Ocrus.Integration.ClassificationAndExtractionMapping})">
            <summary>
            Etape de classification multipages qui fait également une extraction des champs. Pour ce faire elle utilise un moteur de classification 
            et d'extraction <see cref="T:Ocrus.OCREngines.IClassifyAndExtractEngine"/> 
            </summary>
            <param name="engine">Moteur d'extraction et de classification</param>
            <param name="mapping">Séquence de mappings</param>
        </member>
        <member name="M:Ocrus.Integration.MultiPagesClassifyAndPreExtractStep.Execute(System.Collections.Generic.IEnumerable{Ocrus.Integration.ArrangedPage})">
            <inheritdoc />
        </member>
        <member name="T:Ocrus.Integration.IMultiPagesClassifyStep">
            <summary>
            Etape de classification.
            Classe des pages arrangées et en extrait éventuellement les champs.
            Traite plusieurs pages en un seul appel
            </summary>
        </member>
        <member name="M:Ocrus.Integration.IMultiPagesClassifyStep.Execute(System.Collections.Generic.IEnumerable{Ocrus.Integration.ArrangedPage})">
            <summary>
            Classe des pages arrangées et en extrait éventuellement des champs.
            L'ordre des pages doit être respecté dans la liste de retour.
            </summary>
            <param name="pages">Pages arrangées à extraire</param>
            <returns>pour chaque page, une classification ou aucune classification</returns>
        </member>
        <member name="T:Ocrus.Integration.PreExtractStep">
            <summary>
            Etape d'extraction qui se base sur les valeurs pre extraites d'une page.<br />
            Ces champs sont ensuite confrontés à un dictionnaire de ExtractionSelectorMapping afin de filtrer ceux qui sont retenus.<br />
            N'utilise pas de moteur d'extraction.
            </summary>
        </member>
        <member name="P:Ocrus.Integration.PreExtractStep.KnownClasses">
            <inheritdoc />
        </member>
        <member name="M:Ocrus.Integration.PreExtractStep.#ctor(System.Collections.Generic.HashSet{System.String},System.Collections.Generic.IEnumerable{Ocrus.Integration.ExtractionMapping})">
            <summary>
            Extrait les champs depuis les PreExtractions déjà contenues dans les pages.<br />
            Cela se fait sans faire appel à un moteur d'OCR mais en reprenant telles quels les PreExtractions des pages.<br />
            L'extraction est réalisé si la classe est connue. Une liste vide permet d'extraire quel que soit la classe de la page. 
            </summary>
            <param name="knownClasses">Classes des documents sur lesquelles se moteur se actif</param>
            <param name="mapping">Mapping d'exctration à utiliser</param>
        </member>
        <member name="M:Ocrus.Integration.PreExtractStep.#ctor(System.Collections.Generic.IEnumerable{Ocrus.Integration.ExtractionMapping})">
            <summary>
            Extrait les champs depuis les PreExtractions déjà contenues dans les pages.<br />
            Cela se fait sans faire appel à un moteur d'OCR mais en reprenant telles quels les PreExtractions des pages.<br />
            </summary>
            <param name="mapping">Mapping d'exctration à utiliser</param>
        </member>
        <member name="M:Ocrus.Integration.PreExtractStep.Execute(Ocrus.Integration.ClassifiedPage)">
            <inheritdoc />
        </member>
        <member name="T:Ocrus.Integration.PreExtractAllStep">
            <summary>
            Etape d'extraction qui extrait toutes les valeurs pre extraites d'une page.<br />
            Donne la possibilité de retourner les pré extractions d'une classe connue.<br />
            N'utilise pas de moteur d'extraction
            </summary>
        </member>
        <member name="P:Ocrus.Integration.PreExtractAllStep.KnownClasses">
            <inheritdoc />
        </member>
        <member name="M:Ocrus.Integration.PreExtractAllStep.#ctor(System.Collections.Generic.HashSet{System.String})">
            <summary>
            Etape d'extraction qui extrait toutes les valeurs pre extraites d'une page dont la classe est connue.<br />
            Une liste vide permet d'extraire peu importe la classe.
            </summary>     
        </member>
        <member name="M:Ocrus.Integration.PreExtractAllStep.#ctor">
            <summary>
            Etape d'extraction qui extrait toutes les valeurs pre extraites d'une page sans distinction de classification.    
            </summary>     
        </member>
        <member name="M:Ocrus.Integration.PreExtractAllStep.Execute(Ocrus.Integration.ClassifiedPage)">
            <inheritdoc />
        </member>
        <member name="T:Ocrus.Integration.EngineExtractStep">
            <summary>
            Etape d'extraction qui se base sur un moteur d'extraction <see cref="T:Ocrus.OCREngines.IExtractEngine"/> pour extraire les champ d'une page.<br />
            Ces champs sont ensuite confrontés à un dictionnaire de ExtractionSelectorMapping afin de filtrer ceux qui sont retenus.<br />
            Ignore les champs qui seraient présents (pre extraits) sur la ClassifiedPage
            </summary>
        </member>
        <member name="P:Ocrus.Integration.EngineExtractStep.KnownClasses">
            <inheritdoc />
        </member>
        <member name="M:Ocrus.Integration.EngineExtractStep.#ctor(Ocrus.OCREngines.IExtractEngine,System.Collections.Generic.HashSet{System.String},System.Collections.Generic.IEnumerable{Ocrus.Integration.ExtractionMapping})">
            <summary>
            Etape d'extraction qui se base sur un moteur d'extraction <see cref="T:Ocrus.OCREngines.IExtractEngine"/> pour extraire les champs d'une page.<br />
            L'étape sera éxécutée uniquement sur une classification connue.
            </summary>
            <param name="engine">Moteur d'extraction</param>
            <param name="knownClasses">Classes des documents sur lesquelles se moteur sera actif. Une liste vide indique au moteur de s'éxécuter sur n'importe quelle classe</param>
            <param name="mapping">Mapping d'extraction à utiliser</param>
        </member>
        <member name="M:Ocrus.Integration.EngineExtractStep.#ctor(Ocrus.OCREngines.IExtractEngine,System.Collections.Generic.IEnumerable{Ocrus.Integration.ExtractionMapping})">
            <summary>
            Etape d'extraction qui se base sur un moteur d'extraction <see cref="T:Ocrus.OCREngines.IExtractEngine"/> pour extraire les champs d'une page.
            </summary>
            <param name="engine">Moteur d'extraction</param>
            <param name="mapping">Mapping d'extraction à utiliser</param>
        </member>
        <member name="M:Ocrus.Integration.EngineExtractStep.Execute(Ocrus.Integration.ClassifiedPage)">
            <inheritdoc />
        </member>
        <member name="T:Ocrus.Integration.IClassifyStep">
            <summary>
            Etape de classification.
            Classe une page arrangée et en extrait éventuellement des champs.
            </summary>
        </member>
        <member name="M:Ocrus.Integration.IClassifyStep.Execute(Ocrus.Integration.ArrangedPage)">
            <summary>
            Classe une page arrangée et en extrait éventuellement des champs.
            </summary>
            <param name="page">page arrangée à extraire</param>
            <returns>Une classification ou aucune classification</returns>
        </member>
        <member name="T:Ocrus.Integration.IExtractStep">
            <summary>
            Etape d'extraction.
            Son but est d'extraire une liste de champs d'une page classée.<br />
            Donne la possibilité de se déclencher sur un ensemble de classes indiquées.
            </summary>
        </member>
        <member name="P:Ocrus.Integration.IExtractStep.KnownClasses">
            <summary>
            Classes des pages sur lesquelles ce step sera actif
            </summary>
        </member>
        <member name="M:Ocrus.Integration.IExtractStep.Execute(Ocrus.Integration.ClassifiedPage)">
            <summary>
            Réalise l'extraction de champs d'une page classée
            </summary>
            <param name="page">Page dont on souhaite extraire les champs</param>
            <returns>Liste de champs extraits</returns>
        </member>
        <member name="T:Ocrus.Integration.ClassificationAndExtractionMapping">
            <summary>
            Mapping qui sélectionne une classe si le taux de confiance est supérieur à un taux minimal et applique des extractions mapping aux champs extraits. <br/>
            Taux : [0-100]
            </summary>
        </member>
        <member name="P:Ocrus.Integration.ClassificationAndExtractionMapping.MinScore">
            <summary>
            Confiance minimal de la classification au dessus de laquelle elle est conservée
            </summary>
        </member>
        <member name="P:Ocrus.Integration.ClassificationAndExtractionMapping.FromTo">
            <summary>
            Nouveau nom de la classe
            </summary>
        </member>
        <member name="P:Ocrus.Integration.ClassificationAndExtractionMapping.ExtractMapping">
            <summary>
            Associe à chaque champ extrait un ExtractionSelectorMapping
            </summary>
        </member>
        <member name="M:Ocrus.Integration.ClassificationAndExtractionMapping.#ctor(System.Int32,Ocrus.Integration.FromTo)">
            <summary>
            Instancie un mapping sans extraction retenue
            </summary>
            <param name="minScore">Confiance minimal de la classification au dessus de laquelle elle est conservée (Taux : [0-100])</param>
            <param name="fromTo">Nouveau nom de la classe</param>
        </member>
        <member name="M:Ocrus.Integration.ClassificationAndExtractionMapping.#ctor(System.Int32,Ocrus.Integration.FromTo,System.Collections.Generic.IReadOnlyList{Ocrus.Integration.ExtractionMapping})">
            <summary>
            Instancie un mapping avec extractions retenues
            </summary>
            <param name="minScore">Confiance minimal de la classification au dessus de laquelle elle est conservée (Taux : [0-100])</param>
            <param name="fromTo">Nouveau nom de la classe</param>
            <param name="extractMapping">Mapping à appliquer sur les extractions</param>
        </member>
        <member name="M:Ocrus.Integration.ClassificationAndExtractionMapping.Apply(Ocrus.OCREngines.Classification,System.Collections.Generic.IReadOnlyList{Ocrus.OCREngines.Extraction})">
            <inheritdoc/>
        </member>
        <member name="M:Ocrus.Integration.ClassificationAndExtractionMapping.ApplyForUnknownClassification(System.Collections.Generic.IReadOnlyList{Ocrus.OCREngines.Extraction})">
            <summary>
            Applique un mapping d'extraction sur une classification inconnue.
            </summary>
            <param name="extractionResults">Mapping d'extractions.</param>
            <returns></returns>
        </member>
        <member name="T:Ocrus.Integration.ClassificationMapping">
            <summary>
            Mapping qui sélectionne une classe si le taux de confiance est supérieur à un taux minimal et peut modifier le nom de la classe reconnue au passage
            </summary>
        </member>
        <member name="P:Ocrus.Integration.ClassificationMapping.MinScore">
            <summary>
            Confiance minimal de la classification au dessus de laquelle elle est conservée
            </summary>
        </member>
        <member name="P:Ocrus.Integration.ClassificationMapping.FromTo">
            <summary>
            Nouveau nom de la classe
            </summary>
        </member>
        <member name="M:Ocrus.Integration.ClassificationMapping.#ctor(System.Int32,Ocrus.Integration.FromTo)">
            <summary>
            Mapping qui sélectionne une classe si le taux de confiance est supérieur à un taux minimal et peut modifier le nom de la classe reconnue au passage
            </summary>
            <param name="minScore">Score minimal</param>
            <param name="fromTo">Nouveau nom de la classe</param>
        </member>
        <member name="M:Ocrus.Integration.ClassificationMapping.Apply(Ocrus.OCREngines.Classification)">
            <inheritdoc/>
        </member>
        <member name="T:Ocrus.Integration.ExtractionMapping">
            <summary>
            Mapping qui sélectionne une extraction si le taux de confiance est supérieur à un taux minimal et peut modifier le nom du champ extrait au passage
            </summary>
        </member>
        <member name="P:Ocrus.Integration.ExtractionMapping.MinScore">
            <summary>
            Confiance minimal de l'extraction au dessus de laquelle elle est conservée
            </summary>
        </member>
        <member name="P:Ocrus.Integration.ExtractionMapping.FromToValue">
            <summary>
            Nouveau nom du champ
            </summary>
        </member>
        <member name="P:Ocrus.Integration.ExtractionMapping.FromTo">
            <inheritdoc/>
        </member>
        <member name="M:Ocrus.Integration.ExtractionMapping.#ctor(Ocrus.Integration.FromToValue)">
            <summary>
            Map avec un minScore de 0
            </summary>
            <param name="fromToValue">Nom avec une valeur vers lequel maper</param>
        </member>
        <member name="M:Ocrus.Integration.ExtractionMapping.#ctor(System.Int32,Ocrus.Integration.FromToValue)">
            <summary>
            Map avec un minScore donné
            </summary>
            <param name="minScore">Confiance minimal de l'extraction au dessus de laquelle elle est conservée</param>
            <param name="fromToValue">Nom avec une valeur vers lequel maper</param>
        </member>
        <member name="M:Ocrus.Integration.ExtractionMapping.Apply(Ocrus.OCREngines.Extraction)">
            <summary>
            Applique le mapping si l'extraction a le nom attendu (from) et que le score de confiance est supérieur au minimum attendu
            </summary>
            <param name="extraction"></param>
            <returns></returns>
        </member>
        <member name="T:Ocrus.Integration.MetaDataException">
            <summary>
            Instancie une Exception métier lorsqu'il y a une incohérence au niveau de la composition des métadonnées.
            Exemple : le cas de la balise FILLER dans le fichier index.xml.
            </summary>
        </member>
        <member name="M:Ocrus.Integration.MetaDataException.#ctor(System.String)">
            <summary>
            Instancie une Exception métier lorsqu'il y a une incohérence au niveau de la composition des métadonnées.
            </summary>
            <param name="message">Message de l'exception</param>
        </member>
        <member name="M:Ocrus.Integration.MetaDataException.#ctor(System.String,System.Exception)">
            <summary>
            Instancie une Exception métier lorsqu'il y a une incohérence au niveau de la composition des métadonnées.
            </summary>
            <param name="message">Message de l'exception</param>
            <param name="innerException">Exception qui a causé l'exception courante</param>
        </member>
        <member name="T:Ocrus.Integration.FromToValue">
            <summary>
            Décrit un mapping entre une source 'from' et une destination 'to' avec une valeur
            </summary>
        </member>
        <member name="M:Ocrus.Integration.FromToValue.#ctor(System.String,System.String)">
            <summary>
            Décrit un mapping entre une source 'from' et une destination 'to' avec une valeur
            </summary>
            <param name="from">Nom de la source</param>
            <param name="to">Nom de la destination</param>
        </member>
        <member name="M:Ocrus.Integration.FromToValue.Rewrite(System.String)">
            <summary>
            Modification de la valeur mappée. Par défaut n'effectue aucune transformation.
            </summary>
            <param name="originalValue">Valeur originelle</param>
            <returns>Valeur transformée</returns>
        </member>
        <member name="M:Ocrus.Integration.FromToValue.Id(System.String)">
            <summary>
            Créer un FromTo identité qui reprend le nom et la valeur de from tel quel
            </summary>
            <param name="name">Nom identique pour from et to</param>
            <returns>FromTo identité</returns>
        </member>
        <member name="T:Ocrus.Integration.FromToReWriter">
            <summary>
            Décrit un mapping entre une source 'from' et une destination 'to' et transforme la valeur mappée au passage avec un substring
            </summary>
        </member>
        <member name="P:Ocrus.Integration.FromToReWriter.StartIndex">
            <summary>
            Index de démarrage du substring
            </summary>
        </member>
        <member name="P:Ocrus.Integration.FromToReWriter.Length">
            <summary>
            Longueur de la chaine à extraire
            </summary>
        </member>
        <member name="M:Ocrus.Integration.FromToReWriter.#ctor(System.String,System.String,System.Int32,System.Int32)">
            <summary>
            Décrit un mapping entre une source 'from' et une destination 'to' et transforme la valeur mappée au passage avec un substring
            </summary>
            <param name="from">Nom de la source</param>
            <param name="to">Destination de la source</param>
            <param name="startIndex">The zero-based starting character position of a substring in this instance.</param>
            <param name="length">The number of characters in the substring.</param>
        </member>
        <member name="M:Ocrus.Integration.FromToReWriter.Rewrite(System.String)">
            <inheritdoc/>        
        </member>
        <member name="T:Ocrus.Integration.MetaDataMapper">
            <summary>
            Class réalisant le mapping des données entre les informations d'une page brute (XML) vers les champs de <see cref="T:Ocrus.Integration.DefaultScanPage"/>
            Sans aucun mapping de paramétré, les champs définis dans <see cref="T:Ocrus.Integration.DefaultScanPage"/> sont par défaut valorisés depuis la valeur des noeuds XML de même nom
            </summary>
        </member>
        <member name="M:Ocrus.Integration.MetaDataMapper.Map(Ocrus.Integration.MetaDataMappings,System.Xml.Linq.XElement)">
            <summary>
            Réalise le mapping des données entre les informations d'une page brute <paramref name="xmlPage"/> vers les champs de <see cref="T:Ocrus.Integration.DefaultScanPage"/>
            Sans aucun mapping <paramref name="mappings"/> de paramétré (que des listes vides), les champs définis dans <see cref="T:Ocrus.Integration.DefaultScanPage"/> 
            sont par défaut valorisés depuis la valeur des noeuds XML de même nom
            </summary>
            <param name="mappings">Indique comment mapper les valeurs de la page vers <see cref="T:Ocrus.Integration.DefaultScanPage"/></param>
            <param name="xmlPage">noeud XML portant la description d'une page</param>
            <returns>Valeurs extraites et mappées</returns>
        </member>
        <member name="T:Ocrus.Integration.MetaDataMappings">
            <summary>
            Decrit le mapping utilisé.
            Le but du mapping est d'indiquer parmis toutes les données en entrée du flux, lesquelles sont pertinentes et seront gardées pour les étapes suivantes.
            La source du mapping est le résultat du chargement de l'indexxml
            La destination du mapping est soit:
             - une propriété de l'objet DefaultScanPage
             - une meta donnée
            </summary>
        </member>
        <member name="P:Ocrus.Integration.MetaDataMappings.FillerName">
            <summary>
            Nom de la balise filler
            </summary>
        </member>
        <member name="P:Ocrus.Integration.MetaDataMappings.FieldToProperty">
            <summary>
            Liste des mapping qui prennent un champ XML et valorisent une propriété de DefaultScanPage
            </summary>
        </member>
        <member name="P:Ocrus.Integration.MetaDataMappings.FieldToMetaData">
            <summary>
            Liste des mapping qui prennent un champ XML et valorisent une metadonnée de DefaultScanPage
            </summary>
        </member>
        <member name="P:Ocrus.Integration.MetaDataMappings.FillerToProperty">
            <summary>
            Liste des mapping qui prennent une valeur du FILLER et valorisent une propriété de DefaultScanPage
            </summary>
        </member>
        <member name="P:Ocrus.Integration.MetaDataMappings.FillerToMetaData">
            <summary>
            Liste des mapping qui prennent une valeur du FILLER et valorisent une meta donnée de DefaultScanPage
            </summary>
        </member>
        <member name="M:Ocrus.Integration.MetaDataMappings.#ctor(System.Collections.Generic.IReadOnlyList{Ocrus.Integration.FromToValue},System.Collections.Generic.IReadOnlyList{Ocrus.Integration.FromToValue},System.Collections.Generic.IReadOnlyList{Ocrus.Integration.FromToValue},System.Collections.Generic.IReadOnlyList{Ocrus.Integration.FromToValue})">
            <summary>
            Decrit le mapping à utiliser.
            </summary>
            <param name="fieldToProperty">Liste des mapping qui prennent un champ XML et valorisent une propriété de DefaultScanPage</param>
            <param name="fieldToMetaData">Liste des mapping qui prennent un champ XML et valorisent une metadonnée de DefaultScanPage</param>
            <param name="fillerToProperty">Liste des mapping qui prennent une valeur du FILLER et valorisent une propriété de DefaultScanPage</param>
            <param name="fillerToMetaData">Liste des mapping qui prennent une valeur du FILLER et valorisent une meta donnée de DefaultScanPage</param>
        </member>
        <member name="M:Ocrus.Integration.MetaDataMappings.#ctor(System.String,System.Collections.Generic.IReadOnlyList{Ocrus.Integration.FromToValue},System.Collections.Generic.IReadOnlyList{Ocrus.Integration.FromToValue},System.Collections.Generic.IReadOnlyList{Ocrus.Integration.FromToValue},System.Collections.Generic.IReadOnlyList{Ocrus.Integration.FromToValue})">
            <summary>
            Decrit le mapping à utiliser en surchargeant le nom de la balise Filler.
            </summary>
            <param name="fillerName">Surcharge le nom de la balise Filler (defaut FILLER)</param>
            <param name="fieldToProperty">Liste des mapping qui prennent un champ XML et valorisent une propriété de DefaultScanPage</param>
            <param name="fieldToMetaData">Liste des mapping qui prennent un champ XML et valorisent une metadonnée de DefaultScanPage</param>
            <param name="fillerToProperty">Liste des mapping qui prennent une valeur du FILLER et valorisent une propriété de DefaultScanPage</param>
            <param name="fillerToMetaData">Liste des mapping qui prennent une valeur du FILLER et valorisent une meta donnée de DefaultScanPage</param>
        </member>
        <member name="T:Ocrus.Integration.IClassifyCombinator">
            <summary>
            Décrit une recombinaison entre deux résultats de deux étapes de classification successives
            </summary>
        </member>
        <member name="M:Ocrus.Integration.IClassifyCombinator.Combine(Ocrus.Integration.CombinationClassify,Ocrus.OneOfTypes.OneOf{Ocrus.Integration.ClassifyStepResult,Ocrus.Integration.UnknownClassifyStepResult})">
            <summary>
            Combine deux résultats de différentes étapes de classification en un seul résultat
            </summary>
            <param name="previousResult"></param>
            <param name="currentResult"></param>
            <returns>Résultat d'étape de classification unique</returns>
        </member>
        <member name="T:Ocrus.Framework.IntegrationDomain.Steps.Mapping.FullText.FTextConstants">
            <summary>
            Constantes utiles au FullText.
            </summary>
        </member>
        <member name="F:Ocrus.Framework.IntegrationDomain.Steps.Mapping.FullText.FTextConstants.FullTextExtractionName">
            <summary>
            Nom associé a l'extraction responsable du FullText dans l'outil de vidéo codage.
            </summary>
        </member>
        <member name="T:Ocrus.Framework.IntegrationDomain.Steps.Mapping.FullText.FTextClassificationAndExtractionMapping">
            <summary>
            Mapping qui permet de récupérer des extractions sur une page non classée.
            </summary>
        </member>
        <member name="M:Ocrus.Framework.IntegrationDomain.Steps.Mapping.FullText.FTextClassificationAndExtractionMapping.#ctor(Ocrus.OneOfTypes.OneOf{Ocrus.Framework.IntegrationDomain.Steps.Mapping.FullText.FTextLineExtractionMapping,Ocrus.Framework.IntegrationDomain.Steps.Mapping.FullText.FTextWordExtractionMapping})">
            <summary>
            Instancie un mapping qui s'applique sur des pages non classés et qui permet de récupérer des extractions selon un ExtractionMapping.
            </summary>
            <param name="extractMapping"></param>
        </member>
        <member name="M:Ocrus.Framework.IntegrationDomain.Steps.Mapping.FullText.FTextClassificationAndExtractionMapping.Apply(System.Collections.Generic.IReadOnlyList{Ocrus.OCREngines.Extraction})">
            <inheritdoc/>
        </member>
        <member name="T:Ocrus.Framework.IntegrationDomain.Steps.Mapping.FullText.FTextWordExtractionMapping">
            <summary>
            Mapping qui permet de récupérer l'extraction FullText néscessaire à la saisie assistée.<br />
            Mode : Mot à mot.
            </summary>
        </member>
        <member name="F:Ocrus.Framework.IntegrationDomain.Steps.Mapping.FullText.FTextWordExtractionMapping.Instance">
            <summary>
            Instance unique d'un mapping FullText mot à mot
            </summary>
        </member>
        <member name="M:Ocrus.Framework.IntegrationDomain.Steps.Mapping.FullText.FTextWordExtractionMapping.#ctor">
            <summary>
            Instancie un mapping qui permet de réaliser du FullText mot à mot.
            </summary>
        </member>
        <member name="T:Ocrus.Framework.IntegrationDomain.Steps.Mapping.FullText.FTextLineExtractionMapping">
            <summary>
            Mapping qui permet de récupérer l'extraction FullText néscessaire à la saisie assistée.<br />
            Mode : Ligne par ligne.
            </summary>
        </member>
        <member name="F:Ocrus.Framework.IntegrationDomain.Steps.Mapping.FullText.FTextLineExtractionMapping.Instance">
            <summary>
            Instance unique d'un mapping FullText ligne par ligne.
            </summary>
        </member>
        <member name="M:Ocrus.Framework.IntegrationDomain.Steps.Mapping.FullText.FTextLineExtractionMapping.#ctor">
            <summary>
            Instancie un mapping qui permet de réaliser du FullText ligne par ligne.
            </summary>
        </member>
        <member name="T:Ocrus.Framework.IntegrationDomain.Steps.Mapping.FullText.FTextTypes">
            <summary>
            Types de lecture OCR d'une image (FullText)
            </summary>
        </member>
        <member name="F:Ocrus.Framework.IntegrationDomain.Steps.Mapping.FullText.FTextTypes.Raw">
            <summary>
            Lecture brute par OCR de l'image (sans les cropzones).
            </summary>
        </member>
        <member name="F:Ocrus.Framework.IntegrationDomain.Steps.Mapping.FullText.FTextTypes.Basic">
            <summary>
            Lecture par OCR en mode ligne par ligne.
            </summary>
        </member>
        <member name="F:Ocrus.Framework.IntegrationDomain.Steps.Mapping.FullText.FTextTypes.Detail">
            <summary>
            Lecture par OCR plus détaillé en mode à mot.
            </summary>
        </member>
        <member name="T:Ocrus.Framework.StructurationDomain.Objects.InvalidSheet">
            <summary>
            Feuille invalide qui va être envoyée en corbeille.
            Elle est composée d'une feuille brute telle que sortant de la phase d'intégration, et d'une raison légitime pour être envoyée en corbeille. 
            </summary>
        </member>
        <member name="P:Ocrus.Framework.StructurationDomain.Objects.InvalidSheet.RawSheet">
            <summary>
            Feuille brute
            </summary>
        </member>
        <member name="P:Ocrus.Framework.StructurationDomain.Objects.InvalidSheet.InvalidReason">
            <summary>
            Raison pour laquelle la Feuille est invalide
            </summary>
        </member>
        <member name="M:Ocrus.Framework.StructurationDomain.Objects.InvalidSheet.#ctor(Ocrus.Structuration.RawSheet,Ocrus.Common.InvalidReason)">
            <summary>
            Instancie une Feuille brute invalide avec une raison d'invalidité.
            </summary>
            <param name="rawSheet">Feuille brute</param>
            <param name="invalidReason">Raison pour laquelle la feuille est invalide.</param>
        </member>
        <member name="T:Ocrus.Structuration.ClusterFieldIU">
            <summary>
            Champ de cluster structuré et préparé pour le vidéo codage
            </summary>
        </member>
        <member name="P:Ocrus.Structuration.ClusterFieldIU.Style">
            <summary>
            Style du libellé du champ
            </summary>
        </member>
        <member name="P:Ocrus.Structuration.ClusterFieldIU.Position">
            <summary>
            Position dans le document
            </summary>
        </member>
        <member name="M:Ocrus.Structuration.ClusterFieldIU.#ctor(System.String,Ocrus.IFieldType,Ocrus.OneOfTypes.OneOf{Ocrus.Structuration.ValidValue,Ocrus.Structuration.InvalidValue,Ocrus.Structuration.NoValue})">
            <inheritdoc/>
        </member>
        <member name="M:Ocrus.Structuration.ClusterFieldIU.#ctor(Ocrus.UX.IClusterFieldUX,Ocrus.OneOfTypes.OneOf{Ocrus.OCREngines.Extraction,Ocrus.OneOfTypes.Nothing})">
            <inheritdoc/>
        </member>
        <member name="M:Ocrus.Structuration.ClusterFieldIU.#ctor(Ocrus.UX.IClusterFieldUX,Ocrus.OneOfTypes.OneOf{Ocrus.OCREngines.Extraction,Ocrus.OneOfTypes.Nothing},System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Ocrus.Structuration.ClusterFieldIU.ToFieldForDescription">
            <summary>
            Transforme ce ClusterFieldIU en son équivalent sans donnée extraite
            </summary>
            <returns>ClusterFieldIU identique mais sans donnée extraite</returns>
        </member>
        <member name="T:Ocrus.Structuration.RowGroup">
            <summary>
            Groupe de lignes dans le vidéo codage. <br/>
            Peut être constitué d'une seul ligne. <br/>
            Si le groupe l'autorise, il est possible de permettre au vidéo codeur d'ajouter des lignes dynamiquement depuis l'outil de vidéo codage. <br/>
            </summary>
        </member>
        <member name="P:Ocrus.Structuration.RowGroup.Description">
            <summary>
            Description d'une ligne template, avec ses valeurs par défaut 
            </summary>
        </member>
        <member name="P:Ocrus.Structuration.RowGroup.Rows">
            <summary>
            Lignes constituant le groupe
            </summary>
        </member>
        <member name="M:Ocrus.Structuration.RowGroup.#ctor(System.String,Ocrus.Structuration.RowIU)">
            <summary>
            Instancie un groupe consitué d'une seule ligne à afficher.
            La description d'une ligne avec ses valeurs par défaut est identique à la RowUI de <paramref name="singleRow"/>
            </summary>
            <param name="rowsName">Nom technique des lignes du groupe</param>
            <param name="singleRow">Row seule à afficher</param>
            <exception cref="T:System.ArgumentException">Exception si singleRow est null</exception>
        </member>
        <member name="M:Ocrus.Structuration.RowGroup.#ctor(System.String,System.Collections.Generic.IReadOnlyList{Ocrus.Structuration.RowIU})">
            <summary>
            Instancie un groupe de lignes à afficher.
            La description d'une ligne avec ses valeurs par défaut est identique à la première RowUI de <paramref name="rows"/>
            </summary>
            <param name="rowsName">Nom technique des lignes du groupe</param>
            <param name="rows">Rows à afficher</param>
            <exception cref="T:System.ArgumentException">Exception si values est null ou vide</exception>
        </member>
        <member name="M:Ocrus.Structuration.RowGroup.#ctor(Ocrus.Structuration.RowDescription,System.Collections.Generic.IReadOnlyList{Ocrus.Structuration.RowIU})">
            <summary>
            Instancie un groupe de lignes à afficher.
            </summary>
            <param name="description">Description d'une ligne avec ses valeurs par défaut</param>
            <param name="values">Rows à afficher</param>
            <exception cref="T:System.ArgumentException"></exception>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="T:Ocrus.Structuration.RowDescription">
            <summary>
            Ligne de description pour le vidéo codage.
            Ne contient pas de données mais représente une ligne avec ses valeurs par défaut (une sorte de template).
            Utilisée lorsque le video codeur ajoute une ligne dynamiquement dans un cluster.
            </summary>
        </member>
        <member name="P:Ocrus.Structuration.RowDescription.Name">
            <summary>
            Nom technique des lignes du groupe
            </summary>
        </member>
        <member name="P:Ocrus.Structuration.RowDescription.DisplayMode">
            <summary>
            Mode d'affichage des lignes du groupe
            </summary>
        </member>
        <member name="P:Ocrus.Structuration.RowDescription.Fields">
            <summary>
            Liste des champs composant la ligne
            </summary>
        </member>
        <member name="M:Ocrus.Structuration.RowDescription.#ctor(System.String,Ocrus.Structuration.RowIU)">
            <summary>
            Ligne de description pour le vidéo codage.
            Déduite d'une ligne simple.
            </summary>
            <param name="name">Nom technique des lignes du groupe</param>
            <param name="fromRowIU">Ligne du groupe</param>
        </member>
        <member name="M:Ocrus.Structuration.RowDescription.#ctor(System.String,System.Collections.Generic.IEnumerable{Ocrus.Structuration.ClusterFieldIU})">
            <summary>
            Ligne de description pour le vidéo codage.
            </summary>
            <param name="name">Nom technique des lignes du groupe</param>
            <param name="fields">Liste des champs composant la ligne</param>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="T:Ocrus.Structuration.RowIU">
            <summary>
            Ligne structurée et préparée pour le vidéo codage
            </summary>
        </member>
        <member name="P:Ocrus.Structuration.RowIU.Fields">
            <summary>
            Liste des champs composant la ligne
            </summary>
        </member>
        <member name="M:Ocrus.Structuration.RowIU.#ctor(System.Collections.Generic.IEnumerable{Ocrus.Structuration.ClusterFieldIU})">
            <summary>
            Ligne structurée et préparée pour le vidéo codage
            </summary>
            <param name="fields">Liste des champs composant la ligne</param>/param>
            <exception cref="T:System.ArgumentNullException">Déclenchée si la liste de champs est nulle</exception>
        </member>
        <member name="T:Ocrus.Structuration.ClusterIU">
            <summary>
            Cluster structuré et préparé pour le vidéo codage
            </summary>
        </member>
        <member name="P:Ocrus.Structuration.ClusterIU.Label">
            <summary>
            Nom affiché dans l'outil de vidéo codage (identique au Name (limitations due à SYO)
            </summary>
        </member>
        <member name="P:Ocrus.Structuration.ClusterIU.Name">
            <summary>
            Nom technique du cluster, identique au label (limitations due à SYO)
            </summary>
        </member>
        <member name="P:Ocrus.Structuration.ClusterIU.ValidationDLL">
            <summary>
            Nom de la DLL de validation qui sait valider ce champ (null si pas de validation)
            </summary>
        </member>
        <member name="P:Ocrus.Structuration.ClusterIU.ClusterErrorMessage">
            <summary>
            Message d'erreur à afficher pour le cluster
            </summary>
        </member>
        <member name="P:Ocrus.Structuration.ClusterIU.RowGroups">
            <summary>
            Groupes de lignes composant le cluster
            </summary>
        </member>
        <member name="M:Ocrus.Structuration.ClusterIU.#ctor(System.String,System.Collections.Generic.IEnumerable{Ocrus.Structuration.RowGroup})">
            <summary>
            Instancie un CLusterIU préparé pour le vidéo codage
            </summary>
            <param name="name">Nom technique et également nom affiché dans l'outil de vidéo codage</param>
            <param name="rowGroups">Liste des groups de lignes à afficher</param>
        </member>
        <member name="T:Ocrus.Structuration.ClusterIU.InvalidNothing">
            <summary>
            Matérialise une valeur nothing pour un champ obligatoire, c'est donc invalide
            </summary>
        </member>
        <member name="T:Ocrus.Structuration.RowDisplayMode">
            <summary>
            Style du groupe de lignes
            </summary>
        </member>
        <member name="F:Ocrus.Structuration.RowDisplayMode.Single">
            <summary>
            Une ligne unique
            </summary>
        </member>
        <member name="F:Ocrus.Structuration.RowDisplayMode.MultipleDynamic">
            <summary>
            Plusieurs lignes répétées (de formats identiques). Le vidéocodeur peut en ajouter dynamiquement.
            </summary>
        </member>
        <member name="F:Ocrus.Structuration.RowDisplayMode.MultipleFix">
            <summary>
            Plusieurs lignes répétées (de formats identiques). Le vidéocodeur ne peut pas en ajouter dynamiquement.
            </summary>
        </member>
        <member name="T:Ocrus.Structuration.AdjustmentIU">
            <summary>
            Décrit les paramètres nécessaires pour configurer un ajustement (ie: une vérification manuelle (vidéocodage) de validité d'un pli)
            </summary>
        </member>
        <member name="P:Ocrus.Structuration.AdjustmentIU.MasterFieldLabel">
            <summary>
            Label du champ du document maitre qui sert de référence
            </summary>
        </member>
        <member name="P:Ocrus.Structuration.AdjustmentIU.CheckAgainstFieldLabel">
            <summary>
            Label des champ dans les documents constituant le pli et qu'il faudra utiliser pour valider par rapport au champ maitre
            </summary>
        </member>
        <member name="P:Ocrus.Structuration.AdjustmentIU.SortByFieldLabel">
            <summary>
            Label du champ qui sera utilisé pour trier à l'affichage les documents
            </summary>
        </member>
        <member name="M:Ocrus.Structuration.AdjustmentIU.#ctor(System.String,System.String,System.String)">
            <summary>
            Décrit les paramètres nécessaires pour configurer un ajustement (ie: une vérification manuelle (vidéocodage) de validité d'un pli)
            </summary>
            <param name="masterFieldLabel">Label du champ du document maitre qui sert de référence</param>
            <param name="checkAgainstFieldLabel">Label du champ dans les documents constituant le pli et qu'il faudra utiliser pour valider par rapport au champ maitre</param>
            <param name="sortByFielLabel">Label du champ qui sera utilisé pour trier à l'affichage les documents</param>
        </member>
        <member name="T:Ocrus.Structuration.NoValue">
            <summary>
            Aucune valeur extraite
            </summary>
        </member>
        <member name="F:Ocrus.Structuration.NoValue.NoErrorInstance">
            <summary>
            Singleton représentant une absence de valeur extraite sans message d'erreur
            </summary>
        </member>
        <member name="P:Ocrus.Structuration.NoValue.ErrorMessage">
            <summary>
            Message d'erreur associé
            </summary>
        </member>
        <member name="M:Ocrus.Structuration.NoValue.#ctor(System.String)">
            <summary>
            Aucune valeur extraite mais avec un message d'erreur associé
            </summary>
            <param name="errorMessage">Message d'erreur</param>
        </member>
        <member name="T:Ocrus.Structuration.InvalidValue">
            <summary>
            Valeur extraite invalide
            </summary>
        </member>
        <member name="P:Ocrus.Structuration.InvalidValue.Extraction">
            <summary>
            Valeur extraite (invalide)
            </summary>
        </member>
        <member name="P:Ocrus.Structuration.InvalidValue.ErrorMessage">
            <summary>
            Message d'erreur associé
            </summary>
        </member>
        <member name="M:Ocrus.Structuration.InvalidValue.#ctor(Ocrus.OCREngines.Extraction,System.String)">
            <summary>
            Instancie une valeur invalide
            </summary>
            <param name="extraction">Extraction associée</param>
            <param name="errorMessage">Message d'erreur</param>
        </member>
        <member name="T:Ocrus.Structuration.ValidValue">
            <summary>
            Valeur extraite valide
            </summary>
        </member>
        <member name="P:Ocrus.Structuration.ValidValue.Extraction">
            <summary>
            Valeur extraite valide
            </summary>
        </member>
        <member name="M:Ocrus.Structuration.ValidValue.#ctor(Ocrus.OCREngines.Extraction)">
            <summary>
            Instancie une valeur extraite valide
            </summary>
            <param name="extraction">Valeur extraite valide</param>
        </member>
        <member name="T:Ocrus.Structuration.StructuratedRow">
            <summary>
            Ligne structuré présente dans un cluster
            </summary>
        </member>
        <member name="P:Ocrus.Structuration.StructuratedRow.Name">
            <summary>
            Nom du document
            </summary>
        </member>
        <member name="P:Ocrus.Structuration.StructuratedRow.Fields">
            <summary>
            Champs autonomes extraits pour le fieldset
            </summary>
        </member>
        <member name="M:Ocrus.Structuration.StructuratedRow.#ctor(System.String,System.Collections.Generic.IReadOnlyList{Ocrus.OCREngines.Extraction})">
            <summary>
            Ligne structuré présente dans un cluster
            </summary>
            <param name="name">Nom du groupe de la ligne</param>
            <param name="fields">Champs constituant la ligne</param>
        </member>
        <member name="M:Ocrus.Structuration.StructuratedRow.GetExtractedValue(System.String)">
            <summary>
            Récupère une valeur extraite pour ce fieldset, sans prendre ses sous ensembles    
            </summary>        
            <param name="key">Nom de la valeur à récupérer</param>
            <returns>Extraction, Nothing si non trouvée</returns>
        </member>
        <member name="T:Ocrus.Structuration.StructuratedCluster">
            <summary>
            Cluster structuré
            </summary>
        </member>
        <member name="P:Ocrus.Structuration.StructuratedCluster.Name">
            <summary>
            Nom du cluster
            </summary>
        </member>
        <member name="P:Ocrus.Structuration.StructuratedCluster.Rows">
            <summary>
            Rows qui composent le cluster
            </summary>
        </member>
        <member name="M:Ocrus.Structuration.StructuratedCluster.#ctor(System.String,System.Collections.Generic.IReadOnlyList{Ocrus.Structuration.StructuratedRow})">
            <summary>
            Cluster structuré
            </summary>
            <param name="name">Nom du cluster</param>
            <param name="rows">Rows qui composent le cluster</param>
        </member>
        <member name="M:Ocrus.Structuration.StructuratedCluster.GetRowsByName(System.String)">
            <summary>
            Retourne les rows du nom demandé
            </summary>
            <param name="name">Nom des row à récupérer</param>
            <returns>Les rows correspondant au nom demandé</returns>
        </member>
        <member name="T:Ocrus.Structuration.RelativeCropZone">
            <summary>
            Rectangle représentant la surface dans un espace en 2D comprennant une zone extraite par un moteur d'OCR à partir d'une image.
            Exprimé en positions relatives.
            Exemple de format : ".01;.20;.30;.40"
            </summary>
        </member>
        <member name="F:Ocrus.Structuration.RelativeCropZone.None">
            <summary>
            RelativeCropZone vide. 
            </summary>
        </member>
        <member name="F:Ocrus.Structuration.RelativeCropZone.x1">
            <summary>
            Gauche (relatif)
            </summary>
        </member>
        <member name="F:Ocrus.Structuration.RelativeCropZone.y1">
            <summary>
            Haut (relatif)
            </summary>
        </member>
        <member name="F:Ocrus.Structuration.RelativeCropZone.x2">
            <summary>
            Droite (relatif)
            </summary>
        </member>
        <member name="F:Ocrus.Structuration.RelativeCropZone.y2">
            <summary>
            Bas (relatif)
            </summary>
        </member>
        <member name="M:Ocrus.Structuration.RelativeCropZone.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Instancie une CropZone relative
            </summary>
            <param name="x1">Compris en [0-99]</param>
            <param name="y1"></param>
            <param name="x2"></param>
            <param name="y2"></param>
        </member>
        <member name="P:Ocrus.Structuration.RelativeCropZone.IsNone">
            <summary>
            Retourne true si la CropZone est la inconnue
            </summary>
        </member>
        <member name="M:Ocrus.Structuration.RelativeCropZone.ToString">
            <summary>
            Sérialize la crop zone relative
            </summary>
            <returns>CropZone sérializée</returns>
        </member>
        <member name="M:Ocrus.Structuration.RelativeCropZone.Parse(System.String)">
            <summary>
            Parse une cropzone.
            </summary>
            <param name="cropZoneValue">valeur sérialisée de la cropzone</param>
            <returns>L'objet CropZone correspondant. Retourne CropZone.None si la chaine est null or empty.</returns>
        </member>
        <member name="T:Ocrus.Structuration.FieldIU">
            <summary>
            Champ valorisé et préparé pour le vidéo codage
            </summary>
        </member>
        <member name="P:Ocrus.Structuration.FieldIU.Name">
            <summary>
            Nom technique du champ
            </summary>
        </member>
        <member name="P:Ocrus.Structuration.FieldIU.Label">
            <summary>
            Nom affiché dans l'outil de vidéo codage
            </summary>
        </member>
        <member name="P:Ocrus.Structuration.FieldIU.FieldType">
            <summary>
            Description du champ du viéo codage
            </summary>
        </member>
        <member name="P:Ocrus.Structuration.FieldIU.ExtractedValue">
            <summary>
            Eventuelle valeur extraite (OCR ou par un CW)
            </summary>
        </member>
        <member name="P:Ocrus.Structuration.FieldIU.ImgUid">
            <summary>
            UID de l'image d'où est issu le champ
            </summary>
        </member>
        <member name="P:Ocrus.Structuration.FieldIU.Comment">
            <summary>
            Commentaire affiché lors de la saisie sur ce champs
            </summary>
        </member>
        <member name="P:Ocrus.Structuration.FieldIU.HiddenInClusterAndValidation">
            <summary>
            Indique si le champ doit être masqué ou non, au niveau de l'écran de saisie cluster et de validation de document. (false par défaut)
            </summary>
        </member>
        <member name="P:Ocrus.Structuration.FieldIU.ValidationDLL">
            <summary>
            Nom de la DLL de validation qui sait valider ce champ (null si pas de validation)
            </summary>
        </member>
        <member name="P:Ocrus.Structuration.FieldIU.IsMandatory">
            <summary>
            Ce champ est-il obligatoire. (true par défaut)
            </summary>
        </member>
        <member name="P:Ocrus.Structuration.FieldIU.DefaultCropZone">
            <summary>
            La zone (rectangle) où est présent ce champ dans la page s'il n'a pas été trouvé par l'OCR (position par défaut)
            </summary>
        </member>
        <member name="P:Ocrus.Structuration.FieldIU.CanBeForced">
            <summary>
            Indique si le champ peut être forcé. Par défaut un champ même s'il est invalide peut être forcé par le vidéo codeur. (true par défaut)
            </summary>
        </member>
        <member name="P:Ocrus.Structuration.FieldIU.CaseBehaviour">
            <summary>
            Comportement par rapport à la case. (CaseBehaviour.AsTyped par défaut)
            </summary>
        </member>
        <member name="P:Ocrus.Structuration.FieldIU.ActorsOptions">
            <summary>
            Indique nombre d'acteurs en jeu lors de l'extraction d'un champ. (ActorsOptions.OneActor par défaut).
            </summary>
        </member>
        <member name="P:Ocrus.Structuration.FieldIU.PlaceHolder">
            <summary>
            Message affiché si le champ est null ou vide. (null = pas d'activation de placeholder)
            </summary>
        </member>
        <member name="P:Ocrus.Structuration.FieldIU.InputMode">
            <summary>
            Mode de saisie pour un champ.
            </summary>
        </member>
        <member name="P:Ocrus.Structuration.FieldIU.ReadOnly">
            <summary>
            Indique si le champ est en lecture seule.<br />
            Par défaut le champ peut être modifié.
            </summary>
        </member>
        <member name="M:Ocrus.Structuration.FieldIU.#ctor(System.String,Ocrus.IFieldType,Ocrus.OneOfTypes.OneOf{Ocrus.Structuration.ValidValue,Ocrus.Structuration.InvalidValue,Ocrus.Structuration.NoValue})">
            <summary>
            Instancie un champ valorisé et préparé pour le vidéo codage
            </summary>
            <param name="name">Nom du champ</param>
            <param name="type">Description du champ du viéo codage</param>
            <param name="extraction">Eventuelle valeur extraite (OCR ou par un CW)</param>
        </member>
        <member name="M:Ocrus.Structuration.FieldIU.#ctor(Ocrus.UX.IFieldUXCommon,Ocrus.OneOfTypes.OneOf{Ocrus.OCREngines.Extraction,Ocrus.OneOfTypes.Nothing})">
            <summary>
            Instancie un champ valorisé et préparé pour le vidéo codage à patir d'un fieldUX
            </summary>
            <param name="fieldUX">FieldUX pour le vidéo codage</param>
            <param name="extraction">Eventuelle valeur d'extraction</param>
        </member>
        <member name="M:Ocrus.Structuration.FieldIU.#ctor(Ocrus.UX.IFieldUXCommon,Ocrus.OneOfTypes.OneOf{Ocrus.OCREngines.Extraction,Ocrus.OneOfTypes.Nothing},System.String)">
            <summary>
            Permet d'imposer un InvalidValue avec un message d'erreur indépendement du message calculé automatiquement par vérification de l'extraction
            </summary>        
            <param name="fieldUX">FieldUX pour le vidéo codage</param>
            <param name="extraction">Eventuelle valeur d'extraction</param>
            <param name="errorMessage">Message d'erreur pour le vidéo codage</param>
        </member>
        <member name="T:Ocrus.Structuration.FoldIUs">
            <summary>
            Résultat de la phase de structuration
            Liste de folds à sauvegarder 
            </summary>
        </member>
        <member name="P:Ocrus.Structuration.FoldIUs.Folds">
            <summary>
            Folds structurés
            </summary>
        </member>
        <member name="P:Ocrus.Structuration.FoldIUs.Bin">
            <summary>
            Pages qui n'ont pas été retenues lors de la structuration
            </summary>
        </member>
        <member name="M:Ocrus.Structuration.FoldIUs.#ctor(System.Collections.Generic.IReadOnlyList{Ocrus.Structuration.FoldIU},System.Collections.Generic.IReadOnlyList{Ocrus.Framework.StructurationDomain.Objects.InvalidSheet})">
            <summary>
            Liste de folds à sauvegarder 
            </summary>
            <param name="folds">Folds structurés</param>
            <param name="bin">Page qui n'ont pas été retenues lors de la structuration</param>
        </member>
        <member name="T:Ocrus.Structuration.DocIU">
            <summary>
            Document structuré et préparé pour le vidéo codage
            </summary>
        </member>
        <member name="P:Ocrus.Structuration.DocIU.Sheets">
            <summary>
            Liste des feuilles composant le document
            </summary>
        </member>
        <member name="P:Ocrus.Structuration.DocIU.ValidationDLL">
            <summary>
            Nom de la DLL de validation qui sait valider ce document (null si pas de validation)
            </summary>
        </member>
        <member name="P:Ocrus.Structuration.DocIU.DocType">
            <summary>
            Type de document associé
            </summary>
        </member>
        <member name="P:Ocrus.Structuration.DocIU.Name">
            <summary>
            Nom du Document. Plusieurs Documents différents mais de même type peuvent être présents dans le même pli.
            </summary>
        </member>
        <member name="M:Ocrus.Structuration.DocIU.#ctor(System.String,Ocrus.DocumentType,System.Collections.Generic.IReadOnlyList{Ocrus.Structuration.SheetIU})">
            <summary>
            Instancie un document structuré et préparé pour le vidéo codage
            </summary>
            <param name="name">Nom du document</param>
            <param name="docType">Type de document associé</param>
            <param name="sheets">Feuilles du document</param>
        </member>
        <member name="M:Ocrus.Structuration.DocIU.#ctor(Ocrus.UX.IDocumentUX,System.Collections.Generic.IReadOnlyList{Ocrus.Structuration.SheetIU})">
            <summary>
            Instancie un document structuré et préparé pour le vidéo codage à partir d'un docUX
            </summary>        
            <param name="docUX">DocumentUX pour le vidéo codage</param>
            <param name="sheets">Feuilles du document</param>
        </member>
        <member name="T:Ocrus.Structuration.FoldIU">
            <summary>
            Pli structuré et préparé pour le vidéo codage
            </summary>
        </member>
        <member name="P:Ocrus.Structuration.FoldIU.Name">
            <summary>
            Nom du pli
            </summary>
        </member>
        <member name="P:Ocrus.Structuration.FoldIU.Type">
            <summary>
            Type du pli
            </summary>
        </member>
        <member name="P:Ocrus.Structuration.FoldIU.Documents">
            <summary>
            Documents ordonnés consistuant le pli
            </summary>
        </member>
        <member name="P:Ocrus.Structuration.FoldIU.FoldValidationDLL">
            <summary>
            Nom de la dll de validation (null si pas de validation)
            </summary>
        </member>
        <member name="P:Ocrus.Structuration.FoldIU.ControlAdjustments">
            <summary>
            Représente la liste des ajustements manuels (en vidéo codage) à effectuer. <br/>
            Un ajustement est une vérification manuelle de cohérence des documents du pli.
            </summary>
        </member>
        <member name="M:Ocrus.Structuration.FoldIU.#ctor(System.String,System.String,Ocrus.UX.FoldUX,System.Collections.Generic.IReadOnlyList{Ocrus.Structuration.DocIU})">
            <summary>
            Instancie un pli structuré et préparé pour le vidéo codage
            </summary>
            <param name="name">Nom du pli</param>
            <param name="type">Type du pli</param>
            <param name="foldUX">Information concernant le vidéo codage du pli</param>
            <param name="documents">Documents ordonnés consistuant le pli</param>
        </member>
        <member name="M:Ocrus.Structuration.FoldIU.#ctor(System.String,System.String,Ocrus.UX.FoldUX,System.Collections.Generic.IReadOnlyList{Ocrus.Structuration.DocIU},System.Collections.Generic.IReadOnlyList{Ocrus.Structuration.AdjustmentIU})">
            <summary>
            Instancie un pli structuré qui contient des ajustements, et préparé pour le vidéo codage
            </summary>
            <param name="name">Nom du pli</param>
            <param name="type">Type du pli</param>
            <param name="foldUX">Information concernant le vidéo codage du pli</param>
            <param name="documents">Documents ordonnés consistuant le pli</param>
            <param name="controlAdjustments">Liste des ajustements manuels (en vidéo codage) à effectuer.</param>
        </member>
        <member name="T:Ocrus.Structuration.StructuratedPage">
            <summary>
            Page structurée
            </summary>
        </member>
        <member name="P:Ocrus.Structuration.StructuratedPage.UID">
            <summary>
            UID technique de la page dans la couche de persistance
            </summary>
        </member>
        <member name="P:Ocrus.Structuration.StructuratedPage.Type">
            <summary>
            Type de la page
            </summary>
        </member>
        <member name="P:Ocrus.Structuration.StructuratedPage.Name">
            <summary>
            Nom de la page
            </summary>
        </member>
        <member name="P:Ocrus.Structuration.StructuratedPage.Side">
            <summary>
            Côté de la page (recto/verso)
            </summary>
        </member>
        <member name="P:Ocrus.Structuration.StructuratedPage.MetaData">
            <summary>
            Meta données de la page
            </summary>
        </member>
        <member name="M:Ocrus.Structuration.StructuratedPage.#ctor(System.Decimal,System.String,System.String,Ocrus.PageSide,System.Collections.Generic.IReadOnlyDictionary{System.String,System.String})">
            <summary>
            Page structurée
            </summary>
            <param name="uid">UID technique de la page dans la couche de persistance. A reprendre telquel.</param>
            <param name="type">Type de la page</param>
            <param name="name">Nom de la page</param>
            <param name="side">Côté de la page (recto/verso)</param>
            <param name="metaData">Meta données de la page</param>
        </member>
        <member name="M:Ocrus.Structuration.StructuratedPage.#ctor(System.String,System.String,Ocrus.Structuration.RawPage)">
            <summary>
            Instancie une page structurée à partir d'une page brute en altérant nom et type
            </summary>
            <param name="newName">Nouveau nom</param>
            <param name="newType">Nouveau type</param>
            <param name="page">Page brute</param>
        </member>
        <member name="M:Ocrus.Structuration.StructuratedPage.#ctor(Ocrus.Structuration.RawPage)">
            <summary>
            /// <summary>
            Instancie une page structurée à partir d'une page brute
            </summary>
            </summary>
            <param name="page">Page brute</param>
        </member>
        <member name="M:Ocrus.Structuration.StructuratedPage.FromVerso(Ocrus.OneOfTypes.OneOf{Ocrus.Structuration.RawPage,Ocrus.OneOfTypes.Nothing})">
            <summary>
            Transforme une <paramref name="verso"/> brute en Verso structuré />
            </summary>
            <param name="verso">Verso brut</param>
            <returns>Verso structuré</returns>
        </member>
        <member name="T:Ocrus.Structuration.StructuratedSheet">
            <summary>
            Feuille structurée
            </summary>
        </member>
        <member name="P:Ocrus.Structuration.StructuratedSheet.UID">
            <summary>
            Identifiant de la feuille dans la couche de persistance
            </summary>
        </member>
        <member name="P:Ocrus.Structuration.StructuratedSheet.Name">
            <summary>
            Nom de la feuille
            </summary>
        </member>
        <member name="P:Ocrus.Structuration.StructuratedSheet.Type">
            <summary>
            Type de la feuille
            </summary>
        </member>
        <member name="P:Ocrus.Structuration.StructuratedSheet.Recto">
            <summary>
            Page structurée recto
            </summary>
        </member>
        <member name="P:Ocrus.Structuration.StructuratedSheet.Verso">
            <summary>
            Eventuelle page structurée verso
            </summary>
        </member>
        <member name="M:Ocrus.Structuration.StructuratedSheet.#ctor(System.Decimal,System.String,System.String,Ocrus.Structuration.StructuratedPage,Ocrus.OneOfTypes.OneOf{Ocrus.Structuration.StructuratedPage,Ocrus.OneOfTypes.Nothing})">
            <summary>
            Feuille structurée
            </summary>
            <param name="uid">Uid technique de la feuille. A reprendre tel que fourni par le framework.</param>
            <param name="name">Nom de la feuille</param>
            <param name="type">Type de la feuille</param>
            <param name="recto">Page structurée recto</param>
            <param name="verso">Eventuelle page structurée verso</param>
        </member>
        <member name="M:Ocrus.Structuration.StructuratedSheet.#ctor(System.String,System.String,Ocrus.Structuration.RawSheet)">
            <summary>
            Feuille structurée
            </summary>
            <param name="newName">Nom de la feuille</param>
            <param name="newType">Type de la feuille</param>
            <param name="sheet">Feuille brute dont elle est issue</param>
        </member>
        <member name="T:Ocrus.Structuration.StructuratedDoc">
            <summary>
            Document structuré
            </summary>
        </member>
        <member name="P:Ocrus.Structuration.StructuratedDoc.Name">
            <summary>
            Nom du document
            </summary>
        </member>
        <member name="P:Ocrus.Structuration.StructuratedDoc.DocUse">
            <summary>
            Type d'utilisation du document
            </summary>
        </member>
        <member name="P:Ocrus.Structuration.StructuratedDoc.Fields">
            <summary>
            Champs autonomes extraits pour le document
            </summary>
        </member>
        <member name="P:Ocrus.Structuration.StructuratedDoc.Clusters">
            <summary>
            Clusters extraits pour le document
            </summary>
        </member>
        <member name="P:Ocrus.Structuration.StructuratedDoc.Sheets">
            <summary>
            Liste ordonnée de feuilles constituant le document
            </summary>
        </member>
        <member name="M:Ocrus.Structuration.StructuratedDoc.#ctor(System.String,Ocrus.DocumentUse,System.Collections.Generic.IEnumerable{Ocrus.OCREngines.Extraction},Ocrus.Structuration.StructuratedSheet)">
            <summary>
            Document structuré contenant une seule feuille
            </summary>
            <param name="name">Nom du document</param>
            <param name="docUse">Utilisation du document</param>
            <param name="fields">Champs extraits pour le document</param>
            <param name="sheet">Feuille constituant le document</param>
        </member>
        <member name="M:Ocrus.Structuration.StructuratedDoc.#ctor(System.String,Ocrus.DocumentUse,System.Collections.Generic.IEnumerable{Ocrus.OCREngines.Extraction},System.Collections.Generic.IEnumerable{Ocrus.Structuration.StructuratedSheet})">
            <summary>
            Document structuré contenant plusieurs feuilles
            </summary>
            <param name="name">Nom du document</param>
            <param name="docUse">Utilisation du document</param>
            <param name="fields">Champs extraits pour le document</param>
            <param name="sheets">Liste ordonnée de feuille constituant le document</param>
        </member>
        <member name="M:Ocrus.Structuration.StructuratedDoc.#ctor(System.String,Ocrus.DocumentUse,System.Collections.Generic.IEnumerable{Ocrus.Structuration.StructuratedCluster},System.Collections.Generic.IEnumerable{Ocrus.Structuration.StructuratedSheet})">
            <summary>
            Document structuré contenant plusieurs feuilles
            </summary>
            <param name="name">Nom du document</param>
            <param name="docUse">Utilisation du document</param>
            <param name="clusters">Clusters présents dans le document</param>
            <param name="sheets">Liste ordonnée de feuille constituant le document</param>
        </member>
        <member name="M:Ocrus.Structuration.StructuratedDoc.#ctor(System.String,Ocrus.DocumentUse,System.Collections.Generic.IEnumerable{Ocrus.OCREngines.Extraction},System.Collections.Generic.IEnumerable{Ocrus.Structuration.StructuratedCluster},System.Collections.Generic.IEnumerable{Ocrus.Structuration.StructuratedSheet})">
            <summary>
            Document structuré contenant plusieurs feuilles
            </summary>
            <param name="name">Nom du document</param>
            <param name="docUse">Utilisation du document</param>
            <param name="fields">Champs extraits pour le document</param>
            <param name="clusters">Clusters présents dans le document</param>
            <param name="sheets">Liste ordonnée de feuille constituant le document</param>
        </member>
        <member name="M:Ocrus.Structuration.StructuratedDoc.CreateMonoSheetDoc(Ocrus.Structuration.RawSheet,System.String,System.String,Ocrus.DocumentUse)">
            <summary>
            Créer un document structuré à partir d'une feuille brute avec des champs autonomones
            </summary>
            <param name="rawSheet">Feuille brute</param>
            <param name="sheetName">Nom de la feuille</param>
            <param name="docName">Nom du document</param>
            <param name="docUse">Document use associé</param>
            <returns>Document structuré</returns>
        </member>
        <member name="M:Ocrus.Structuration.StructuratedDoc.CreateMonoSheetDoc(Ocrus.Structuration.RawSheet,System.String,System.String,Ocrus.DocumentUse,System.Collections.Generic.IEnumerable{Ocrus.Structuration.StructuratedCluster})">
            <summary>
            Créer un document structuré à partir d'une feuille brute avec des champs autonomes et des clusters
            </summary>
            <param name="rawSheet">Feuille brute</param>
            <param name="sheetName">Nom de la feuille</param>
            <param name="docName">Nom du document</param>
            <param name="docUse">Document use associé</param>
            <param name="clusters">Cluster présents dans le document</param>
            <returns>Document structuré</returns>
        </member>
        <member name="M:Ocrus.Structuration.StructuratedDoc.CreateMultiSheetsDoc(System.Collections.Generic.IEnumerable{System.Tuple{Ocrus.Structuration.RawSheet,System.String}},System.String,Ocrus.DocumentUse)">
            <summary>
            Créer un document structuré à partir de plusieurs feuilles brutes
            </summary>
            <param name="rawSheets_names">Liste de Rawsheet et leurs noms associés</param>
            <param name="docName">Nom du document</param>
            <param name="docUse">Document use associé</param>
            <returns>Document structuré</returns>
        </member>
        <member name="M:Ocrus.Structuration.StructuratedDoc.GetCluster(System.String)">
            <summary>
            Retourne le cluster portant le nom demandé
            </summary>
            <param name="name">Nom du cluster à récupérer</param>
            <returns>Le cluster demandé, Nothing si non trouvé</returns>
        </member>
        <member name="M:Ocrus.Structuration.StructuratedDoc.GetExtractedValue(System.String)">
            <summary>
            Récupère une valeur extraite dans un document structuré        
            </summary>        
            <param name="key">Nom de la valeur à récupérer</param>
            <returns>Extraction, Nothing si non trouvée</returns>
        </member>
        <member name="T:Ocrus.Structuration.StructuratedFold">
            <summary>
            Pli structuré
            </summary>
        </member>
        <member name="P:Ocrus.Structuration.StructuratedFold.Name">
            <summary>
            Nom du pli
            </summary>
        </member>
        <member name="P:Ocrus.Structuration.StructuratedFold.Type">
            <summary>
            Type du pli
            </summary>
        </member>
        <member name="P:Ocrus.Structuration.StructuratedFold.Documents">
            <summary>
            Document ordonnés constituant le pli
            </summary>
        </member>
        <member name="M:Ocrus.Structuration.StructuratedFold.#ctor(System.String,System.String,System.Collections.Generic.IReadOnlyList{Ocrus.Structuration.StructuratedDoc})">
            <summary>
            Pli structuré
            </summary>
            <param name="name">Nom du pli</param>
            <param name="type">Type du pli</param>
            <param name="documents">Document ordonnés constituant le pli</param>
        </member>
        <member name="T:Ocrus.Structuration.PageIU">
            <summary>
            Page structurée et préparée pour le vidéo codage
            </summary>
        </member>
        <member name="P:Ocrus.Structuration.PageIU.Type">
            <summary>
            Type de la page
            </summary>
        </member>
        <member name="P:Ocrus.Structuration.PageIU.Name">
            <summary>
            Nom de la page
            </summary>
        </member>
        <member name="P:Ocrus.Structuration.PageIU.Side">
            <summary>
            Côté de la page (recto/verso)
            </summary>
        </member>
        <member name="P:Ocrus.Structuration.PageIU.Fields">
            <summary>
            Champs sauvegardés au final et présents sur la page/document associés lors du video codage
            </summary>
        </member>
        <member name="P:Ocrus.Structuration.PageIU.Clusters">
            <summary>
            Clusters présents sur la page lors du video codage
            </summary>
        </member>
        <member name="M:Ocrus.Structuration.PageIU.#ctor(System.String,System.String,Ocrus.PageSide,System.Collections.Generic.IReadOnlyList{Ocrus.Structuration.FieldIU})">
            <summary>
            Page structurée et préparée pour le vidéo codage
            </summary>
            <param name="name">Nom de la page</param>
            <param name="type">Type de la page</param>
            <param name="side">Côté de la page (recto/verso)</param>
            <param name="fields">Champs sauvegardés au final et présents sur la page/document associés lors du video codage</param>
        </member>
        <member name="M:Ocrus.Structuration.PageIU.#ctor(System.String,System.String,Ocrus.PageSide,System.Collections.Generic.IReadOnlyList{Ocrus.Structuration.FieldIU},System.Collections.Generic.IReadOnlyList{Ocrus.Structuration.ClusterIU})">
            <summary>
            Page structurée et préparée pour le vidéo codage
            </summary>
            <param name="name">Nom de la page</param>
            <param name="type">Type de la page</param>
            <param name="side">Côté de la page (recto/verso)</param>
            <param name="fields">Champs sauvegardés au final et présents sur la page/document associés lors du video codage</param>
            <param name="clusters">Clusters présents sur la page lors du video codage</param>
        </member>
        <member name="T:Ocrus.Structuration.SheetIU">
            <summary>
            Fueille structurée et préparée pour le vidéo codage
            </summary>
        </member>
        <member name="P:Ocrus.Structuration.SheetIU.UID">
            <summary>
            Identifiant de la couche de persistence, à reprendre tel que fourni par <see cref="T:Ocrus.Structuration.StructuratedSheet"/>
            </summary>
        </member>
        <member name="P:Ocrus.Structuration.SheetIU.Name">
            <summary>
            Nom de la feuille
            </summary>
        </member>
        <member name="P:Ocrus.Structuration.SheetIU.Type">
            <summary>
            Type de la feuille
            </summary>
        </member>
        <member name="P:Ocrus.Structuration.SheetIU.Recto">
            <summary>
            Page recto
            </summary>
        </member>
        <member name="P:Ocrus.Structuration.SheetIU.Verso">
            <summary>
            Eventuelle page verso
            </summary>
        </member>
        <member name="M:Ocrus.Structuration.SheetIU.#ctor(System.Decimal,System.String,System.String,Ocrus.Structuration.PageIU,Ocrus.OneOfTypes.OneOf{Ocrus.Structuration.PageIU,Ocrus.OneOfTypes.Nothing})">
            <summary>
            
            </summary>
            <param name="uid">Uid technique de la feuille. A reprendre tel que fourni par le framework.</param>
            <param name="name">Nom de la feuille</param>
            <param name="type">Type de la feuille</param>
            <param name="recto">Page recto</param>
            <param name="verso">Page verso</param>
        </member>
        <member name="T:Ocrus.Structuration.RawPage">
            <summary>
            Page brute telle que sortant de la phase d'intégration
            </summary>
        </member>
        <member name="P:Ocrus.Structuration.RawPage.UID">
            <summary>
            Identifiant de la couche de persistance
            </summary>
        </member>
        <member name="P:Ocrus.Structuration.RawPage.Type">
            <summary>
            Type de la page
            </summary>
        </member>
        <member name="P:Ocrus.Structuration.RawPage.Name">
            <summary>
            Nom de la page
            </summary>
        </member>
        <member name="P:Ocrus.Structuration.RawPage.Side">
            <summary>
            Côté de la page (recto/verso)
            </summary>
        </member>
        <member name="P:Ocrus.Structuration.RawPage.Fields">
            <summary>
            Champs tels que extraits lors de la phase d'intégration
            </summary>
        </member>
        <member name="P:Ocrus.Structuration.RawPage.MetaData">
            <summary>
            Meta données de la page
            </summary>
        </member>
        <member name="P:Ocrus.Structuration.RawPage.ImageUID">
            <summary>
            Identifiant unique de l'image de la page
            </summary>
        </member>
        <member name="M:Ocrus.Structuration.RawPage.#ctor(System.Decimal,Ocrus.OCREngines.ImageUID,System.String,System.String,Ocrus.PageSide,System.Collections.Generic.IReadOnlyList{Ocrus.OCREngines.Extraction},System.Collections.Generic.IReadOnlyDictionary{System.String,System.String})">
            <summary>
            Page brute telle que sortant de la phase d'intégration
            </summary>
            <param name="uid">Uid technique de la page.</param>
            <param name="imgUID">Identifiant unique de l'image de la page</param>
            <param name="name">Nom de la page</param>
            <param name="type">Type de la page</param>
            <param name="side">Côté de la page (recto/verso)</param>
            <param name="fields">Champs tels que extraits lors de la phase d'intégration</param>
            <param name="metaData">Meta données de la page</param>
        </member>
        <member name="T:Ocrus.Structuration.RawSheet">
            <summary>
            Feuille brute telle que sortant de la phase d'intégration
            </summary>
        </member>
        <member name="P:Ocrus.Structuration.RawSheet.UID">
            <summary>
            Identifiant de la couche de persistance
            </summary>
        </member>
        <member name="P:Ocrus.Structuration.RawSheet.Name">
            <summary>
            Nom de la feuille
            </summary>
        </member>
        <member name="P:Ocrus.Structuration.RawSheet.Type">
            <summary>
            Type de la feuille
            </summary>
        </member>
        <member name="P:Ocrus.Structuration.RawSheet.Recto">
            <summary>
            Recto de la feuille
            </summary>
        </member>
        <member name="P:Ocrus.Structuration.RawSheet.Verso">
            <summary>
            Eventuel verso de la feuille
            </summary>
        </member>
        <member name="M:Ocrus.Structuration.RawSheet.#ctor(System.Decimal,System.String,System.String,Ocrus.Structuration.RawPage,Ocrus.OneOfTypes.OneOf{Ocrus.Structuration.RawPage,Ocrus.OneOfTypes.Nothing})">
            <summary>
            Feuille brute telle que sortant de la phase d'intégration
            </summary>
            <param name="uid">Uid technique de la feuille</param>
            <param name="name">Nom de la feuille</param>
            <param name="type">Type de la feuille</param>        
            <param name="recto">Page recto</param>
            <param name="verso">Eventuelle page verso</param>
        </member>
        <member name="M:Ocrus.Structuration.RawSheet.GetRectoVersoExtractions">
            <summary>
            Retourne les extractions présentes sur l'éventuel verso
            </summary>
            <returns>Extractions, liste vide si aucune extraction</returns>
        </member>
        <member name="M:Ocrus.Structuration.RawSheet.GetRectoVersoExtractedValue(System.String)">
            <summary>
            Récupère une valeur extraite dans une RawSheet, quelle soit sur le recto ou le verso        
            </summary>
            <param name="key">Nom de la valeur à récupérer</param>
            <returns>Extraction, Nothing si non trouvée</returns>
        </member>
        <member name="T:Ocrus.Structuration.StructuratedFolds">
            <summary>
            Liste des plis structurés constituant le lot
            </summary>
        </member>
        <member name="P:Ocrus.Structuration.StructuratedFolds.Folds">
            <summary>
            Plis retenus
            </summary>
        </member>
        <member name="P:Ocrus.Structuration.StructuratedFolds.Bin">
            <summary>
            Feuilles qui n'ont pas été retenues
            </summary>
        </member>
        <member name="M:Ocrus.Structuration.StructuratedFolds.#ctor(System.Collections.Generic.IReadOnlyList{Ocrus.Structuration.StructuratedFold},System.Collections.Generic.IReadOnlyList{Ocrus.Framework.StructurationDomain.Objects.InvalidSheet})">
            <summary>
            Liste des plis structurés constituant le lot
            </summary>
            <param name="folds">Liste des plis structurés</param>
            <param name="bin">Feuilles brutes rejetées</param>
        </member>
        <member name="T:Ocrus.Structuration.Syo.StructurationJobInfos">
            <summary>
            Informations constantes qui ne changent pas entre les différents lots à traiter
            </summary>
        </member>
        <member name="P:Ocrus.Structuration.Syo.StructurationJobInfos.CustomerID">
            <summary>
            CustomerID
            </summary>
        </member>
        <member name="P:Ocrus.Structuration.Syo.StructurationJobInfos.BusinessID">
            <summary>
            BusinessID
            </summary>
        </member>
        <member name="P:Ocrus.Structuration.Syo.StructurationJobInfos.Site">
            <summary>
            Site de traitement
            </summary>
        </member>
        <member name="M:Ocrus.Structuration.Syo.StructurationJobInfos.#ctor(System.String,System.String,System.String)">
            <summary>
            Informations constantes qui ne changent pas entre les différents lots à traiter
            </summary>
            <param name="customerID">CustomerID</param>
            <param name="businessID">BusinessID</param>
            <param name="site">Site de traitement</param>
        </member>
        <member name="T:Ocrus.Structuration.Syo.ISYOStruContext">
            <summary>
            Contexte de structuration dans une infra SYO
            </summary>
        </member>
        <member name="P:Ocrus.Structuration.Syo.ISYOStruContext.JobInfos">
            <summary>
            Informations constantes qui ne changent pas entre les différents lots à traiter
            </summary>
        </member>
        <member name="T:Ocrus.Structuration.IStructurationInitializer`1">
            <summary>
            Initialize un traitement de structuration.
            </summary>
            <typeparam name="TFluxContext"></typeparam>
        </member>
        <member name="M:Ocrus.Structuration.IStructurationInitializer`1.InitContext">
            <summary>
            Initialiser la structuration, appelé à chaque nouveau lot à traiter
            </summary>
            <returns>Context dans lequel va se dérouler la structuration</returns>
        </member>
        <member name="T:Ocrus.Structuration.IStructurationRepository`1">
            <summary>
            Repository dans lequel est stcoék le résultat de la structuration
            </summary>
            <typeparam name="TFluxContext">Type du context de la structuration du lot en cours</typeparam>
        </member>
        <member name="M:Ocrus.Structuration.IStructurationRepository`1.SaveFoldUis(`0,Ocrus.Structuration.FoldIUs)">
            <summary>
            Fait persister le résultat de la structuration
            </summary>
            <param name="fluxContext">Context de la structuration du lot en cours</param>
            <param name="foldUis">Résultat de la strcturation à persister</param>
        </member>
        <member name="T:Ocrus.Structuration.IStructurator`1">
            <summary>
            Code métier qui réalise la structuration.
            Cette structuration est réalisée en 2 temps :
            - la structuration à proprement parler (création des documents, classement des feuilles dans les bons documents, organisation des documents en plis)
            - l'instanciation de la version "présentation pour vidéocodage" d'un pli/document/feuille/page/champs
            </summary>
            <typeparam name="TFluxContext"></typeparam>
        </member>
        <member name="M:Ocrus.Structuration.IStructurator`1.Structure(`0,System.Collections.Generic.IReadOnlyList{Ocrus.Structuration.RawSheet})">
            <summary>
            Réalise la structuration à proprement parler (création des documents, classement des feuilles dans les bons documents, organisation des documents en plis)
            </summary>
            <param name="fluxContext">Context dans lequel se déroule la structuration</param>
            <param name="sheets">Liste des feuilles brutes telles que sorties de l'intégration</param>
            <returns>Plis structurés</returns>
        </member>
        <member name="M:Ocrus.Structuration.IStructurator`1.CreateIUs(`0,Ocrus.Structuration.StructuratedFold)">
            <summary>
            Créé la version présentable en vidéo codage d'un pli structuré
            </summary>
            <param name="context">Context dans lequel se déroule la structuration</param>
            <param name="fold">Pli structuré à rendre affichable dans un outil de vidéo codage</param>
            <returns></returns>
        </member>
        <member name="T:Ocrus.Instances.ClusterInstance">
            <summary>
            Représente un cluster avec toutes ses données
            </summary>
        </member>
        <member name="P:Ocrus.Instances.ClusterInstance.Groups">
            <summary>
            Groupes de lignes composant le cluster
            </summary>
        </member>
        <member name="M:Ocrus.Instances.ClusterInstance.#ctor(System.Collections.Generic.IDictionary{System.String,Ocrus.Instances.RowGroupInstance})">
            <summary>
            Représente un cluster avec toutes ses données
            </summary>
            <param name="groups">Groupes de lignes composant le cluster</param>
            <exception cref="T:System.ArgumentNullException">Si groups est null</exception>
        </member>
        <member name="M:Ocrus.Instances.ClusterInstance.SetNewFieldValue(Ocrus.Instances.FieldInClusterInstance)">
            <summary>
            Modifie la valeur du champ indiqué
            </summary>
            <param name="newFieldValue">Nouvelle valeur du champ</param>
            <exception cref="T:Ocrus.Exceptions.DynamicBusiness.DynamicBusinessException">Exception si le champ demandé n'existe pas</exception>
        </member>
        <member name="T:Ocrus.Instances.DocumentInstance">
            <summary>
            Représente un document avec toutes ses données
            </summary>
        </member>
        <member name="P:Ocrus.Instances.DocumentInstance.Fields">
            <summary>
            Champs autonomes du document
            </summary>
        </member>
        <member name="P:Ocrus.Instances.DocumentInstance.Clusters">
            <summary>
            Clusters composant le document
            </summary>
        </member>
        <member name="M:Ocrus.Instances.DocumentInstance.#ctor(System.Collections.Generic.IDictionary{System.String,Ocrus.Instances.FieldInstance},System.Collections.Generic.IDictionary{System.String,Ocrus.Instances.ClusterInstance})">
            <summary>
            Représente un document avec toutes ses données
            </summary>
            <param name="fields">Champs autonomes du document</param>
            <param name="clusters">Clusters composant le document</param>
        </member>
        <member name="T:Ocrus.Instances.FieldClusterID">
            <summary>
            Permet d'identifier un field précis dans un cluster en fonction de sa position (RowType > ColumnName > RowIdx)
            </summary>
        </member>
        <member name="P:Ocrus.Instances.FieldClusterID.RowType">
            <summary>
            Nom du type du group qui contient la ligne
            </summary>
        </member>
        <member name="P:Ocrus.Instances.FieldClusterID.RowIdx">
            <summary>
            Index de la ligne dans le group
            </summary>
        </member>
        <member name="P:Ocrus.Instances.FieldClusterID.ColumnName">
            <summary>
            Nom de la colonne (du champ) dans la ligne
            </summary>
        </member>
        <member name="M:Ocrus.Instances.FieldClusterID.#ctor(System.String,System.Int32,System.String)">
            <summary>
            Permet d'identifier un field précis dans un cluster en fonction de sa position (RowType > ColumnName > RowIdx)
            </summary>
            <param name="rowType">Nom du type du group qui contient la ligne</param>
            <param name="rowIdx">Index de la ligne dans le group</param>
            <param name="columnName">Nom de la colonne (du champ) dans la ligne</param>
            <exception cref="T:System.ArgumentNullException">Déclenchée si ColumnNameest null</exception>
        </member>
        <member name="T:Ocrus.Instances.FieldInClusterInstance">
            <summary>
            Champ dans un cluster
            </summary>
        </member>
        <member name="P:Ocrus.Instances.FieldInClusterInstance.ID">
            <summary>
            Identifiant du champ
            </summary>
        </member>
        <member name="M:Ocrus.Instances.FieldInClusterInstance.#ctor(Ocrus.Instances.FieldClusterID,System.String,System.String,Ocrus.Instances.FieldState)">
            <summary>
            Champ dans un cluster
            </summary>
            <param name="id">Identifiant du champ</param>
            <param name="name">Nom du champ</param>
            <param name="value">Valeur du champ (extraite par OCR ou par saisie manuelle)</param>
            <param name="state">Etat du champ (forcé, erreur, etc.)</param>
        </member>
        <member name="M:Ocrus.Instances.FieldInClusterInstance.#ctor(Ocrus.Instances.FieldClusterID,System.String,System.String,Ocrus.Instances.FieldState,Ocrus.OCREngines.Extraction)">
            <summary>
            Champ dans un cluster
            </summary>
            <param name="id">Identifiant du champ</param>
            <param name="name">Nom du champ</param>
            <param name="value">Valeur du champ (extraite par OCR ou par saisie manuelle)</param>
            <param name="state">Etat du champ (forcé, erreur, etc.)</param>
            <param name="origin">Extraction à l'origine de la valeur</param>        
        </member>
        <member name="T:Ocrus.Instances.FieldInstance">
            <summary>
            Champ autonome
            </summary>
        </member>
        <member name="P:Ocrus.Instances.FieldInstance.Name">
            <summary>
            Nom du champ
            </summary>
        </member>
        <member name="P:Ocrus.Instances.FieldInstance.Value">
            <summary>
            Valeur du champ (extraite par OCR ou par saisie manuelle)
            </summary>
        </member>
        <member name="P:Ocrus.Instances.FieldInstance.Origin">
            <summary>
            Eventuelle extraction d'origine du champ
            </summary>
        </member>
        <member name="P:Ocrus.Instances.FieldInstance.State">
            <summary>
            Etat du champ (forcé, erreur, etc.)
            </summary>
        </member>
        <member name="M:Ocrus.Instances.FieldInstance.#ctor(System.String,System.String,Ocrus.Instances.FieldState)">
            <summary>
            Champ autonome sans extraction d'origine
            </summary>
            <param name="name">Nom du champ</param>
            <param name="value">Valeur du champ (extraite par OCR ou par saisie manuelle)</param>
            <param name="state">Etat du champ (forcé, erreur, etc.)</param>
        </member>
        <member name="M:Ocrus.Instances.FieldInstance.#ctor(System.String,System.String,Ocrus.Instances.FieldState,Ocrus.OCREngines.Extraction)">
            <summary>
            Champ autonome avec extraction d'origine
            </summary>
            <param name="name">Nom du champ</param>
            <param name="value">Valeur du champ (extraite par OCR ou par saisie manuelle)</param>
            <param name="state">Etat du champ (forcé, erreur, etc.)</param>
            <param name="extraction">Extraction d'origine du champ</param>
        </member>
        <member name="T:Ocrus.Instances.FieldState">
            <summary>
            Etat d'un champ
            </summary>
        </member>
        <member name="F:Ocrus.Instances.FieldState.Normal">
            <summary>
            Etat normal, par défaut
            </summary>
        </member>
        <member name="F:Ocrus.Instances.FieldState.Forced">
            <summary>
            Champ forcé par le vidéo codeur
            </summary>
        </member>
        <member name="F:Ocrus.Instances.FieldState.Error">
            <summary>
            Champs en erreur
            </summary>
        </member>
        <member name="T:Ocrus.Instances.FoldInstance">
            <summary>
            Représente un fold avec toutes ses données 
            </summary>
        </member>
        <member name="P:Ocrus.Instances.FoldInstance.Documents">
            <summary>
            Documents composants le fold
            </summary>
        </member>
        <member name="T:Ocrus.Instances.RowInstance">
            <summary>
            Représente une ligne de champs dans un cluster
            </summary>
        </member>
        <member name="P:Ocrus.Instances.RowInstance.Fields">
            <summary>
            Champs composant la ligne du cluster
            </summary>
        </member>
        <member name="M:Ocrus.Instances.RowInstance.#ctor(System.Collections.Generic.IDictionary{System.String,Ocrus.Instances.FieldInClusterInstance})">
            <summary>
            Représente une ligne de champs dans un cluster
            </summary>
            <param name="fields">Champs composant la ligne du cluster</param>
        </member>
        <member name="T:Ocrus.Instances.RowGroupInstance">
            <summary>
            Représente un ensemble de lignes d'un cluster
            </summary>
        </member>
        <member name="P:Ocrus.Instances.RowGroupInstance.Name">
            <summary>
            Nom du groupe de lignes
            </summary>
        </member>
        <member name="P:Ocrus.Instances.RowGroupInstance.Rows">
            <summary>
            Lignes composant le groupe
            </summary>
        </member>
        <member name="M:Ocrus.Instances.RowGroupInstance.#ctor(System.String,System.Collections.Generic.IList{Ocrus.Instances.RowInstance})">
            <summary>
            Représente un ensemble de lignes d'un cluster
            </summary>
            <param name="name">Nom du groupe de lignes</param>
            <param name="rows">Lignes composant le groupe</param>
        </member>
        <member name="T:Ocrus.Use.CheckClusterResult">
            <summary>
            Résultat de validation d'un cluster
            </summary>
        </member>
        <member name="P:Ocrus.Use.CheckClusterResult.IsValid">
            <summary>
            True si valide, false sinon
            </summary>
        </member>
        <member name="P:Ocrus.Use.CheckClusterResult.InvalidMessage">
            <summary>
            Si invalid, message d'erreur expliquant la raison
            Nothing si valide
            </summary>
        </member>
        <member name="M:Ocrus.Use.CheckClusterResult.CreateValidResult">
            <summary>
            Instancie un résultat valide
            </summary>
            <returns>Résultat valide</returns>
        </member>
        <member name="M:Ocrus.Use.CheckClusterResult.CreateInvalidResult(System.String,System.Collections.Generic.IReadOnlyList{Ocrus.UX.ClusterFieldError})">
            <summary>
            Instancie un résultat invalide avec des actions à exécuter
            </summary>
            <param name="message">Raison expliquant l'invalidité</param>
            <param name="fieldClusterActions">Ensemble des actions à exécuter</param>
            <returns>Résultat invalide</returns>
        </member>
        <member name="T:Ocrus.UX.InputInClusterInfos">
            <summary>
            Information permettant de retrouver un Input dans un cluster
            </summary>
        </member>
        <member name="P:Ocrus.UX.InputInClusterInfos.IndexInGroup">
            <summary>
            Index dans les rows du group
            </summary>
        </member>
        <member name="P:Ocrus.UX.InputInClusterInfos.RowGroupName">
            <summary>
            Nom du row group
            </summary>
        </member>
        <member name="P:Ocrus.UX.InputInClusterInfos.ClusterName">
            <summary>
            Nom du cluster
            </summary>
        </member>
        <member name="P:Ocrus.UX.InputInClusterInfos.DocumentName">
            <summary>
            Nom du document
            </summary>
        </member>
        <member name="M:Ocrus.UX.InputInClusterInfos.#ctor(System.Int32,System.String,System.String,System.String)">
            <summary>
            Information permettant de retrouver un Input dans un cluster
            </summary>
            <param name="index">Index dans les rows</param>
            <param name="rowName"> Nom du row group</param>
            <param name="clusterName">Nom du cluster</param>
            <param name="documentName">Nom du document</param>
        </member>
        <member name="T:Ocrus.UX.SumAdjustment">
            <summary>
            Décrit un ajustement consistant à vérifier que la valeur du champ <see cref="P:Ocrus.UX.SumAdjustment.TotalField"/> du document maitre est égale à la somme des valeurs des champs <see cref="P:Ocrus.UX.SumAdjustment.ValueFieldLabel"/> des documents du pli
            </summary>
        </member>
        <member name="P:Ocrus.UX.SumAdjustment.TotalField">
            <summary>
            Champ du document maitre contenant la somme
            </summary>
        </member>
        <member name="P:Ocrus.UX.SumAdjustment.ValueFieldLabel">
            <summary>
            Label du champ des documents du plis qui contiennent les valeurs à sommer
            </summary>
        </member>
        <member name="M:Ocrus.UX.SumAdjustment.#ctor(Ocrus.UX.IFieldUX,System.String)">
            <summary>
            Décrit un ajustement consistant à vérifier que la valeur du champ <paramref name="totalField"/> du document maitre est égale à la somme des valeurs du champs <paramref name="valueFieldLabel"/> des documents du pli
            </summary>
            <param name="totalField">Champ du document maitre contenant la somme</param>
            <param name="valueFieldLabel">Label du champ des documents du plis qui contiennent les valeurs à sommer</param>
        </member>
        <member name="M:Ocrus.UX.SumAdjustment.#ctor(Ocrus.UX.IFieldUX,System.String,Ocrus.OneOfTypes.OneOf{Ocrus.UX.IFieldUX,Ocrus.OneOfTypes.Nothing})">
            <summary>
            Décrit un ajustement consistant à vérifier que la valeur du champ <paramref name="totalField"/> du document maitre est égale à la somme des valeurs du champs <paramref name="valueFieldLabel"/> des documents du pli
            </summary>
            <param name="totalField">Champ du document maitre contenant la somme</param>
            <param name="valueFieldLabel">Label du champ des documents du plis qui contiennent les valeurs à sommer</param>
            <param name="sortByField">Champ qui sera utilisé pour trier à l'affichage les documents</param>
        </member>
        <member name="M:Ocrus.UX.SumAdjustment.GetAdjustment">
            <inheritdoc/>
        </member>
        <member name="T:Ocrus.UX.AdjustmentBase">
            <summary>
            Décrit les paramètres nécessaires pour configurer un ajustement (ie: une vérification manuelle (vidéocodage) de validité d'un pli) <br/>
            Un ajustement est une vérification manuelle de cohérence des documents du pli.
            </summary>
        </member>
        <member name="P:Ocrus.UX.AdjustmentBase.SortByField">
            <summary>
            Champ qui sera utilisé pour trier à l'affichage les documents
            </summary>
        </member>
        <member name="M:Ocrus.UX.AdjustmentBase.#ctor(Ocrus.OneOfTypes.OneOf{Ocrus.UX.IFieldUX,Ocrus.OneOfTypes.Nothing})">
            <summary>
            Décrit les paramètres nécessaires pour configurer un ajustement (ie: une vérification manuelle (vidéocodage) de validité d'un pli).
            </summary>
            <param name="sortByField">Champ qui sera utilisé pour trier à l'affichage les documents</param>
        </member>
        <member name="M:Ocrus.UX.AdjustmentBase.GetAdjustment">
            <inheritdoc/>
        </member>
        <member name="T:Ocrus.UX.SameValueAdjustment">
            <summary>
            Décrit un ajustement consistant à vérifier que la valeur du champ <see cref="P:Ocrus.UX.SameValueAdjustment.ValueFieldLabel"/> de tous les documents du pli est bien égale à la valeur du champ de référence <see cref="P:Ocrus.UX.SameValueAdjustment.ReferenceValueFieldUX"/> du document maitre
            </summary>
        </member>
        <member name="P:Ocrus.UX.SameValueAdjustment.ReferenceValueFieldUX">
            <summary>
            Champ de référence du document maitre
            </summary>
        </member>
        <member name="P:Ocrus.UX.SameValueAdjustment.ValueFieldLabel">
            <summary>
            Label du champ des documents du pli qui doit avoir la même valeur que celle du champ <see cref="P:Ocrus.UX.SameValueAdjustment.ReferenceValueFieldUX"/> du document maitre
            </summary>
        </member>
        <member name="M:Ocrus.UX.SameValueAdjustment.#ctor(Ocrus.UX.IFieldUX,System.String)">
            <summary>
            Décrit un ajustement consistant à vérifier que la valeur du champ <paramref name="valueFieldLabel"/> de tous les documents du pli est bien égale à la valeur du champ de référence <paramref name="referenceValueFieldUX"/> du document maitre
            </summary>
            <param name="referenceValueFieldUX">Champ de référence du document maitre</param>
            <param name="valueFieldLabel">Label du champ des documents du pli qui doit avoir la même valeur que celle du champ <paramref name="referenceValueFieldUX"/> du document maitre</param>
        </member>
        <member name="M:Ocrus.UX.SameValueAdjustment.#ctor(Ocrus.UX.IFieldUX,System.String,Ocrus.OneOfTypes.OneOf{Ocrus.UX.IFieldUX,Ocrus.OneOfTypes.Nothing})">
            <summary>
            Décrit un ajustement consistant à vérifier que la valeur du champ <paramref name="valueFieldLabel"/> de tous les documents du pli est bien égale à la valeur du champ de référence <paramref name="referenceValueField"/> du document maitre
            </summary>
            <param name="referenceValueField">Champ de référence du document maitre</param>
            <param name="valueFieldLabel">Label du champ des documents du pli qui doit avoir la même valeur que celle du champ <paramref name="referenceValueField"/> du document maitre</param>
            <param name="sortByField">Champ qui sera utilisé pour trier à l'affichage les documents</param>
        </member>
        <member name="M:Ocrus.UX.SameValueAdjustment.GetAdjustment">
            <inheritdoc/>
        </member>
        <member name="T:Ocrus.UX.CountAdjustment">
            <summary>
            Décrit un ajustement consistant à vérifier que le nombre de documents présents dans le pli (hors document maitre) est égale à la valeur du champ <see cref="P:Ocrus.UX.CountAdjustment.DocumentsCountField"/> du document maitre
            </summary>
        </member>
        <member name="P:Ocrus.UX.CountAdjustment.DocumentsCountField">
            <summary>
            Champ du document maitre qui contient le nombre de documents du pli
            </summary>
        </member>
        <member name="M:Ocrus.UX.CountAdjustment.#ctor(Ocrus.UX.IFieldUX)">
            <summary>
            Décrit un ajustement consistant à vérifier que le nombre de documents présents dans le pli (hors document maitre) est égale à la valeur du champ <paramref name="documentsCountField"/> du document maitre
            </summary>
            <param name="documentsCountField"> Champ du document maitre qui contient le nombre de documents du pli</param>
        </member>
        <member name="M:Ocrus.UX.CountAdjustment.#ctor(Ocrus.UX.IFieldUX,Ocrus.OneOfTypes.OneOf{Ocrus.UX.IFieldUX,Ocrus.OneOfTypes.Nothing})">
            <summary>
            Décrit un ajustement consistant à vérifier que le nombre de documents présents dans le pli (hors document maitre) est égale à la valeur du champ <paramref name="documentsCountField"/> du document maitre
            </summary>
            <param name="documentsCountField">Champ du document maitre qui contient le nombre de documents du pli</param>
            <param name="sortByField">Champ qui sera utilisé pour trier à l'affichage les documents</param>
        </member>
        <member name="M:Ocrus.UX.CountAdjustment.GetAdjustment">
            <inheritdoc/>
        </member>
        <member name="T:Ocrus.UX.ActorsOptions">
            <summary>
            Options permettant de piloter le nombre d'acteurs en jeu lors de l'extraction d'un champ.
            </summary>
        </member>
        <member name="F:Ocrus.UX.ActorsOptions.NoHuman">
            <summary>
            Jamais de saisie
            </summary>
        </member>
        <member name="F:Ocrus.UX.ActorsOptions.OneActor">
            <summary>
            Si le champ est extrait et que sa valeur est valide, pas de saisie manuelle.
            Sinon le champ est envoyé en saisie simple.
            Dans tous les cas, pas de saisie supplémentaire ni de saisie de validation.
            </summary>
        </member>
        <member name="F:Ocrus.UX.ActorsOptions.TwoActors">
            <summary>
            Si le champ est extrait et que sa valeur est valide, il est envoyé en saisie supplémentaire et en saisie de validation s'il y a désaccord.
            Sinon le champ est envoyée en saisie simple et en saisie supplémentaire et en saisie de validation s'il y a désaccord
            </summary>
        </member>
        <member name="T:Ocrus.UX.CaseBehaviour">
            <summary>
            Comportement vis à vis de la CASE lors du vidéocodage
            </summary>
        </member>
        <member name="F:Ocrus.UX.CaseBehaviour.AsTyped">
            <summary>
            Input is not changed.
            </summary>
        </member>
        <member name="F:Ocrus.UX.CaseBehaviour.LowerCase">
            <summary>
            Input is forced to lower case.
            </summary>
        </member>
        <member name="F:Ocrus.UX.CaseBehaviour.UpperCase">
            <summary>
            Input is forced to upper case.
            </summary>
        </member>
        <member name="F:Ocrus.UX.CaseBehaviour.ProperCase">
            <summary>
            Input is forced to proper case (like names: "Dahan"  1st upper case, other lower case.
            </summary>
        </member>
        <member name="T:Ocrus.UX.HotKeys">
            <summary>
            Raccourcis de vidéo codage en mode frappe clavier. <br/>
            Une succession de frappes clavier peut permettre d'identifier un document ou bien de saisir des valeurs dans des champs.
            </summary>
        </member>
        <member name="P:Ocrus.UX.HotKeys.MaximumLength">
            <summary>
            Taille maximale du raccourcis de vidéo codage.<br />
            Par défaut, la taille vaut 5.
            </summary>
        </member>
        <member name="P:Ocrus.UX.HotKeys.Chars">
            <summary>
            Caractères à entrer dans l'ordre pour activer le raccourcis
            </summary>
        </member>
        <member name="P:Ocrus.UX.HotKeys.KeyStrokesLength">
            <summary>
            Nombre de caractères à entrer
            </summary>
        </member>
        <member name="M:Ocrus.UX.HotKeys.#ctor(System.String)">
            <summary>
            Instancie un raccourcis de vidéo codage en mode frappe clavier
            </summary>
            <param name="chars">Caractères à entrer dans l'ordre pour activer le raccourcis</param>
        </member>
        <member name="M:Ocrus.UX.HotKeys.#ctor(System.String,System.Int32)">
            <summary>
            Instancie un raccourcis de vidéo codage en mode frappe clavier.
            </summary>
            <param name="chars">Caractères à entrer dans l'ordre pour activer le raccourcis</param>
            <param name="maximumLength">Taille maximale du raccourcis.</param>
        </member>
        <member name="T:Ocrus.UX.AutoComplete">
            <summary>
            Raccourcis de vidéo codage en mode champ de saisie autocomplete. <br/>
            L'identification se fait au travers d'un champs de saisie qui contiendra les libéllés des types de documents disponibles. <br/>
            L'opérateur saisit une partie du libellé et les libellés sont automatiquement filtrés jusqu'à ce qu'il n'en reste plus qu'un.
            </summary>
        </member>
        <member name="P:Ocrus.UX.AutoComplete.Label">
            <summary>
            Libellé affiché dans la liste
            </summary>
        </member>
        <member name="M:Ocrus.UX.AutoComplete.#ctor(System.String)">
            <summary>
            instancie un raccourcis de vidéo codage en mode champ de saisie autocomplete
            </summary>
            <param name="label">Libellé affiché lors du vidéo codage</param>
        </member>
        <member name="T:Ocrus.UX.Default">
            <summary>
            Raccourcis par défaut. <br/>
            La frappe clavier représentant la première lettre du type du document permet de l'identifier.
            </summary>
        </member>
        <member name="F:Ocrus.UX.Default.Instance">
            <summary>
            Raccourcis par défaut. <br/>
            La frappe clavier représentant la première lettre du type du document permet de l'identifier.
            </summary>
        </member>
        <member name="T:Ocrus.UX.Objets.InputMethods.CheckBoxInput">
            <summary>
            Saisie via une case à cocher.<br />
            L'opérateur se retrouve avec une case à cocher, il peut donc uniquement saisir Vrai ou Faux pour le champ en question.
            </summary>
        </member>
        <member name="T:Ocrus.UX.Objets.InputMethods.DateTableFillMode">
            <summary>
            Mode de remplissage à l'aide d'une table en base de données.
            </summary>
        </member>
        <member name="P:Ocrus.UX.Objets.InputMethods.DateTableFillMode.TableName">
            <summary>
            Nom de la table en base de données.
            </summary>
        </member>
        <member name="P:Ocrus.UX.Objets.InputMethods.DateTableFillMode.ColumnName">
            <summary>
            Nom de la colonne en base de données.
            </summary>
        </member>
        <member name="M:Ocrus.UX.Objets.InputMethods.DateTableFillMode.#ctor(System.String,System.String)">
            <summary>
            Instancie mode de remplissage à l'aide d'une table en base de données.
            </summary>
            <param name="tableName">Nom de la table en base de données.</param>
            <param name="columnName">Nom de la colonne en base de données.</param>
        </member>
        <member name="M:Ocrus.UX.Objets.InputMethods.DateTableFillMode.SerializeRafale">
            <inheritdoc />
        </member>
        <member name="T:Ocrus.UX.Objets.InputMethods.DropDownInput">
            <summary>
            Saisie en mode liste déroulante.<br />
            L'opérateur selectione via une liste déroulante la valeur qu'il souhaite avoir dans son champ.
            </summary>
        </member>
        <member name="P:Ocrus.UX.Objets.InputMethods.DropDownInput.StrictValue">
            <summary>
            Permet d'imposer ou non la sélection d'une valeur dans la liste.<br />
            Par défaut, on ne peut saisir une autre valeur non présent dans la liste.
            </summary>
        </member>
        <member name="P:Ocrus.UX.Objets.InputMethods.DropDownInput.FillMode">
            <summary>
            Mode de remplissage de la liste déroulante.
            </summary>
        </member>
        <member name="M:Ocrus.UX.Objets.InputMethods.DropDownInput.#ctor(Ocrus.UX.Objets.InputMethods.IFillMode,System.Boolean)">
            <summary>
            Instancie une saisie en mode liste déroulante.
            </summary>
            <param name="fillMode">Mode de remplissage de la liste.</param>
            <param name="strictValue">Impose ou non la sélection d'une valeur dans la liste.</param>
        </member>
        <member name="T:Ocrus.UX.Objets.InputMethods.IFillMode">
            <summary>
            Mode de remplissage d'une liste déroulante.
            </summary>
        </member>
        <member name="M:Ocrus.UX.Objets.InputMethods.IFillMode.SerializeRafale">
            <summary>
            Serialise les valeurs de la liste déroulante dans un format compréhensible par l'outil de vidéo codage.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Ocrus.UX.Objets.InputMethods.ManualFillMode">
            <summary>
            Mode de remplissage à l'aide d'une liste de valeurs défini.
            </summary>
        </member>
        <member name="P:Ocrus.UX.Objets.InputMethods.ManualFillMode.Values">
            <summary>
            Liste de valeurs au format chaîne de caractères.
            </summary>
        </member>
        <member name="M:Ocrus.UX.Objets.InputMethods.ManualFillMode.#ctor(System.Collections.Generic.IReadOnlyList{System.String})">
            <summary>
            Instancie mode de remplissage à l'aide d'une liste de valeurs défini.
            </summary>
            <param name="values">Liste de valeurs au format chaîne de caractères.</param>
        </member>
        <member name="M:Ocrus.UX.Objets.InputMethods.ManualFillMode.SerializeRafale">
            <inheritdoc />
        </member>
        <member name="T:Ocrus.UX.Objets.InputMethods.SimpleInput">
            <summary>
            Saisie simple.<br />
            L'opérateur peut saisir directement une valeur dans le champ de saisie.
            </summary>
        </member>
        <member name="P:Ocrus.UX.Objets.InputMethods.SimpleInput.DisplayFormat">
            <summary>
            Format d'affichage du champ.
            </summary>
        </member>
        <member name="M:Ocrus.UX.Objets.InputMethods.SimpleInput.#ctor(System.String)">
            <summary>
            Instancie une saisie simple avec un format d'affichage pour le champ.
            </summary>
            <param name="displayFormat">Format d'affichage du champ.</param>
        </member>
        <member name="M:Ocrus.UX.Objets.InputMethods.SimpleInput.#ctor">
            <summary>
            Instancie une saisie simple sans format d'affichage spécifique pour le champ.
            </summary>
        </member>
        <member name="T:Ocrus.UX.Objets.InputShortcut">
            <summary>
            Raccourcis de vidéo codage utilisé en mode frappe clavier lors de la saisie de champ.
            </summary>
        </member>
        <member name="F:Ocrus.UX.Objets.InputShortcut.MaximumLength">
            <summary>
            Taille maximale du raccourcis de vidéo codage.<br />
            Par défaut, la taille vaut 3.
            </summary>
        </member>
        <member name="P:Ocrus.UX.Objets.InputShortcut.HotKeys">
            <summary>
            Raccourcis de vidéo codage en mode frappe clavier.
            </summary>
        </member>
        <member name="P:Ocrus.UX.Objets.InputShortcut.RemplacementValue">
            <summary>
            Valeur de remplacement que prendra le champ de saisie lorque l'opérateur aura saisi le raccourcis clavier.
            </summary>
        </member>
        <member name="M:Ocrus.UX.Objets.InputShortcut.#ctor(System.String,System.String)">
            <summary>
            Instancie un raccourcis clavier pour la saisie d'un champ.
            </summary>
            <param name="chars">Caractères à entrer dans l'ordre pour activer le raccourcis</param>
            <param name="remplacementValue">Valeur de remplacement associée à la saisie du champ.</param>
        </member>
        <!-- Badly formed XML comment ignored for member "T:Ocrus.UX.Objets.IsoUX.Fields.ChangedValueActions" -->
        <!-- Badly formed XML comment ignored for member "P:Ocrus.UX.Objets.IsoUX.Fields.ChangedValueActions.FieldClusterActions" -->
        <!-- Badly formed XML comment ignored for member "M:Ocrus.UX.Objets.IsoUX.Fields.ChangedValueActions.#ctor" -->
        <member name="M:Ocrus.UX.Objets.IsoUX.Fields.ChangedValueActions.#ctor(System.Collections.Generic.List{Ocrus.FieldActions.IFieldClusterAction})">
            <summary>
            Ensemble des actions à exécuter sur des fields de cluster lorsque la valeur d'un field change
            </summary>
            <param name="fieldClusterActions">Actions à exécuter sur des fields de cluster</param>
        </member>
        <member name="M:Ocrus.UX.Objets.IsoUX.Fields.ChangedValueActions.#ctor(Ocrus.Use.CheckClusterResult)">
            <summary>
            Créé les actions SetErrorAction en fonction des champs en erreur
            </summary>
            <param name="result">Résultat de vérification d'un cluster</param>
        </member>
        <member name="T:Ocrus.UX.Objets.IsoUX.Fields.CheckFieldResult">
            <summary>
            Indique si un champ est en erreur ou non
            </summary>
        </member>
        <member name="P:Ocrus.UX.Objets.IsoUX.Fields.CheckFieldResult.IsValid">
            <summary>
            True si valide, false sinon
            </summary>
        </member>
        <member name="P:Ocrus.UX.Objets.IsoUX.Fields.CheckFieldResult.InvalidMessage">
            <summary>
            Si invalid, message d'erreur expliquant la raison
            Null si valide
            </summary>
        </member>
        <member name="M:Ocrus.UX.Objets.IsoUX.Fields.CheckFieldResult.CreateValidResult">
            <summary>
            Instancie un résultat valide
            </summary>
            <returns>Résultat valide</returns>
        </member>
        <member name="M:Ocrus.UX.Objets.IsoUX.Fields.CheckFieldResult.CreateInvalidResult(System.String)">
            <summary>
            Instancie un résultat invalide avec des actions à exécuter
            </summary>
            <param name="message">Raison expliquant l'invalidité</param>
            <returns>Résultat invalide</returns>
        </member>
        <member name="T:Ocrus.UX.Objets.MultipleRowGroupUX">
            <summary>
            Groupe de champs répartis en plusieurs lignes identiques
            </summary>
        </member>
        <member name="M:Ocrus.UX.Objets.MultipleRowGroupUX.#ctor(System.String,System.Collections.Generic.IReadOnlyList{Ocrus.UX.IClusterFieldUX})">
            <summary>
            Groupe de champs répartis en plusieurs lignes identiques. <br/>
            Par défaut, autorise l'ajout dynamique par le vidéo codeur de lignes supplémentaires.
            </summary>
            <param name="name">Nom technique des lignes du groupe</param>
            <param name="fields">Liste des champs composant une ligne</param>
        </member>
        <member name="M:Ocrus.UX.Objets.MultipleRowGroupUX.#ctor(System.String,System.Collections.Generic.IReadOnlyList{Ocrus.UX.IClusterFieldUX},System.Boolean)">
            <summary>
            Groupe de champs répartis en plusieurs lignes identiques.
            </summary>
            <param name="name">Nom technique des lignes du groupe</param>
            <param name="fields">Liste des champs composant une ligne</param>
            <param name="isDynamic">Autoriser le vidéo codeur à ajouter des lignes supplémentaires lors de la saisie.</param>
        </member>
        <member name="M:Ocrus.UX.Objets.MultipleRowGroupUX.Render(Ocrus.Structuration.StructuratedCluster)">
            <inheritdoc/>
        </member>
        <member name="T:Ocrus.UX.Objets.SingleRowGroupUX">
            <summary>
            Représente une ligne simple de cluster. <br/>
            A utiliser lorsque l'on veut représenter une ligne unique dans un cluster.
            Si lors du rendu il n'y a pas de <see cref="T:Ocrus.Structuration.StructuratedRow"/>, génère une ligne sans extractions.
            </summary>
        </member>
        <member name="M:Ocrus.UX.Objets.SingleRowGroupUX.#ctor(System.String,System.Collections.Generic.IReadOnlyList{Ocrus.UX.IClusterFieldUX})">
            <summary>
            Représente une ligne simple de cluster. <br/>
            A utiliser lorsque l'on veut représenter une ligne unique dans un cluster.
            Si lors du rendu il n'y a pas de <see cref="T:Ocrus.Structuration.StructuratedRow"/>, génère une ligne sans extractions.
            </summary>
            <param name="name">Nom technique des lignes du groupe</param>
            <param name="fields">Champs composant la ligne</param>
        </member>
        <member name="M:Ocrus.UX.Objets.SingleRowGroupUX.Render(Ocrus.Structuration.StructuratedCluster)">
            <inheritdoc/>
        </member>
        <member name="T:Ocrus.UX.Objets.RafaleBehaviours.ForcedOptions">
            <summary>
            Options de forçage.
            </summary>
        </member>
        <member name="F:Ocrus.UX.Objets.RafaleBehaviours.ForcedOptions.None">
            <summary>
            Ne peut pas être forcé.
            </summary>
        </member>
        <member name="F:Ocrus.UX.Objets.RafaleBehaviours.ForcedOptions.Yes">
            <summary>
            Peut être forcé.
            </summary>
        </member>
        <member name="F:Ocrus.UX.Objets.RafaleBehaviours.ForcedOptions.YesWithReason">
            <summary>
            Peut être forcé avec un motif.
            </summary>
        </member>
        <member name="T:Ocrus.UX.Objets.RafaleBehaviours.Cluster.ClusterFieldBehaviours">
            <summary>
            Comportements associés aux champs de cluster dans l'outil de vidéo codage.
            </summary>
        </member>
        <member name="P:Ocrus.UX.Objets.RafaleBehaviours.Cluster.ClusterFieldBehaviours.WithAutoTab">
            <summary>
            Activation de l'auto-tabulation sur le champ lorsque le champ est valide.
            </summary>
        </member>
        <member name="P:Ocrus.UX.Objets.RafaleBehaviours.Cluster.ClusterFieldBehaviours.WithAutoSum">
            <summary>
            Permet d'effectuer une somme automatique sur une colonne d'un tableau.<br />
            Cette colonne correspondra à la répétition d'un champ cluster.<br />
            Ce champ cluster doit être un entier et se trouver dans un MultipleRowGroup.
            </summary>
        </member>
        <member name="P:Ocrus.UX.Objets.RafaleBehaviours.Cluster.ClusterFieldBehaviours.TriggerClusterValidationOnChanged">
            <summary>
            Déclenche ou non la validation de portée cluster lorsque sa valeur change dans l'outil de vidéocodage
            </summary>
        </member>
        <member name="T:Ocrus.UX.Objets.RafaleBehaviours.Cluster.ClusterOptimizations">
            <summary>
            Paramètres d'optimisation de chargement Rafale pour les clusters.
            A utiliser qu'en cas de grosse lenteurs au niveau de Rafale.
            </summary>
        </member>
        <member name="P:Ocrus.UX.Objets.RafaleBehaviours.Cluster.ClusterOptimizations.ClustersToLoad">
            <summary>
            Nombre d'entités à charger au lancement de Rafale.
            </summary>
        </member>
        <member name="P:Ocrus.UX.Objets.RafaleBehaviours.Cluster.ClusterOptimizations.ClustersThreshold">
            <summary>
            Seuil de déclenchement au delà duquel le chargement des entités suivantes est lancé.
            </summary>
        </member>
        <member name="P:Ocrus.UX.Objets.RafaleBehaviours.Cluster.ClusterOptimizations.ClustersToPreLoad">
            <summary>
            Nombre d'entités à pré-charger au lancement de Rafale.
            </summary>
        </member>
        <member name="T:Ocrus.UX.Objets.RafaleBehaviours.Cluster.ClusterBehaviours">
            <summary>
            Comportements associés aux clusters dans l'outil de vidéo codage.
            </summary>
        </member>
        <member name="P:Ocrus.UX.Objets.RafaleBehaviours.Cluster.ClusterBehaviours.ChooseReasonOnForcedClusterField">
            <summary>
            Permet de choisir une raison de forçage lorsqu'un champ du cluster est forcé.
            </summary>
        </member>
        <member name="P:Ocrus.UX.Objets.RafaleBehaviours.Cluster.ClusterBehaviours.ForcedOptions">
            <summary>
            Options de forçage du cluster.
            </summary>
        </member>
        <member name="T:Ocrus.UX.Objets.RafaleBehaviours.Field.FieldBehaviours">
            <summary>
            Comportements qu'un champ peut avoir dans l'outil de vidéo codage.
            </summary>
        </member>
        <member name="P:Ocrus.UX.Objets.RafaleBehaviours.Field.FieldBehaviours.CanBeForced">
            <summary>
            Indique si le champ peut être forcé.<br />
            Par défaut un champ même s'il est invalide peut être forcé par le vidéo codeur
            </summary>
        </member>
        <member name="P:Ocrus.UX.Objets.RafaleBehaviours.Field.FieldBehaviours.ForcedValue">
            <summary>
            Correspond à la valeur forcé lorsque le vidéo codeur clic explicitement sur "Forcer la valeur".<br />
            En revanche il faut qu'en amont le champ soit autorisé au forçage via la propriété CanBeForced.
            </summary>
        </member>
        <member name="P:Ocrus.UX.Objets.RafaleBehaviours.Field.FieldBehaviours.DefaultForceReason">
            <summary>
            Permet de définir ou non une raison de forçage par défaut pour un champ. (Nothing par défaut)
            </summary>
        </member>
        <member name="P:Ocrus.UX.Objets.RafaleBehaviours.Field.FieldBehaviours.ForceReasonCodes">
            <summary>
            Codes de raisons de forçage personalisées disponible pour un champ.<br />
            Liste disponible dans le fichier CWReasons.txt.
            </summary>
        </member>
        <member name="P:Ocrus.UX.Objets.RafaleBehaviours.Field.FieldBehaviours.CaseBehaviour">
            <summary>
            Comportement par rapport à la case        
            </summary>
        </member>
        <member name="P:Ocrus.UX.Objets.RafaleBehaviours.Field.FieldBehaviours.InputShortcuts">
            <summary>
            Liste de raccourcis clavier utilisée lors de la saisie d'un champ.
            </summary>
        </member>
        <member name="T:Ocrus.UX.Objets.RafaleBehaviours.Field.ForceReason">
            <summary>
            Raison légitime de forçage pour un champ.
            </summary>
        </member>
        <member name="F:Ocrus.UX.Objets.RafaleBehaviours.Field.ForceReason.UnknownReason">
            <summary>
            Raison inconnue.
            </summary>
        </member>
        <member name="F:Ocrus.UX.Objets.RafaleBehaviours.Field.ForceReason.RejectedDocument">
            <summary>
            Document rejeté.
            </summary>
        </member>
        <member name="F:Ocrus.UX.Objets.RafaleBehaviours.Field.ForceReason.InvalidDocument">
            <summary>
            Document non valide.
            </summary>
        </member>
        <member name="F:Ocrus.UX.Objets.RafaleBehaviours.Field.ForceReason.NoMentions">
            <summary>
            Absence de mentions.
            </summary>
        </member>
        <member name="F:Ocrus.UX.Objets.RafaleBehaviours.Field.ForceReason.InvalidInformation">
            <summary>
            Information erronée. 
            </summary>
        </member>
        <member name="F:Ocrus.UX.Objets.RafaleBehaviours.Field.ForceReason.MissingDocument">
            <summary>
            Document manquant.
            </summary>
        </member>
        <member name="F:Ocrus.UX.Objets.RafaleBehaviours.Field.ForceReason.ExcessDocument">
            <summary>
            Document en trop. 
            </summary>
        </member>
        <member name="F:Ocrus.UX.Objets.RafaleBehaviours.Field.ForceReason.AdditionError">
            <summary>
            Erreur d'addition. 
            </summary>
        </member>
        <member name="F:Ocrus.UX.Objets.RafaleBehaviours.Field.ForceReason.ReportError">
            <summary>
            Erreur de report.
            </summary>
        </member>
        <member name="F:Ocrus.UX.Objets.RafaleBehaviours.Field.ForceReason.FoldInversion">
            <summary>
            Inversion de plis.
            </summary>
        </member>
        <member name="F:Ocrus.UX.Objets.RafaleBehaviours.Field.ForceReason.Other">
            <summary>
            Autre Motif.
            </summary>
        </member>
        <member name="F:Ocrus.UX.Objets.RafaleBehaviours.Field.ForceReason.WithoutRemiseDetailError">
            <summary>
            Erreur sans Remise détail.
            </summary>
        </member>
        <member name="F:Ocrus.UX.Objets.RafaleBehaviours.Field.ForceReason.EtvsTechnicalReject">
            <summary>
            Rejet Technique pour usage ETVS.
            </summary>
        </member>
        <member name="F:Ocrus.UX.Objets.RafaleBehaviours.Field.ForceReason.UnreadableInformation">
            <summary>
            Information illisible.
            </summary>
        </member>
        <member name="T:Ocrus.UX.Objets.RafaleDisplayOptions.Cluster.AllDocuments">
            <summary>
            Le document qui possède le cluster est affiché ainsi que tous les autres documents du pli.
            </summary>
        </member>
        <member name="F:Ocrus.UX.Objets.RafaleDisplayOptions.Cluster.AllDocuments.Instance">
            <summary>
             Instance unique de AllDocument
            </summary>
        </member>
        <member name="M:Ocrus.UX.Objets.RafaleDisplayOptions.Cluster.AllDocuments.#ctor">
            <summary>
            Instancie un mode d'affichage où tous les autres documents du pli sont affiché, y compris celui qui possède le cluster.
            </summary>
        </member>
        <member name="M:Ocrus.UX.Objets.RafaleDisplayOptions.Cluster.AllDocuments.Serialize">
            <inheritdoc />
        </member>
        <member name="T:Ocrus.UX.Objets.RafaleDisplayOptions.Cluster.ClusterDisplayParameters">
            <summary>
            Paramètres liés à l'affichage d'un cluster dans l'outil de vidéo codage.
            </summary>
        </member>
        <member name="P:Ocrus.UX.Objets.RafaleDisplayOptions.Cluster.ClusterDisplayParameters.DocumentsDisplayMode">
            <summary>
            Mode d'affichage des Documents contextuels associé au cluster.
            </summary>
        </member>
        <member name="P:Ocrus.UX.Objets.RafaleDisplayOptions.Cluster.ClusterDisplayParameters.MaxClusterPagesToDisplay">
            <summary>
            Nombre de Pages maximum du document qui porte le cluster à afficher.<br />
            Par défaut, l'outil de vidéo codage limite le nombre de pages a 5.
            </summary>
        </member>
        <member name="P:Ocrus.UX.Objets.RafaleDisplayOptions.Cluster.ClusterDisplayParameters.MessageOnDeleteLine">
            <summary>
            Permet d'afficher ou non le message automatique de confirmation de suppression de la dernière ligne vide d'un cluster.<br />
            Par défaut actif.
            </summary>
        </member>
        <member name="T:Ocrus.UX.Objets.RafaleDisplayOptions.Cluster.DefaultMode">
            <summary>
            Mode par défaut d'affichage des Documents dans un cluster.<br />
            Seul le Document qui possède le cluster est affiché, aucun documents contextuel n'est affiché en plus.
            </summary>
        </member>
        <member name="F:Ocrus.UX.Objets.RafaleDisplayOptions.Cluster.DefaultMode.Instance">
            <summary>
            Instance unique de DefaultMode
            </summary>
        </member>
        <member name="M:Ocrus.UX.Objets.RafaleDisplayOptions.Cluster.DefaultMode.#ctor">
            <summary>
            Instancie un mode d'affichage par défaut.<br />
            Seul le Document qui possède le cluster est affiché, aucun documents contextuel n'est affiché en plus.
            </summary>
        </member>
        <member name="M:Ocrus.UX.Objets.RafaleDisplayOptions.Cluster.DefaultMode.Serialize">
            <inheritdoc />
        </member>
        <member name="T:Ocrus.UX.Objets.RafaleDisplayOptions.Cluster.DocumentDisplayOptions">
            <summary>
            Options d'affichage d'un Document contextuel dans un Cluster.
            </summary>
        </member>
        <member name="F:Ocrus.UX.Objets.RafaleDisplayOptions.Cluster.DocumentDisplayOptions.Show">
            <summary>
            Affiche le Document contextuel.
            </summary>
        </member>
        <member name="F:Ocrus.UX.Objets.RafaleDisplayOptions.Cluster.DocumentDisplayOptions.ShowPrevious">
            <summary>
            Affiche le Document contextuel à condition qu'il précède le Document qui porte le Cluster.
            </summary>
        </member>
        <member name="T:Ocrus.UX.Objets.RafaleDisplayOptions.Cluster.Custom">
            <summary>
            Affiche le document qui possède le cluster ainsi qu'une liste de Documents contextuels selon un mode d'affichage choisi pour chacun des Documents.
            </summary>
        </member>
        <member name="M:Ocrus.UX.Objets.RafaleDisplayOptions.Cluster.Custom.#ctor(System.Collections.Generic.List{Ocrus.UX.Objets.RafaleDisplayParameters.Cluster.DocumentsDisplayMode.ContextualDocument})">
            <summary>
            Instancie un mode d'affichage personalisé de Documents contextuels selon un mode d'affichage choisi pour chacun des Documents.
            </summary>
            <param name="contextualDocuments">Liste de documents contextuels.</param>
        </member>
        <member name="P:Ocrus.UX.Objets.RafaleDisplayOptions.Cluster.Custom.ContextualDocuments">
            <summary>
            Une liste de documents contextuels.       
            </summary>
        </member>
        <member name="M:Ocrus.UX.Objets.RafaleDisplayOptions.Cluster.Custom.Serialize">
            <inheritdoc />
        </member>
        <member name="T:Ocrus.UX.Objets.RafaleDisplayOptions.Cluster.IDocumentsDisplay">
            <summary>
            Mode d'affichage des Documents contextuels dans un cluster.<br />
            Au sein d'un pli structuré et relatif au Document qui porte le cluster.<br />
            Pilote l'affichage de documents supplémentaires (contextuels) en plus du document portant le cluster.<br />
            Ces documents peuvent aider à la saisie des informations dans le cluster.
            </summary>
        </member>
        <member name="M:Ocrus.UX.Objets.RafaleDisplayOptions.Cluster.IDocumentsDisplay.Serialize">
            <summary>
            Permet de sérialiser le mode d'affichage dans un format compréhensible par l'outil de vidéo codage.
            </summary>
            <returns>Une chaîne de caractères représentant la serialisation du mode d'affichage.</returns>
        </member>
        <member name="T:Ocrus.UX.Objets.RafaleDisplayOptions.ImagePosition">
            <summary>
            Position de l'image dans l'écran de vidéo codage.
            </summary>
        </member>
        <member name="F:Ocrus.UX.Objets.RafaleDisplayOptions.ImagePosition.Default">
            <summary>
            Position par défaut
            </summary>
        </member>
        <member name="F:Ocrus.UX.Objets.RafaleDisplayOptions.ImagePosition.Top">
            <summary>
            Focus sur la partie haute de l'image
            </summary>
        </member>
        <member name="F:Ocrus.UX.Objets.RafaleDisplayOptions.ImagePosition.Middle">
            <summary>
            Focus sur la partie centrale de l'image
            </summary>
        </member>
        <member name="F:Ocrus.UX.Objets.RafaleDisplayOptions.ImagePosition.Bottom">
            <summary>
            Focus sur la partie basse de l'image
            </summary>
        </member>
        <member name="T:Ocrus.UX.Objets.RafaleDisplayOptions.ImageDisplayParameters">
            <summary>
            Paramêtres liés à l'affichage d'une image dans l'outil de vidéo codage
            </summary>
        </member>
        <member name="P:Ocrus.UX.Objets.RafaleDisplayOptions.ImageDisplayParameters.ImagePosition">
            <summary>
            Position de l'image
            </summary>
        </member>
        <member name="P:Ocrus.UX.Objets.RafaleDisplayOptions.ImageDisplayParameters.ShowJpegByDefault">
            <summary>
            Affichage par défaut de l'image au format Jpeg<br />
            Par défaut on affiche le TIFF.
            </summary>
        </member>
        <member name="P:Ocrus.UX.Objets.RafaleDisplayOptions.ImageDisplayParameters.EnableRotation">
            <summary>
            Permet d'autoriser ou non la rotation de l'image.<br />
            Disponible uniquement en saisie de champ autonome.<br />
            Par défaut désactivé.
            </summary>
        </member>
        <member name="P:Ocrus.UX.Objets.RafaleDisplayOptions.ImageDisplayParameters.HiddenArea">
            <summary>
            Permet de cacher une zone de l'image lors de la saisie opérateur.<br />
            Cette zone peut être défini via une CropZone relative. (CropZone vide par défaut)
            </summary>
        </member>
        <member name="T:Ocrus.UX.Objets.RafaleDisplayOptions.UserDisplayParameters">
            <summary>
            Paramètres liés à l'affichage de l'outil de vidéo codage pour l'utilisateur.
            </summary>
        </member>
        <member name="P:Ocrus.UX.Objets.RafaleDisplayOptions.UserDisplayParameters.SwapRectoVerso">
            <summary>
            Active ou désactive le swap entre le Recto et le Verso.<br />
            Par défaut le swap est autorisé.
            </summary>
        </member>
        <member name="P:Ocrus.UX.Objets.RafaleDisplayOptions.UserDisplayParameters.ShowRectoVerso">
            <summary>
            Affiche le Verso dans le cas d'une saisie de champ autonome.<br />
            Affiche la barre haute des documents dans le cas d'une saisie cluster.<br />
            Par défaut, la valeur est a False.
            </summary>
        </member>
        <member name="T:Ocrus.UX.Objets.RafaleDisplayParameters.Cluster.DocumentsDisplayMode.ContextualDocument">
            <summary>
            Document contextuel utilisé pour l'aide à la saisie d'un cluster dans l'outil de vidéo codage.
            </summary>
        </member>
        <member name="P:Ocrus.UX.Objets.RafaleDisplayParameters.Cluster.DocumentsDisplayMode.ContextualDocument.DocumentName">
            <summary>
            Nom du Document sur lequel se base le Document contextuel.
            </summary>
        </member>
        <member name="P:Ocrus.UX.Objets.RafaleDisplayParameters.Cluster.DocumentsDisplayMode.ContextualDocument.DisplayOptions">
            <summary>
            Option d'affichage du Document contextuel.
            </summary>
        </member>
        <member name="P:Ocrus.UX.Objets.RafaleDisplayParameters.Cluster.DocumentsDisplayMode.ContextualDocument.IsBreakDocument">
            <summary>
            Indique si l'affichage des documents contextuels doit s'arrêter au moment où l'on recontre ce type de Document.
            </summary>
        </member>
        <member name="M:Ocrus.UX.Objets.RafaleDisplayParameters.Cluster.DocumentsDisplayMode.ContextualDocument.#ctor(System.String,Ocrus.UX.Objets.RafaleDisplayOptions.Cluster.DocumentDisplayOptions,System.Boolean)">
            <summary>
            Instancie un Document contextuel pour l'affichage de ce dernier dans la vue cluster de l'outil de vidéo codage.
            </summary>
            <param name="documentName">Nom du document sur lequel se base le Document contextuel.</param>
            <param name="displayOptions">Option d'affichage du Document contextuel.</param>
            <param name="isBreakDocument">Indique si l'affichage des documents contextuels doit s'arrêter au moment où l'on recontre ce type de Document.</param>
        </member>
        <member name="M:Ocrus.UX.Objets.RafaleDisplayParameters.Cluster.DocumentsDisplayMode.ContextualDocument.#ctor(System.String,Ocrus.UX.Objets.RafaleDisplayOptions.Cluster.DocumentDisplayOptions)">
            <summary>
            Instancie un Document contextuel avec une option d'affichage.
            </summary>
            <param name="documentName">Nom du Document</param>
            <param name="displayOptions">Option d'affichage du Document contextuel.</param>
        </member>
        <member name="M:Ocrus.UX.Objets.RafaleDisplayParameters.Cluster.DocumentsDisplayMode.ContextualDocument.#ctor(System.String,System.Boolean)">
            <summary>
            Instancie un Document contextuel d'arrêt.<br />
            Cela signifie que l'affichage des documents contextuels s'arrêtera au moment où l'on rencontrera ce type de document.
            </summary>
            <param name="documentName">Nom du Document</param>
            <param name="isBreakDocument">Indique si l'affichage des documents contextuels doit s'arrêter au moment où l'on recontre ce type de Document.</param>
        </member>
        <member name="T:Ocrus.UX.Objets.RafaleDisplayParameters.FieldDisplayParameters">
            <summary>
            Paramêtres d'affichage d'un champ dans l'outil de vidéo codage.
            </summary>
        </member>
        <member name="P:Ocrus.UX.Objets.RafaleDisplayParameters.FieldDisplayParameters.HiddenInClusterAndValidation">
            <summary>
            Indique si le champ doit être masqué ou non, au niveau de l'écran de saisie cluster et de validation de document.<br />
            Le champ est tout de même créé au niveau du modèle.<br />
            Par défaut la valeur est a False.
            </summary>
        </member>
        <member name="P:Ocrus.UX.Objets.RafaleDisplayParameters.FieldDisplayParameters.PlaceHolder">
            <summary>
            Message affiché si le champ est null ou vide.
            </summary>
        </member>
        <member name="P:Ocrus.UX.Objets.RafaleDisplayParameters.FieldDisplayParameters.Comment">
            <summary>
            Commentaire affiché lors de la saisie sur ce champ
            </summary>
        </member>
        <member name="P:Ocrus.UX.Objets.RafaleDisplayParameters.FieldDisplayParameters.ReadOnly">
            <summary>
            Indique si le champ est en lecture seule.<br />
            Par défaut le champ peut être modifié.
            </summary>
        </member>
        <member name="T:Ocrus.UX.Objets.RowGroupUXDescBase">
            <summary>
            Description d'un groupe de champs répartis en une ou plusieurs lignes identiques
            </summary>
        </member>
        <member name="P:Ocrus.UX.Objets.RowGroupUXDescBase.Name">
            <summary>
            Nom technique des lignes du groupe
            </summary>
        </member>
        <member name="P:Ocrus.UX.Objets.RowGroupUXDescBase.ClusterFieldUXs">
            <summary>
            Champs composant la ligne
            </summary>
        </member>
        <member name="M:Ocrus.UX.Objets.RowGroupUXDescBase.#ctor(System.String,System.Collections.Generic.IEnumerable{Ocrus.UX.IClusterFieldUX})">
            <summary>
            Groupe de champs répartis en une ou plusieurs lignes identiques
            </summary>
            <param name="name">Nom technique des lignes du groupe</param>
            <param name="fields">Liste des champs composant la ligne</param>
        </member>
        <member name="M:Ocrus.UX.Objets.RowGroupUXDescBase.Render(Ocrus.Structuration.StructuratedCluster)">
            <summary>
            Implémentation par défaut du rendu d'un row group.
            </summary>
            <param name="structuratedCluster">Cluster structuré contenant les rowStructurées composant le RowGroup</param>
            <returns>RowGroup prêt pour le vidéo codage</returns>
        </member>
        <member name="T:Ocrus.UX.Objets.StructureWithUXHelper">
            <summary>
            Utilitaire qui met a disposition des méthodes de structuration qui font appel au monde de l'UX.
            </summary>
        </member>
        <member name="M:Ocrus.UX.Objets.StructureWithUXHelper.CreateMonoSheetDocWithClusters(Ocrus.Structuration.RawSheet,System.String,System.String,Ocrus.UX.IsoDocumentUX)">
            <summary>
            Créer un document structuré contenant des clusters à partir de plusieurs feuilles brutes. Les clusters seront créé à l'image de leur représentation dans le vidéo codage.<br/>
            Attention, s'applique uniquement sur les clusters SingleRow, et dans le cas d'un iso document.
            </summary>
            <param name="rawSheet">Feuille brute à l'origine du document.</param>
            <param name="sheetName">Nom de la Feuille.</param>
            <param name="docName">Nom du Document.</param>
            <param name="isoDocumentUX">Projection du document dans l'outil de vidéo codage.</param>
            <returns></returns>        
        </member>
        <member name="T:Ocrus.UX.IsoClusterUX">
            <summary>
            Représente un cluster qui sera affiché dans le vidéo codage contenant des champs du document use. <br/>
            Le cluster UX doit avoir tous ces champs présents dans le documentUse.
            </summary>
        </member>
        <member name="P:Ocrus.UX.IsoClusterUX.Label">
            <inheritdoc/>
        </member>
        <member name="P:Ocrus.UX.IsoClusterUX.Name">
            <inheritdoc/>
        </member>
        <member name="P:Ocrus.UX.IsoClusterUX.ValidationDLL">
            <inheritdoc/>
        </member>
        <member name="P:Ocrus.UX.IsoClusterUX.RowGroupDescUXs">
            <inheritdoc/>
        </member>
        <member name="P:Ocrus.UX.IsoClusterUX.Origin">
            <inheritdoc />
        </member>
        <member name="P:Ocrus.UX.IsoClusterUX.ClusterDisplayParameters">
            <inheritdoc />
        </member>
        <member name="P:Ocrus.UX.IsoClusterUX.ImageDisplayParameters">
            <inheritdoc />
        </member>
        <member name="P:Ocrus.UX.IsoClusterUX.UserDisplayParameters">
            <inheritdoc />
        </member>
        <member name="P:Ocrus.UX.IsoClusterUX.ClusterBehaviours">
            <inheritdoc />
        </member>
        <member name="M:Ocrus.UX.IsoClusterUX.#ctor(System.String,Ocrus.DocumentUse,System.Collections.Generic.IEnumerable{Ocrus.UX.Objets.RowGroupUXDescBase},System.String)">
            <summary>
            Instancie un cluster qui sera affiché dans le vidéo codage
            </summary>
            <param name="name">Nom du cluster (également le label affiché)</param>
            <param name="documentUse">Group use d'origine</param>
            <param name="groupUXs">Liste des RowGroupUX du cluster UX</param>
            <param name="clusterValidationDLL">Nom de la DLL de validation qui sait valider ce document (null si pas de validation)</param>
            <exception cref="T:Ocrus.Exceptions.InvalidDescriptionException">Exception déclenchée lorsque la description indiquée est invalide</exception>
        </member>
        <member name="M:Ocrus.UX.IsoClusterUX.Render(Ocrus.Structuration.StructuratedCluster)">
            <summary>
            Implémentation par défaut du rendu d'un cluster.
            Le cluster UX doit avoir tous ses fields présents dans le document structuré     
            </summary>
            <returns>Cluster prêt pour le vidéo codage</returns>
        </member>
        <member name="M:Ocrus.UX.IsoClusterUX.OnValueChanged(Ocrus.Instances.FieldInClusterInstance,Ocrus.Instances.ClusterInstance)">
            <inheritdoc/>
        </member>
        <member name="M:Ocrus.UX.IsoClusterUX.CheckClusterUXValue(Ocrus.Instances.ClusterInstance)">
            <summary>
            Par défaut, la validation du cluster se contente de valider l'ensemble des champs qu'il contient unitairement
            </summary>
            <param name="ci">Instance du cluster</param>
            <returns>Résultat de la validation</returns>
        </member>
        <member name="M:Ocrus.UX.IsoClusterUX.CheckCoherence(Ocrus.DocumentUse,System.Collections.Generic.IReadOnlyDictionary{System.String,Ocrus.UX.Objets.RowGroupUXDescBase})">
            <summary>
            Vérifie que tous les champs du ClusterUX sont déclarés dans le DocumentUse.
            </summary>
        </member>
        <member name="T:Ocrus.UX.ClusterFieldError">
            <summary>
            Représente un champ d'un cluster en erreur, avec son identifiant pour le retrouver et le message d'erreur associé.
            </summary>
        </member>
        <member name="P:Ocrus.UX.ClusterFieldError.Id">
            <summary>
            Identifie le field dans le cluster
            </summary>
        </member>
        <member name="P:Ocrus.UX.ClusterFieldError.ErrorMessage">
            <summary>
            Message d'erreur
            </summary>
        </member>
        <member name="M:Ocrus.UX.ClusterFieldError.#ctor(Ocrus.Instances.FieldClusterID,System.String)">
            <summary>
            Instancie un champ d'un cluster en erreur, avec son identifiant pour le retrouver et le message d'erreur associé.
            </summary>
            <param name="id"> Identifie le field dans le cluster</param>
            <param name="errorMessage">Message d'erreur</param>
            <exception cref="T:System.ArgumentNullException">Message d'erreur obligatoire</exception>
        </member>
        <member name="T:Ocrus.UX.IsoClusterFieldUX">
            <summary>
            Représente un champ qui sera affiché dans un cluster lors du vidéo codage
            - il correspond 1 pour 1 à un field use d'un document
            </summary>
        </member>
        <member name="P:Ocrus.UX.IsoClusterFieldUX.Style">
            <summary>
            Style du libellé du champ
            </summary>
        </member>
        <member name="P:Ocrus.UX.IsoClusterFieldUX.ClusterFieldBehaviours">
            <inheritdoc />
        </member>
        <member name="M:Ocrus.UX.IsoClusterFieldUX.#ctor(Ocrus.FieldUse)">
            <summary>
            Instancie un FieldUX correspondant à un field use
            Par défaut le Label prend la valeur du Name
            </summary>
        </member>
        <member name="M:Ocrus.UX.IsoClusterFieldUX.Render(Ocrus.OneOfTypes.OneOf{Ocrus.OCREngines.Extraction,Ocrus.OneOfTypes.Nothing})">
            <inheritdoc/>
        </member>
        <member name="T:Ocrus.UX.IsoFieldUX">
            <summary>
            Représente un champ qui sera affiché lors du vidéo codage
            - il correspond 1 pour 1 à un field use d'un document
            - par défaut il sera positionné sur la première page du document
            </summary>
        </member>
        <member name="M:Ocrus.UX.IsoFieldUX.#ctor(Ocrus.FieldUse)">
            <summary>
            Instancie un FieldUX correspondant à un field use
            Par défaut le Label prend la valeur du Name
            </summary>
        </member>
        <member name="M:Ocrus.UX.IsoFieldUX.Render(Ocrus.OneOfTypes.OneOf{Ocrus.OCREngines.Extraction,Ocrus.OneOfTypes.Nothing})">
            <inheritdoc />
        </member>
        <member name="T:Ocrus.UX.IsoFieldUXBase">
            <summary>
            Représente un champ qui sera affiché lors du vidéo codage
            - il correspond 1 pour 1 à un field use d'un document
            - par défaut il sera positionné sur la première page du document
            </summary>
        </member>
        <member name="P:Ocrus.UX.IsoFieldUXBase.Name">
            <inheritdoc />
        </member>
        <member name="P:Ocrus.UX.IsoFieldUXBase.Label">
            <inheritdoc />
        </member>
        <member name="P:Ocrus.UX.IsoFieldUXBase.FieldType">
            <inheritdoc />
        </member>
        <member name="P:Ocrus.UX.IsoFieldUXBase.IsMandatory">
            <inheritdoc />
        </member>
        <member name="P:Ocrus.UX.IsoFieldUXBase.ValidationDLL">
            <inheritdoc />
        </member>
        <member name="P:Ocrus.UX.IsoFieldUXBase.Position">
            <inheritdoc />
        </member>
        <member name="P:Ocrus.UX.IsoFieldUXBase.FieldUse">
            <summary>
            Field use correspondant
            </summary>
        </member>
        <member name="P:Ocrus.UX.IsoFieldUXBase.DefaultCropZone">
            <inheritdoc />
        </member>
        <member name="P:Ocrus.UX.IsoFieldUXBase.ActorsOptions">
            <inheritdoc />
        </member>
        <member name="P:Ocrus.UX.IsoFieldUXBase.FieldDisplayParameters">
            <inheritdoc />
        </member>
        <member name="P:Ocrus.UX.IsoFieldUXBase.ImageDisplayParameters">
            <inheritdoc />        
        </member>
        <member name="P:Ocrus.UX.IsoFieldUXBase.UserDisplayParameters">
            <inheritdoc />
        </member>
        <member name="P:Ocrus.UX.IsoFieldUXBase.FieldBehaviours">
            <inheritdoc />
        </member>
        <member name="P:Ocrus.UX.IsoFieldUXBase.InputMode">
            <inheritdoc />
        </member>
        <member name="M:Ocrus.UX.IsoFieldUXBase.#ctor(Ocrus.FieldUse)">
            <summary>
            Instancie un FieldUX correspondant à un field use
            Par défaut le Label prend la valeur du Name
            </summary>
        </member>
        <member name="M:Ocrus.UX.IsoFieldUXBase.CheckFieldUXValue(Ocrus.Instances.FieldInstance)">
            <inheritdoc />
        </member>
        <member name="T:Ocrus.UX.IClusterUX">
            <summary>
            Composant de rendu d'un cluster.
            Sait générer à partir d'un document une vue cluster
            </summary>
        </member>
        <member name="P:Ocrus.UX.IClusterUX.Label">
            <summary>
            Nom affiché dans l'outil de vidéo codage (limitations due à SYO)
            </summary>
        </member>
        <member name="P:Ocrus.UX.IClusterUX.Name">
            <summary>
            Nom technique du cluster, identique au label (limitations due à SYO)
            </summary>
        </member>
        <member name="P:Ocrus.UX.IClusterUX.RowGroupDescUXs">
            <summary>
            Les descriptions des lignes du cluster
            </summary>
        </member>
        <member name="P:Ocrus.UX.IClusterUX.Origin">
            <summary>
            Group use d'origine
            </summary>
        </member>
        <member name="P:Ocrus.UX.IClusterUX.ValidationDLL">
            <summary>
            Nom de la DLL de validation qui sait valider ce cluster (null si pas de validation)
            </summary>
        </member>
        <member name="P:Ocrus.UX.IClusterUX.ClusterDisplayParameters">
            <summary>
            Paramètres liés à l'affichage du Cluster dans l'outil de vidéo codage.
            </summary>
        </member>
        <member name="P:Ocrus.UX.IClusterUX.ImageDisplayParameters">
            <summary>
            Paramètres liés à l'affichage d'une image dans l'outil de vidéo codage.
            </summary>
        </member>
        <member name="P:Ocrus.UX.IClusterUX.UserDisplayParameters">
            <summary>
            Paramètres liés à l'affichage de l'outil de vidéo codage pour l'utilisateur.
            </summary>
        </member>
        <member name="P:Ocrus.UX.IClusterUX.ClusterBehaviours">
            <summary>
            Paramètres liés au comportement du Cluster dans l'outil de vidéo codage.
            </summary>
        </member>
        <member name="M:Ocrus.UX.IClusterUX.CheckClusterUXValue(Ocrus.Instances.ClusterInstance)">
            <summary>
            Vérifie la validité d'une instance de cluster
            </summary>
            <param name="ci">Instance de cluster avec ses données</param>
            <returns>Résultat de la validation</returns>
        </member>
        <member name="M:Ocrus.UX.IClusterUX.OnValueChanged(Ocrus.Instances.FieldInClusterInstance,Ocrus.Instances.ClusterInstance)">
            <summary>
            Exécutée lorsque la valeur de <paramref name="field"/> est modifiée lors du vidéocodage
            </summary>
            <param name="field">Champ dont la valeur vient de changer</param>
            <param name="cluster">Cluster où est situé ce champ</param>
            <returns>Liste des actions à exécuter</returns>
        </member>
        <member name="M:Ocrus.UX.IClusterUX.Render(Ocrus.Structuration.StructuratedCluster)">
            <summary>
            Rend un cluster
            </summary>
            <param name="cluster">Cluster structuré</param>
            <returns>Rendu du cluster</returns>
        </member>
        <member name="T:Ocrus.UX.IFieldUXCommon">
            <summary>
            Représente un champ qui sera affiché lors du vidéo codage
            Deux cas possibles:
            - il correspond 1 pour 1 à un field use d'un document
            - il correspond à un morceau de field use (une sous chaine, par exemple : zone 2 de cmc7)    
            </summary>
        </member>
        <member name="P:Ocrus.UX.IFieldUXCommon.Name">
            <summary>
            Nom technique du champ
            </summary>
        </member>
        <member name="P:Ocrus.UX.IFieldUXCommon.Label">
            <summary>
            Nom affiché dans l'outil de vidéo codage
            </summary>
        </member>
        <member name="P:Ocrus.UX.IFieldUXCommon.FieldType">
            <summary>
            Description du champ du viéo codage
            </summary>
        </member>
        <member name="P:Ocrus.UX.IFieldUXCommon.IsMandatory">
            <summary>
            Ce champ est-il obligatoire
            </summary>
        </member>
        <member name="P:Ocrus.UX.IFieldUXCommon.DefaultCropZone">
            <summary>
            La zone (rectangle) où est présent ce champ dans la page s'il n'a pas été trouvé par l'OCR (position par défaut)
            </summary>
        </member>
        <member name="P:Ocrus.UX.IFieldUXCommon.ValidationDLL">
            <summary>
            Nom de la DLL de validation qui sait valider ce champ (null si pas de validation)
            </summary>
        </member>
        <member name="P:Ocrus.UX.IFieldUXCommon.Position">
            <summary>
            Indice de la page où l'on souhaite associer le champs. <Br />
            Par défaut, l'indice vaut 0, ce qui signifie que le champ sera rattaché à la première page du document (le recto donc).
            </summary>
        </member>
        <member name="P:Ocrus.UX.IFieldUXCommon.ActorsOptions">
            <summary>
            Indique nombre d'acteurs en jeu lors de l'extraction d'un champ.
            </summary>
        </member>
        <member name="P:Ocrus.UX.IFieldUXCommon.FieldDisplayParameters">
            <summary>
            Paramètres liés à l'affichage d'un champ dans l'outil de vidéo codage.
            </summary>
        </member>
        <member name="P:Ocrus.UX.IFieldUXCommon.ImageDisplayParameters">
            <summary>
            Paramètres liés à l'affichage d'une image dans l'outil de vidéo codage.
            </summary>
        </member>
        <member name="P:Ocrus.UX.IFieldUXCommon.UserDisplayParameters">
            <summary>
            Paramètres liés à l'affichage de l'outil de vidéo codage pour l'utilisateur.
            </summary>
        </member>
        <member name="P:Ocrus.UX.IFieldUXCommon.FieldBehaviours">
            <summary>
            Paramètres liés au comportement d'un champ dans l'outil de vidéo codage.
            </summary>
        </member>
        <member name="P:Ocrus.UX.IFieldUXCommon.InputMode">
            <summary>
            Mode de saisie pour un champ.
            </summary>
        </member>
        <member name="M:Ocrus.UX.IFieldUXCommon.CheckFieldUXValue(Ocrus.Instances.FieldInstance)">
            <summary>        
            Vérifie la validité de l'instance passée en paramètre par rapport au fieldUX
            </summary>
            <param name="instance">Instance du field à vérifier</param>
            <returns>Résultat de la validation d'une valeur par rapport à son field UX</returns>
        </member>
        <member name="T:Ocrus.UX.IClusterFieldUX">
            <summary>
            Description d'un champ qui sera affiché dans un cluster lors du vidéo codage
            - il correspond 1 pour 1 à un field use d'un document
            </summary>
        </member>
        <member name="P:Ocrus.UX.IClusterFieldUX.Style">
            <summary>
            Style du libellé du champ
            </summary>
        </member>
        <member name="P:Ocrus.UX.IClusterFieldUX.ClusterFieldBehaviours">
            <summary>
            Paramètres liés au comportement d'un champ cluster dans l'outil de vidéo codage.
            </summary>
        </member>
        <member name="M:Ocrus.UX.IClusterFieldUX.Render(Ocrus.OneOfTypes.OneOf{Ocrus.OCREngines.Extraction,Ocrus.OneOfTypes.Nothing})">
            <summary>
            Rend le champ en fonction de l'extraction donnée
            </summary>
            <param name="extraction">Eventuelle extraction</param>
            <returns>Rendu du champ</returns>
        </member>
        <member name="T:Ocrus.UX.IFieldUX">
            <summary>
            Représente un champ qui sera affiché lors du vidéo codage
            Deux cas possibles:
            - il correspond 1 pour 1 à un field use d'un document
            - il correspond à un morceau de field use (une sous chaine, par exemple : zone 2 de cmc7)    
            </summary>
        </member>
        <member name="M:Ocrus.UX.IFieldUX.Render(Ocrus.OneOfTypes.OneOf{Ocrus.OCREngines.Extraction,Ocrus.OneOfTypes.Nothing})">
            <summary>
            Rend un field
            </summary>
            <param name="extraction">Eventuelle extraction</param>
            <returns>Rendu du field</returns>
        </member>
        <member name="T:Ocrus.UX.IDocumentUX">
            <summary>
            Composant de rendu d'un document.
            Sait transformer un document dans son viewmodel
            </summary>
        </member>
        <member name="P:Ocrus.UX.IDocumentUX.Origin">
            <summary>
            Document use associé
            </summary>
        </member>
        <member name="P:Ocrus.UX.IDocumentUX.FieldUXs">
            <summary>
            Les champs utilisés par le document.
            </summary>
        </member>
        <member name="P:Ocrus.UX.IDocumentUX.ClusterUXs">
            <summary>
            Les clusters utilisés par le document.
            </summary>
        </member>
        <member name="P:Ocrus.UX.IDocumentUX.ValidationDLL">
            <summary>
            Nom de la DLL de validation qui sait valider ce document (null si pas de validation)
            </summary>
        </member>
        <member name="P:Ocrus.UX.IDocumentUX.Shortcut">
            <summary>
            Quel est le raccourci dans rafale
            </summary>
        </member>
        <member name="P:Ocrus.UX.IDocumentUX.ImageDisplayParameters">
            <summary>
            Paramètres liés à l'affichage d'une image dans l'outil de vidéo codage.
            </summary>
        </member>
        <member name="M:Ocrus.UX.IDocumentUX.Render(Ocrus.Structuration.StructuratedDoc)">
            <summary>
            Transforme un document structuré en son symétrique pour vidéo codage        
            </summary>
            <param name="doc">Document structuré</param>
            <returns>Document prêt pour le vidéo codage</returns>
        </member>
        <member name="T:Ocrus.UX.IFoldUX">
            <summary>
            Composant de rendu d'un pli structuré
            </summary>
        </member>
        <member name="P:Ocrus.UX.IFoldUX.Origin">
            <summary>
            FoldUse associé
            </summary>
        </member>
        <member name="P:Ocrus.UX.IFoldUX.DocumentUXs">
            <summary>
            Documents UX utilisés par ce foldUX
            </summary>
        </member>
        <member name="P:Ocrus.UX.IFoldUX.FoldValidationDLL">
            <summary>
            Nom de la dll de validation (null si pas de validation)
            </summary>
        </member>
        <member name="P:Ocrus.UX.IFoldUX.ImageDisplayParameters">
            <summary>
            Paramètres liés à l'affichage d'une image dans l'outil de vidéo codage.
            </summary>
        </member>
        <member name="P:Ocrus.UX.IFoldUX.ControlAdjustments">
            <summary>
            Représente la liste des ajustements manuels (en vidéo codage) à effectuer. <br/>
            Un ajustement est une vérification manuelle de cohérence des documents du pli.
            </summary>
        </member>
        <member name="M:Ocrus.UX.IFoldUX.Render(Ocrus.Structuration.StructuratedFold)">
            <summary>
            Transforme un pli structuré en son symétrique pour vidéo codage
            </summary>
            <param name="fold">Pli structuré</param>
            <returns>Pli prêt pour le vidéo codage</returns>
        </member>
        <member name="M:Ocrus.UX.IFoldUX.GetDocumentTypeFolds">
            <summary>
            Permet de crééer les DocumentTypeFolds à l'aide de la description UX du pli.
            </summary>
            <returns>Une liste de type de document traitée par le pli.</returns>
        </member>
        <member name="T:Ocrus.UX.IsoDocumentUX">
            <summary>
            Représente un document qui sera affiché dans le vidéo codage avec les mêmes champs (iso) que ceux du document use. <br/>
            Le document UX doit avoir exactement les mêmes fields que le document use du document structuré (même noms, même nombre). <br/>
            Les cluster du documentUX doivent être cohérents avec le documentUse (champs déclarés, etc.)
            </summary>
        </member>
        <member name="P:Ocrus.UX.IsoDocumentUX.ValidationDLL">
            <inheritdoc/>
        </member>
        <member name="P:Ocrus.UX.IsoDocumentUX.FieldUXs">
            <inheritdoc/>
        </member>
        <member name="P:Ocrus.UX.IsoDocumentUX.ClusterUXs">
            <inheritdoc/>
        </member>
        <member name="P:Ocrus.UX.IsoDocumentUX.Shortcut">
            <inheritdoc/>
        </member>
        <member name="P:Ocrus.UX.IsoDocumentUX.Origin">
            <inheritdoc/>
        </member>
        <member name="P:Ocrus.UX.IsoDocumentUX.ImageDisplayParameters">
            <inheritdoc/>
        </member>
        <member name="M:Ocrus.UX.IsoDocumentUX.#ctor(Ocrus.DocumentUse,System.Collections.Generic.IEnumerable{Ocrus.UX.IsoFieldUX},Ocrus.OneOfTypes.OneOf{Ocrus.UX.Default,Ocrus.UX.HotKeys,Ocrus.UX.AutoComplete},System.String)">
            <summary>
            Instancie un document qui sera affiché dans le vidéo codage
            </summary>
            <param name="docUse">Document use d'origine</param>
            <param name="fieldUXs">Liste des fieldUX du document UX</param>
            <param name="shortcut">Quel est le raccourci dans le vidéo codage</param>
            <param name="validationDLL">Nom de la DLL de validation qui sait valider ce document (null si pas de validation)</param>
            <exception cref="T:Ocrus.Exceptions.InvalidDescriptionException">Exception déclenchée lorsque la description indiquée est invalide</exception>
        </member>
        <member name="M:Ocrus.UX.IsoDocumentUX.#ctor(Ocrus.DocumentUse,System.Collections.Generic.IEnumerable{Ocrus.UX.IsoFieldUX},System.Collections.Generic.IEnumerable{Ocrus.UX.IsoClusterUX},Ocrus.OneOfTypes.OneOf{Ocrus.UX.Default,Ocrus.UX.HotKeys,Ocrus.UX.AutoComplete},System.String)">
            <summary>
            Instancie un document qui sera affiché dans le vidéo codage
            </summary>
            <param name="docUse">Document use d'origine</param>
            <param name="fieldUXs">Liste des fieldUX du document UX</param>
            <param name="clusterUXs">List des clusters utilisés par le document UX</param>
            <param name="shortcut">Quel est le raccourci dans le vidéo codage</param>
            <param name="validationDLL">Nom de la DLL de validation qui sait valider ce document (null si pas de validation)</param>
            <exception cref="T:Ocrus.Exceptions.InvalidDescriptionException">Exception déclenchée lorsque la description indiquée est invalide</exception>
        </member>
        <member name="M:Ocrus.UX.IsoDocumentUX.CheckCoherence(Ocrus.DocumentUse,System.Collections.Generic.IReadOnlyDictionary{System.String,Ocrus.UX.IsoFieldUX},System.Collections.Generic.IReadOnlyDictionary{System.String,Ocrus.UX.IsoClusterUX})">
            <summary>
            Vérifie que les champs sont cohérents entre eux
            </summary>
        </member>
        <member name="M:Ocrus.UX.IsoDocumentUX.GetExtractedValue(Ocrus.Structuration.StructuratedDoc,System.String)">
            <summary>
            Récupère une valeur extraite dans un document structuré        
            </summary>
            <param name="doc">Document structuré</param>
            <param name="key">Nom de la valeur à récupérer</param>
            <returns>Extraction, Nothing si non trouvée</returns>
        </member>
        <member name="M:Ocrus.UX.IsoDocumentUX.Render(Ocrus.Structuration.StructuratedDoc)">
            <summary>
            Implémentation par défaut du rendu d'un document.
            Le document UX doit avoir exactement les mêmes fields que le document use du document structuré (même noms, même nombre).
            Ces champs peuvent être présents en champs autonomes (FieldUXs) ou au travers d'un cluster (ClusterUXs)
            </summary>
            <param name="doc">Document structuré</param>
            <returns>Document prêt pour le vidéo codage</returns>
        </member>
        <member name="M:Ocrus.UX.IsoDocumentUX.RenderClusters(Ocrus.Structuration.StructuratedDoc)">
            <summary>
            Rendu par défaut des clusters
            </summary>
            <param name="doc">Document contenant les clusters à rendre</param>
            <returns>Liste des rendus des clusters</returns>
            <exception cref="T:Ocrus.Exceptions.DynamicBusiness.DynamicBusinessException">Erreur lors du rendu</exception>
        </member>
        <member name="M:Ocrus.UX.IsoDocumentUX.GetPositionnedFields(Ocrus.Structuration.StructuratedDoc,System.Int32)">
            <summary>
            Extrait la liste des champs d'un document qui sont associées à la page de position <paramref name="position"/>
            </summary>
            <param name="doc">Document structuré contenant les champs</param>
            <param name="position">Position de la page où sont les champs</param>
            <returns>Liste des champs présents sur la page positionnée</returns>
        </member>
        <member name="T:Ocrus.UX.FoldUX">
            <summary>
            Composant de rendu d'un pli structuré
            </summary>
        </member>
        <member name="P:Ocrus.UX.FoldUX.Origin">
            <inheritdoc />
        </member>
        <member name="P:Ocrus.UX.FoldUX.DocumentUXs">
            <inheritdoc />
        </member>
        <member name="P:Ocrus.UX.FoldUX.FoldValidationDLL">
            <inheritdoc />
        </member>
        <member name="P:Ocrus.UX.FoldUX.ControlAdjustments">
            <inheritdoc />
        </member>
        <member name="P:Ocrus.UX.FoldUX.ImageDisplayParameters">
            <inheritdoc/>
        </member>
        <member name="M:Ocrus.UX.FoldUX.#ctor(System.Collections.Generic.IEnumerable{Ocrus.UX.IDocumentUX},Ocrus.FoldUse,System.String)">
            <summary>
            Instancie un composant de rendu d'un pli structuré
            </summary>
            <param name="documentUXs">Documents UX composant le pli</param>
            <param name="origin">Folduse d'origin</param>
            <param name="foldValidationDLL">Nom de la dll de validation (null si pas de validation)</param>
            <exception cref="T:Ocrus.Exceptions.InvalidDescriptionException">Exception déclenchée lorsque la description indiquée est invalide</exception>
        </member>
        <member name="M:Ocrus.UX.FoldUX.#ctor(System.Collections.Generic.IEnumerable{Ocrus.UX.IDocumentUX},Ocrus.FoldUse,System.String,Ocrus.UX.Objets.RafaleDisplayOptions.ImageDisplayParameters)">
            <summary>
            Instancie un composant de rendu d'un pli structuré avec des contôles d'ajustement et des paramètres d'affichage dans l'outil de vidéo codage.
            </summary>
            <param name="documentUXs">Documents UX composant le pli</param>
            <param name="origin">Folduse d'origin</param>
            <param name="foldValidationDLL">Nom de la dll de validation (null si pas de validation)</param>
            <param name="imageDisplayParameters">Paramètres d'affichage de l'image dans l'outil de vidéo codage.</param>
        </member>
        <member name="M:Ocrus.UX.FoldUX.#ctor(System.Collections.Generic.IEnumerable{Ocrus.UX.IDocumentUX},Ocrus.FoldUse,System.String,System.Collections.Generic.IReadOnlyList{Ocrus.UX.AdjustmentBase})">
            <summary>
            Instancie un composant de rendu d'un pli structuré avec des contôles d'ajustement.
            </summary>
            <param name="documentUXs">Documents UX composant le pli</param>
            <param name="origin">Folduse d'origin</param>
            <param name="foldValidationDLL">Nom de la dll de validation (null si pas de validation)</param>
            <param name="controlAdjustments">Liste des ajustements manuels (en vidéo codage) à effectuer</param>
            <exception cref="T:Ocrus.Exceptions.InvalidDescriptionException">Exception déclenchée lorsque la description indiquée est invalide</exception>
        </member>
        <member name="M:Ocrus.UX.FoldUX.Render(Ocrus.Structuration.StructuratedFold)">
            <inheritdoc />
        </member>
        <member name="M:Ocrus.UX.FoldUX.GetDocumentTypeFolds">
            <summary>
            Permet de crééer les DocumentTypeFolds à l'aide de la description UX du pli.
            </summary>
            <returns>Une liste de type de document traitée par le pli.</returns>
        </member>
        <member name="T:Ocrus.UX.UXFinder">
            <summary>
            Helper qui permet de retrouver des objets UX présent dans un pli structuré.
            </summary>
        </member>
        <member name="M:Ocrus.UX.UXFinder.GetDocumentUX(Ocrus.UX.IFoldUX,System.String)">
            <summary>
            Récupère le DocumentUX correspondant au document demandé.<br />
            Garantit que le DocumentUX est trouvé.
            </summary>
            <param name="foldUX">Pli structuré où se trouve le document.</param>
            <param name="documentName">Nom du document à récupérer.</param>
            <returns></returns>
        </member>
        <member name="M:Ocrus.UX.UXFinder.GetFieldUX(Ocrus.UX.IFoldUX,System.String,System.String)">
            <summary>
            Récupère le FieldUX correspondant au champ autonome demandé. <br/>
            Garantit que le FieldUX est trouvé.
            </summary>
            <param name="foldUX">Pli structuré où se trouve le document.</param>
            <param name="documentName">Nom du document contenant le champ autonome.</param>
            <param name="fieldAlias">Nom technique du champ à récupérer.</param>
            <returns></returns>
        </member>
        <member name="M:Ocrus.UX.UXFinder.GetClusterUX(Ocrus.UX.IFoldUX,System.String,System.String)">
            <summary>
            Récupère le ClusterUX correspondant au cluster demandé.<br />
            Garantit que le ClusterUX est trouvé.
            </summary>
            <param name="foldUX">Pli structuré où se trouve le document.</param>
            <param name="documentName">Nom du document contenant le cluster.</param>
            <param name="clusterName">Nom du cluster à récupérer.</param>
            <returns></returns>
        </member>
        <member name="M:Ocrus.UX.UXFinder.GetClusterFieldUX(Ocrus.UX.IFoldUX,Ocrus.UX.InputInClusterInfos,System.String)">
            <summary>
            Récupère le ClusterFieldUX correspondant aux informations du champ en question dans son cluster.
            </summary>
            <param name="foldUX">Pli structuré où se trouve le document.</param>
            <param name="infos">Informations relatives au champ dans un cluster.</param>
            <param name="fieldName">Nom du champ à récupérer.</param>
            <returns></returns>
        </member>
        <member name="T:Ocrus.RefAccessor.IRefAccessor`1">
            <summary>
            Modèlise un accesseur à un référentiel arbitraire pour un certain type de donnée <typeparamref name="T"/>
            </summary>
            <typeparam name="T">Valeur contenue dans le référentiel</typeparam>
        </member>
        <member name="T:Ocrus.RefAccessor.IRefAccessorContains">
            <summary>
            Modèlise un accesseur à un référentiel arbitraire.
            Permet de tester l'appartenance d'une clef à un ensemble.
            </summary>    
        </member>
        <member name="M:Ocrus.RefAccessor.IRefAccessorContains.ContainsKey(System.String)">
            <summary>
            Teste si une clef appartient au référentiel
            </summary>
            <param name="key">Clef à tester</param>
            <returns>True si la clef appartient au référentiel, false sinon</returns>
        </member>
        <member name="T:Ocrus.RefAccessor.IRefAccessorValue`1">
            <summary>
            Modèlise un accesseur à un référentiel arbitraire pour un certain type de donnée <typeparamref name="T"/>
            </summary>
            <typeparam name="T">Valeur contenue dans le référentiel</typeparam>
        </member>
        <member name="M:Ocrus.RefAccessor.IRefAccessorValue`1.GetValue(System.String)">
            <summary>
            Recupère la valeur associée à une clef
            </summary>
            <param name="key">Clef associé eà la valeur à récupérer</param>
            <returns>Valeur récupérée, Nothing si aucune valeur ne correspond à la clef donnée</returns>
        </member>
        <member name="T:Ocrus.DateFieldType">
            <summary>
            Type Date SYO sur 6 chiffres. (dd/MM/yy)
            </summary>
        </member>
        <member name="M:Ocrus.DateFieldType.#ctor">
            <summary>
            Instancie un type date au sens SYO sur 6 chiffres (dd/MM/yy). <br />
            Nom par défaut.
            </summary>
        </member>
        <member name="M:Ocrus.DateFieldType.#ctor(System.String)">
            <summary>
            Instancie un type date au sens SYO sur 6 chiffres (dd/MM/yy)
            </summary>
            <param name="name">Nom du type date</param>
        </member>
        <member name="M:Ocrus.DateFieldType.CheckValue(System.String)">
            <inheritdoc/>
        </member>
        <member name="T:Ocrus.DocumentType">
            <summary>
            Type d'un document
            </summary>
        </member>
        <member name="P:Ocrus.DocumentType.Name">
            <summary>
            Nom du type
            </summary>
        </member>
        <member name="M:Ocrus.DocumentType.#ctor(System.String)">
            <summary>
            Type d'un document
            </summary>
            <param name="name">Nom du type</param>
        </member>
        <member name="T:Ocrus.PageSideTool">
            <summary>
            Outille le parsing et la sérialization de <see cref="T:Ocrus.PageSide"/>
            </summary>
        </member>
        <member name="M:Ocrus.PageSideTool.ParsePageSide(System.String)">
            <summary>
            Desérialize un <see cref="T:Ocrus.PageSide"/>
            </summary>
            <param name="side">Valeur sérialisée</param>
            <returns>PageSide</returns>
            <exception cref="T:Ocrus.Exceptions.DynamicBusiness.DynamicBusinessException">Lorsque la valeur n'est pas valide</exception>
        </member>
        <member name="M:Ocrus.PageSideTool.ToString(Ocrus.PageSide)">
            <summary>
            Sérialize un <see cref="T:Ocrus.PageSide"/>
            </summary>
            <param name="side">PageSide à sérialiser</param>
            <returns>Valeur sérialisée</returns>
        </member>
        <member name="T:Ocrus.PageSide">
            <summary>
            Côté d'une page
            </summary> 
        </member>
        <member name="F:Ocrus.PageSide.Recto">
            <summary>
            Recto
            </summary>
        </member>
        <member name="F:Ocrus.PageSide.Verso">
            <summary>
            Verso
            </summary>
        </member>
        <member name="T:Ocrus.PageInfos">
            <summary>
            Sous ensemble des informations minimales présentes la plupart du temps sur une page
            </summary>
        </member>
        <member name="P:Ocrus.PageInfos.PageName">
            <summary>
            Nom de la page
            </summary>
        </member>
        <member name="P:Ocrus.PageInfos.PageType">
            <summary>
            Type de la page
            </summary>
        </member>
        <member name="P:Ocrus.PageInfos.Side">
            <summary>
            Côté de la page (recto/verso)
            </summary>
        </member>
        <member name="P:Ocrus.PageInfos.Endos">
            <summary>
            Endos (Transmission des effets de commerce ou des chèques au moyen d'une signature (endos) apposée au verso) 
            </summary>
        </member>
        <member name="P:Ocrus.PageInfos.Jpeg">
            <summary>
            Nom de l'image au format Jpeg
            </summary>
        </member>
        <member name="P:Ocrus.PageInfos.Tiff">
            <summary>
            Nom de l'image au format Tiff
            </summary>
        </member>
        <member name="P:Ocrus.PageInfos.ImageUID">
            <summary>
            Identifiant unique de l'image
            </summary>
        </member>
        <member name="M:Ocrus.PageInfos.#ctor(System.String,Ocrus.PageSide,System.String,System.String,System.String,System.String,Ocrus.OCREngines.ImageUID)">
            <summary>
            Instancie un pageinfos
            </summary>
            <param name="pageName">Nom de la page</param>
            <param name="side">Côté de la page (recto/verso)</param>
            <param name="jpeg">Nom de l'image au format Jpeg</param>
            <param name="tiff">Nom de l'image au format Tiff</param>
            <param name="pageType">Type de la page</param>
            <param name="endos">Endos (Transmission des effets de commerce ou des chèques au moyen d'une signature (endos) apposée au verso) </param>
            <param name="imageUID">Identifiant unique de l'image</param>
        </member>
        <member name="T:Ocrus.FoldUse">
            <summary>
            Décrit comment est utilisé un pli dans un flux
            </summary>
        </member>
        <member name="P:Ocrus.FoldUse.Name">
            <summary>
            Nom du pli
            </summary>
        </member>
        <member name="P:Ocrus.FoldUse.DocumentUses">
            <summary>
            Description des documents composant le pli indéxés par leur Name
            </summary>
        </member>
        <member name="M:Ocrus.FoldUse.#ctor(System.String,System.Collections.Generic.IEnumerable{Ocrus.DocumentUse},Ocrus.DocumentUse)">
            <summary>
            Instancie une decription de pli
            </summary>
            <param name="name">Nom du pli</param>
            <param name="documentUses">Description des documents composant le pli</param>
            <param name="splitDocument">Le document qui sert de séparateur entre les plis</param>
        </member>
        <member name="M:Ocrus.FoldUse.IsSplit(Ocrus.DocumentUse)">
            <summary>
            Est ce que ce document est utilisé comme un séparateur de plis
            </summary>
        </member>
        <member name="M:Ocrus.FoldUse.IsSplit(Ocrus.Structuration.RawSheet)">
            <summary>
            Est ce que la feuille marque un séparateur de pli
            </summary>
        </member>
        <member name="M:Ocrus.FoldUse.GetDocumentByType(System.String)">
            <summary>
            Retourne le document correspondant au type demandé.
            </summary>
            <param name="documentType">Type de document recherché</param>
            <exception cref="T:System.ArgumentException">Déclenchée si deux documentUse différents ont le même type</exception>
            <returns>DocumentUse du type demandé. Nothing si aucun DocumentUse ne correspond.</returns>
        </member>
        <member name="M:Ocrus.FoldUse.GetDocumentTypes">
            <summary>
            Ensemble des types de documents gérés par le pli
            </summary>
            <returns>Types de documents gérés par le pli</returns>
        </member>
        <member name="T:Ocrus.DocumentUse">
            <summary>
            Décrit comment est utilisé un type de document dans un flux
            </summary>
        </member>
        <member name="P:Ocrus.DocumentUse.Name">
            <summary>
            Nom du DocumentUse. Plusieurs DocumentUse différents mais de même type peuvent être présents dans le même pli.
            </summary>
        </member>
        <member name="P:Ocrus.DocumentUse.DocType">
            <summary>
            Type de document associé
            </summary>
        </member>
        <member name="P:Ocrus.DocumentUse.FieldUses">
            <summary>
            Quels sont les champs utilisés par le document.
            </summary>
        </member>
        <member name="M:Ocrus.DocumentUse.#ctor(System.String,Ocrus.DocumentType,System.Collections.Generic.IReadOnlyList{Ocrus.FieldUse})">
            <summary>
            Instancie un documentUse qui décrit comment est utilisé un type de document dans un flux
            </summary>
            <param name="name">Nom du document Use</param>
            <param name="type">Type de document décrit</param>
            <param name="fieldUses">Liste des champs utilisés</param>
        </member>
        <member name="T:Ocrus.TypesNames">
            <summary>
            Noms normalisés des types
            </summary>
        </member>
        <member name="F:Ocrus.TypesNames.CHAINE">
            <summary>
            SYO.Business.InputTypeEnum.String
            </summary>
        </member>
        <member name="F:Ocrus.TypesNames.DATE">
            <summary>
            SYO.Business.InputTypeEnum.Date
            </summary>
        </member>
        <member name="F:Ocrus.TypesNames.DECIMAL">
            <summary>
            SYO.Business.InputTypeEnum.Decimal
            </summary>
        </member>
        <member name="F:Ocrus.TypesNames.HEURE">
            <summary>
            SYO.Business.InputTypeEnum.Time
            </summary>
        </member>
        <member name="F:Ocrus.TypesNames.HORODATAGE">
            <summary>
            SYO.Business.InputTypeEnum.DateTime
            </summary>
        </member>
        <member name="F:Ocrus.TypesNames.LONGINT">
            <summary>
            SYO.Business.InputTypeEnum.LongInteger
            </summary>
        </member>
        <member name="F:Ocrus.TypesNames.MONTANT">
            <summary>
            SYO.Business.InputTypeEnum.Money
            </summary>
        </member>
        <member name="F:Ocrus.TypesNames.SHORTINT">
            <summary>
            SYO.Business.InputTypeEnum.Integer
            </summary>
        </member>
        <member name="T:Ocrus.MoneyFieldType">
            <summary>
            Type Money basé sur un <see cref="T:System.Int64"/>
            </summary>
        </member>
        <member name="M:Ocrus.MoneyFieldType.#ctor(System.String)">
            <summary>
            Type money basé sur un <see cref="T:System.Int64"/>
            </summary>
            <param name="name">Nom du type</param>
        </member>
        <member name="M:Ocrus.MoneyFieldType.#ctor(System.String,System.Nullable{System.Int64},System.Nullable{System.Int64})">
            <summary>
            Type money basé sur un <see cref="T:System.Int64"/>
            </summary>
            <param name="name">Nom du type</param>
            <param name="min">Valeur minimale</param>
            <param name="max">Valeur maximale</param>
        </member>
        <member name="M:Ocrus.MoneyFieldType.#ctor(System.String,System.Nullable{System.Int64},System.Nullable{System.Int64},System.Nullable{System.Int16},System.Nullable{System.Int16})">
            <summary>
            Type money basé sur un <see cref="T:System.Int64"/>
            </summary>
            <param name="name">Nom du type</param>
            <param name="min">Valeur minimale</param>
            <param name="max">Valeur maximale</param>
            <param name="minLength">Longueur minimale</param>
            <param name="maxLength">Longueur maximale</param>
        </member>
        <member name="M:Ocrus.MoneyFieldType.TryParse(System.String,System.Int64@)">
            <inheritdoc/>
        </member>
        <member name="T:Ocrus.NumberFieldTypeBase`1">
            <summary>
            Type de base dont hérite tous les types nombres
            </summary>
            <typeparam name="T">Type sousjacent</typeparam>
        </member>
        <member name="P:Ocrus.NumberFieldTypeBase`1.MinValue">
            <inheritdoc/>
        </member>
        <member name="P:Ocrus.NumberFieldTypeBase`1.MaxValue">
            <inheritdoc/>
        </member>
        <member name="M:Ocrus.NumberFieldTypeBase`1.#ctor(System.String)">
            <summary>
            Instancie un type nombre sans vérifications
            </summary>
            <param name="name">Nom du type</param>
        </member>
        <member name="M:Ocrus.NumberFieldTypeBase`1.#ctor(System.String,System.Nullable{`0},System.Nullable{`0})">
            <summary>
            Type nombre basé sur un <typeparamref name="T"/>
            </summary>
            <param name="name">Nom du type</param>
            <param name="min">Valeur minimale</param>
            <param name="max">Valeur maximale</param>
        </member>
        <member name="M:Ocrus.NumberFieldTypeBase`1.#ctor(System.String,System.Nullable{System.Int16},System.Nullable{System.Int16})">
            <summary>
            Type nombre basé sur un <typeparamref name="T"/>
            </summary>
            <param name="name">Nom du type</param>
            <param name="minLength">Longueur minimale</param>
            <param name="maxLength">Longueur maximale</param>
        </member>
        <member name="M:Ocrus.NumberFieldTypeBase`1.#ctor(System.String,System.Nullable{`0},System.Nullable{`0},System.Nullable{System.Int16},System.Nullable{System.Int16})">
            <summary>
            Type nombre basé sur un <typeparamref name="T"/>
            </summary>
            <param name="name">Nom du type</param>
            <param name="min">Valeur minimale</param>
            <param name="max">Valeur maximale</param>
            <param name="minLength">Longueur minimale</param>
            <param name="maxLength">Longueur maximale</param>
        </member>
        <member name="M:Ocrus.NumberFieldTypeBase`1.CheckValue(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Ocrus.NumberFieldTypeBase`1.TryParse(System.String,`0@)">
            <inheritdoc/>
        </member>
        <member name="T:Ocrus.FieldUse">
            <summary>
            Champ utilisé dans un document <br/>
            Un champ utilisé est une instance d'un type de champ avec des propriétés d'utilisation (son emplacement dans le document (cropzone), etc.
            </summary>
        </member>
        <member name="P:Ocrus.FieldUse.Name">
            <summary>
            Nom du FieldUse. Plusieurs Fielduse différents mais de même type peuvent être présents sur la même page.
            </summary>
        </member>
        <member name="P:Ocrus.FieldUse.FieldType">
            <summary>
            Description du champ utilisé
            </summary>
        </member>
        <member name="P:Ocrus.FieldUse.IsMandatory">
            <summary>
            Ce champ est-il obligatoire. (true par défaut)
            </summary>
        </member>
        <member name="P:Ocrus.FieldUse.DefaultCropZone">
            <summary>
            La zone (rectangle) où est présent ce champ dans la page s'il n'a pas été trouvé par l'OCR (position par défaut)
            </summary>
        </member>
        <member name="M:Ocrus.FieldUse.#ctor(System.String,Ocrus.IFieldType,System.Boolean,Ocrus.Structuration.RelativeCropZone)">
            <summary>
            Champ utilisé dans un document
            </summary>
            <param name="name">Nom du FieldUse. Plusieurs Fielduse différents mais de même type peuvent être présents sur la même page.</param>
            <param name="fieldType">Description du champ utilisé</param>
            <param name="isMandatory">Ce champ est-il obligatoire</param>
            <param name="defaultCropZone">La zone (rectangle) où est présent ce champ dans la page s'il n'a pas été trouvé par l'OCR (position par défaut)</param>
        </member>
        <member name="M:Ocrus.FieldUse.#ctor(System.String,Ocrus.IFieldType,Ocrus.Structuration.RelativeCropZone)">
            <summary>
            Champ utilisé dans un document.<br />
            Par défaut le champ est obligatoire.
            </summary>
            <param name="name">Nom du FieldUse. Plusieurs Fielduse différents mais de même type peuvent être présents sur la même page.</param>
            <param name="fieldType">Description du champ utilisé</param>
            <param name="defaultCropZone">La zone (rectangle) où est présent ce champ dans la page s'il n'a pas été trouvé par l'OCR (position par défaut)</param>
        </member>
        <member name="M:Ocrus.FieldUse.CheckUseValue(Ocrus.Instances.FieldInstance)">
            <summary>
            Vérifie la validité de la valeur selon le type.
            Pour ajouter des vérifications, surcharger la méthode <see cref="M:Ocrus.FieldUse.AdditionalChecks(Ocrus.Instances.FieldInstance)"/>
            </summary>
            <param name="instance">Valeur à vérifier</param>
            <returns>Résultat de la vérification</returns>
        </member>
        <member name="M:Ocrus.FieldUse.AdditionalChecks(Ocrus.Instances.FieldInstance)">
            <summary>
            Méthode à implémenter pour ajouter des contrôles propres au FieldUse. Par défaut retourne un résultat valide.
            </summary>
            <param name="instance">Valeur à vérifier</param>
            <returns>Résultat de la vérification</returns>
        </member>
        <member name="T:Ocrus.CheckTypeResult">
            <summary>
            Résultat de la validation d'une valeur par rapport à son type
            </summary>
        </member>
        <member name="P:Ocrus.CheckTypeResult.IsValid">
            <summary>
            True si valide, false sinon
            </summary>
        </member>
        <member name="P:Ocrus.CheckTypeResult.InvalidMessage">
            <summary>
            Si invalid, message d'erreur expliquant la raison
            null si valid
            </summary>
        </member>
        <member name="M:Ocrus.CheckTypeResult.CreateValidResult">
            <summary>
            Instancie un résultat valide
            </summary>
            <returns>Résultat valide</returns>
        </member>
        <member name="M:Ocrus.CheckTypeResult.CreateInvalidResult(System.String)">
            <summary>
            Instancie un résultat invalide
            </summary>
            <param name="message">Raison expliquant l'invalidité</param>
            <returns>Résultat invalide</returns>
        </member>
        <member name="M:Ocrus.CheckTypeResult.CreateInvalidEmptyResult(System.String)">
            <summary>
            Instancie un résultat invalide dans le cas d'une valeur absente
            </summary>
            <param name="typeName">Nom du type de champ</param>
            <returns>Résultat invalide (vide ou null)</returns>
        </member>
        <member name="T:Ocrus.FieldTypeBase">
            <summary>
            Implémentation par défaut d'un <see cref="T:Ocrus.IFieldType"/>
            </summary>
        </member>
        <member name="P:Ocrus.FieldTypeBase.Name">
            <inheritdoc/>
        </member>
        <member name="P:Ocrus.FieldTypeBase.RegularExpression">
            <inheritdoc/>
        </member>
        <member name="P:Ocrus.FieldTypeBase.MinLength">
            <inheritdoc/>
        </member>
        <member name="P:Ocrus.FieldTypeBase.MaxLength">
            <inheritdoc/>
        </member>
        <member name="M:Ocrus.FieldTypeBase.#ctor(System.String)">
            <summary>
            Instancie un type simple sans vérifications
            </summary>
            <param name="name">Nom du type</param>
        </member>
        <member name="M:Ocrus.FieldTypeBase.#ctor(System.String,System.String)">
            <summary>
            Instancie un type simple avec vérification à base de regexp
            </summary>
            <param name="name">Nom du type</param>
            <param name="regexp">Expression régulière de vérification</param>
        </member>
        <member name="M:Ocrus.FieldTypeBase.#ctor(System.String,System.Nullable{System.Int16},System.Nullable{System.Int16})">
            <summary>
            Instancie un type simple avec vérification sur sa longueur
            </summary>
            <param name="name">Nom du type</param>
            <param name="minLength">Longueur minimale du type (en caractères). Si null, aucune longueur minimale</param>
            <param name="maxLength">Longueur maximale du type (en caractères). Si null, aucune longueur maximale</param>
        </member>
        <member name="M:Ocrus.FieldTypeBase.#ctor(System.String,System.Nullable{System.Int16},System.Nullable{System.Int16},System.String)">
            <summary>
            Instancie un type simple avec vérification sur sa longueur et une regexp
            </summary>
            <param name="name">Nom du type</param>
            <param name="minLength">Longueur minimale du type (en caractères). Si null, aucune longueur minimale</param>
            <param name="maxLength">Longueur maximale du type (en caractères). Si null, aucune longueur maximale</param>
            <param name="regexp">Expression régulière de vérification</param>
        </member>
        <member name="M:Ocrus.FieldTypeBase.CheckValue(System.String)">
            <inheritdoc/>
        </member>
        <member name="T:Ocrus.NumberHelper">
            <summary>
            Classe utilitaire d'aide pour déterminer la longueur d'un nombre en fonction de sa valeur maximale
            </summary>
        </member>
        <member name="M:Ocrus.NumberHelper.Length(System.Nullable{System.Int32})">
            <summary>
            Calcule la longueur d'un entier
            </summary>
            <param name="number">Entier</param>
            <returns>Longueur de l'entier</returns>
        </member>
        <member name="M:Ocrus.NumberHelper.Length(System.Nullable{System.Int64})">
            <summary>
            Calcule la longueur d'un long
            </summary>
            <param name="number">long</param>
            <returns>Longueur du long</returns>
        </member>
        <member name="T:Ocrus.StringFieldType">
            <summary>
            Type string.
            Peut être paramétré par une Regexp invariante selon la culture courante.
            </summary>
        </member>
        <member name="M:Ocrus.StringFieldType.#ctor(System.String)">
            <summary>
            Instancie un type string
            </summary>
            <param name="name">Nom du type</param>
        </member>
        <member name="M:Ocrus.StringFieldType.#ctor(System.String,System.Nullable{System.Int16},System.Nullable{System.Int16})">
            <summary>
            Instancie un type string
            </summary>
            <param name="name">Nom du type</param>
            <param name="minLength">Longueur minimale de la chaine</param>
            <param name="maxLength">Longueur maximale de la chaine</param>
        </member>
        <member name="M:Ocrus.StringFieldType.#ctor(System.String,System.Nullable{System.Int16},System.Nullable{System.Int16},System.String)">
            <summary>
            Instancie un type string
            </summary>
            <param name="name">Nom du type</param>
            <param name="minLength">Longueur minimale de la chaine</param>
            <param name="maxLength">Longueur maximale de la chaine</param>
            <param name="regexp">Expression régulière que doit satisfaire la chaine</param>
        </member>
        <member name="M:Ocrus.StringFieldType.#ctor(System.String,System.String)">
            <summary>
            Instancie un type string
            </summary>
            <param name="name">Nom du type</param>        
            <param name="regexp">Expression régulière que doit satisfaire la chaine</param>
        </member>
        <member name="M:Ocrus.StringFieldType.CheckValue(System.String)">
            <inheritdoc />
        </member>
        <member name="T:Ocrus.DecimalFieldType">
            <summary>
            Type nombre basé sur un <see cref="T:System.Decimal"/>
            </summary>
        </member>
        <member name="M:Ocrus.DecimalFieldType.#ctor(System.String,System.Decimal,System.Decimal)">
            <summary>
            Type nombre basé sur un <see cref="T:System.Decimal"/>
            </summary>
            <param name="name">Nom du type</param>
            <param name="min">Valeur minimale</param>
            <param name="max">Valeur maximale</param>
        </member>
        <member name="M:Ocrus.DecimalFieldType.TryParse(System.String,System.Decimal@)">
            <inheritdoc/>
        </member>
        <member name="T:Ocrus.LongFieldType">
            <summary>
            Type nombre basé sur un <see cref="T:System.Int64"/>
            </summary>
        </member>
        <member name="M:Ocrus.LongFieldType.#ctor(System.String)">
            <summary>
            Type nombre basé sur un <see cref="T:System.Int64"/>
            </summary>
            <param name="name">Nom du type</param>
        </member>
        <member name="M:Ocrus.LongFieldType.#ctor(System.String,System.Nullable{System.Int64},System.Nullable{System.Int64})">
            <summary>
            Type nombre basé sur un <see cref="T:System.Int64"/>
            </summary>
            <param name="name">Nom du type</param>
            <param name="min">Valeur minimale</param>
            <param name="max">Valeur maximale</param>
        </member>
        <member name="M:Ocrus.LongFieldType.#ctor(System.String,System.Nullable{System.Int16},System.Nullable{System.Int16})">
            <summary>
            Type nombre basé sur un <see cref="T:System.Int64"/>
            </summary>
            <param name="name">Nom du type</param>
            <param name="minLength">Longueur minimale</param>
            <param name="maxLength">Longueur maximale</param>
        </member>
        <member name="M:Ocrus.LongFieldType.#ctor(System.String,System.Nullable{System.Int64},System.Nullable{System.Int64},System.Nullable{System.Int16},System.Nullable{System.Int16})">
            <summary>
            Type nombre basé sur un <see cref="T:System.Int64"/>
            </summary>
            <param name="name">Nom du type</param>
            <param name="min">Valeur minimale</param>
            <param name="max">Valeur maximale</param>
            <param name="minLength">Longueur minimale</param>
            <param name="maxLength">Longueur maximale</param>
        </member>
        <member name="M:Ocrus.LongFieldType.TryParse(System.String,System.Int64@)">
            <inheritdoc/>
        </member>
        <member name="T:Ocrus.INumberFieldType`1">
            <summary>
            Type d'un champ
            </summary>
        </member>
        <member name="P:Ocrus.INumberFieldType`1.MinValue">
            <summary>
            Valeur minimale
            Si null, pas de valeur minimale
            </summary>
        </member>
        <member name="P:Ocrus.INumberFieldType`1.MaxValue">
            <summary>
            Valeur maximale
            Si null, pas de valeur maximale
            </summary>
        </member>
        <member name="T:Ocrus.IFieldType">
            <summary>
            Type d'un champ
            </summary>
        </member>
        <member name="P:Ocrus.IFieldType.Name">
            <summary>
            Nom du type
            </summary>
        </member>
        <member name="P:Ocrus.IFieldType.MinLength">
            <summary>
            Longueur minimale du type (en caractères)
            Si null, aucune longueur minimale
            </summary>
        </member>
        <member name="P:Ocrus.IFieldType.MaxLength">
            <summary>
            Longueur maximale du type (en caractères)
            Si null, aucune longueur maximale
            </summary>
        </member>
        <member name="P:Ocrus.IFieldType.RegularExpression">
            <summary>
            Expression régulière que doit respecter le type
            </summary>
        </member>
        <member name="M:Ocrus.IFieldType.CheckValue(System.String)">
            <summary>
            Vérifie la validité de la valeur selon le type
            </summary>
            <param name="value">Valeur à vérifier</param>
            <returns>Résultat de la vérification</returns>
        </member>
        <member name="T:Ocrus.IntegerFieldType">
            <summary>
            Type nombre basé sur un <see cref="T:System.Int32"/>
            </summary>
        </member>
        <member name="M:Ocrus.IntegerFieldType.#ctor(System.String)">
            <summary>
            Type nombre basé sur un <see cref="T:System.Int32"/>
            </summary>
            <param name="name">Nom du type</param>
        </member>
        <member name="M:Ocrus.IntegerFieldType.#ctor(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Type nombre basé sur un <see cref="T:System.Int32"/>
            </summary>
            <param name="name">Nom du type</param>
            <param name="min">Valeur minimale</param>
            <param name="max">Valeur maximale</param>
        </member>
        <member name="M:Ocrus.IntegerFieldType.#ctor(System.String,System.Nullable{System.Int16},System.Nullable{System.Int16})">
            <summary>
            Type nombre basé sur un <see cref="T:System.Int32"/>
            </summary>
            <param name="name">Nom du type</param>
            <param name="minLength">Longueur minimale</param>
            <param name="maxLength">Longueur maximale</param>
        </member>
        <member name="M:Ocrus.IntegerFieldType.#ctor(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int16},System.Nullable{System.Int16})">
            <summary>
            Type nombre basé sur un <see cref="T:System.Int32"/>
            </summary>
            <param name="name">Nom du type</param>
            <param name="min">Valeur minimale</param>
            <param name="max">Valeur maximale</param>
            <param name="minLength">Longueur minimale</param>
            <param name="maxLength">Longueur maximale</param>
        </member>
        <member name="M:Ocrus.IntegerFieldType.TryParse(System.String,System.Int32@)">
            <inheritdoc/>
        </member>
    </members>
</doc>
